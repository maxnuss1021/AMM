{
	"id": "922281fa53017acae6480f35aee1b1ab",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Exchange.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.7;\nimport \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\";\n\n//IMPORTANT: MAKE SURE TO APPROVE THE MAX TOKENS FOR THIS EXCHANGE BEFORE PROVIDING LIQUIDITY\n//All output values for ERC20 are the actual tokens. \n//All output values for the ETH is actually in Wei.\n\n\ncontract Exchange{\n   //initializing the public variables\n   IERC20 ierc20Token;\n   uint contractERC20TokenBalance = 0;\n   //IMPORTANT: contractEthBalance is actually in Wei\n   uint public contractEthBalance = 0;\n   uint totalLiquidityPositions = 0;\n   uint public K = 0;\n   mapping(address => uint) liquidityPositions;\n   //contructor to initialize the token address passed in to the public ierc20Token variable\n   constructor(address adr){\n       address tokenContractAddress = adr;\n       ierc20Token = IERC20(tokenContractAddress);\n   }\n   //modifier to block re-entry of an input so a user cant call the contract in the middle of another call causing issues for withdraws and other operations that could be exploited\n   bool locked = false;\n   modifier nonReentrancy{\n       require (!locked, \"No re-entry\");\n       locked = true;\n       _;\n       locked = false;\n   }\n   //event to show the liquidity that is provided to the contract\n   event LiquidityProvided(uint amountERC20TokenDeposited, uint amountEthDeposited, uint liquidityPositionsIssued);\n\n\n   /*\n   * Adding the erc20 tokens and eth as liquidity to the contract checking for the same liquidity ratio as the current one\n   * Param: uint _amountERC20Token - the amount of erc being provided to the contract\n   * Param (external - Value for Eth):  the value being added for the eth with the similar ratio to the erc\n   * return: uint _liquidity - returns the amount of liquidity positions issued\n   */\n   function provideLiquidity(uint _amountERC20Token) external nonReentrancy payable returns(uint _liquidity){\n\n       uint _amountEth = msg.value;\n       contractEthBalance += _amountEth;\n       //adjusting for erc20 balance\n       _amountERC20Token = _amountERC20Token * 1e18;\n       ierc20Token.approve(address(this), _amountERC20Token);\n       bool success = ierc20Token.transferFrom(msg.sender, address(this), _amountERC20Token);\n       require(success, \"transfer failed. :(\");\n       contractERC20TokenBalance += _amountERC20Token;\n       require((totalLiquidityPositions * _amountERC20Token/contractERC20TokenBalance) == (totalLiquidityPositions * _amountEth/contractEthBalance), \"liquidity inbalance\");\n           if(totalLiquidityPositions == 0){\n               liquidityPositions[msg.sender] = 100;\n               totalLiquidityPositions += liquidityPositions[msg.sender];\n           }else{\n               liquidityPositions[msg.sender] += totalLiquidityPositions * _amountERC20Token / contractERC20TokenBalance;\n               totalLiquidityPositions += (totalLiquidityPositions * _amountERC20Token / contractERC20TokenBalance);\n           }\n       K = contractEthBalance * contractERC20TokenBalance;\n       emit LiquidityProvided(_amountERC20Token, _amountEth, liquidityPositions[msg.sender] );\n       return liquidityPositions[msg.sender];\n   }\n   /*\n   * Estimating the Ethereum amount to provide based on the current ratio and the amount of erc tokens being passed in\n   * Param: uint _amountERC20Token - the amount of erc planned to be added\n   * return: uint _amountEth - returns the amount of eth that would need to be added with the passed in erc value to maintain the ratio\n   */\n   function estimateEthToProvide(uint _amountERC20Token) external view returns (uint _amountEth) {\n       //to delete if Korth says that the input will be in 10*18 format\n       _amountERC20Token = _amountERC20Token * 1e18;\n\n       _amountEth = contractEthBalance * _amountERC20Token / contractERC20TokenBalance;\n       return _amountEth;\n   }\n   /*\n   * Estimating the ERC20 token amount to provide based on the current ratio and the amount of Eth being passed in\n   * Param: uint _amountEth - the amount of Eth planned to be added\n   * return: uint _amountERC20 - returns the amount of ERC20 that would need to be added with the passed in Eth value to maintain the ratio\n   */\n   function estimateERC20TokenToProvide(uint _amountEth) external view returns(uint _amountERC20){\n       _amountERC20 = contractERC20TokenBalance * _amountEth/contractEthBalance;\n       return (_amountERC20/1e18);\n   }\n   /*\n   * Outputs the callers liquidity position based on the address from the mapping\n   * return: uint _liquidity - returns the liquidity position of the user calling the function\n   */\n   function getMyLiquidityPositions() external view returns(uint _liquidity) {\n       return liquidityPositions[msg.sender];\n   }\n   //Event for logging the liquidity that was withdrawn\n   event LiquidityWithdrew(uint amountERC20TokenWithdrew, uint amountEthWithdrew, uint liquidityPositionsBurned);\n   /*\n   * Function to get Eth and ERC20 tokens based on the liquidity positions they are withdrawing\n   * Param: uint _liquidityPositionsToBurn - the amount of position you are giving up\n   * return: uint amountEthToSend - the Eth amount you are receiving for the liquidity position you give up\n   * return: uint amountERC20ToSend - the ERC20 amount you are receiving for the liquidity position you give up\n   */\n   function withdrawLiquidity(uint _liquidityPositionsToBurn) public nonReentrancy payable returns (uint amountEthToSend, uint amountERC20ToSend){\n       if (_liquidityPositionsToBurn <= liquidityPositions[msg.sender] &&  totalLiquidityPositions - _liquidityPositionsToBurn >= 0 ){\n           amountEthToSend = _liquidityPositionsToBurn * contractEthBalance / totalLiquidityPositions;\n           amountERC20ToSend = _liquidityPositionsToBurn * contractERC20TokenBalance / totalLiquidityPositions;\n           liquidityPositions[msg.sender] -= _liquidityPositionsToBurn;\n           totalLiquidityPositions -= _liquidityPositionsToBurn;\n           address payable reciever = payable(msg.sender);\n           reciever.transfer(amountEthToSend);\n           contractEthBalance -= amountEthToSend;\n           ierc20Token.approve(address(this), amountERC20ToSend);\n           ierc20Token.transferFrom(address(this), reciever, amountERC20ToSend);\n           contractERC20TokenBalance -= amountERC20ToSend;\n       }else{\n           amountEthToSend = 0;\n           amountERC20ToSend = 0;\n       }\n       K = contractEthBalance * contractERC20TokenBalance;\n       emit LiquidityWithdrew(amountERC20ToSend, amountEthToSend, _liquidityPositionsToBurn);\n       return (amountEthToSend, amountERC20ToSend);\n   }\n   event SwapForEth(uint amountERC20TokenDeposited, uint amountEthWithdrew);\n   /*\n   * Function to exchange the callers ERC20 tokens for Eth using the K value for appropriate ratios\n   * Param: uint _amountERC20Token - the amount of ERC20 tokens a person is giving up\n   * return: uint ethToSend - The amount of Eth being sent based on the ERC20 Token amount passed in\n   */\n   function swapForEth(uint _amountERC20Token) public nonReentrancy payable returns (uint ethToSend) {\n       //to delete if Korth says that the input will be in 10*18 format\n       _amountERC20Token = _amountERC20Token * 1e18;\n\n       ierc20Token.transferFrom(msg.sender, address(this), _amountERC20Token);\n       contractERC20TokenBalance += _amountERC20Token;\n       uint contractEthBalanceAfterSwap = K / contractERC20TokenBalance;\n       ethToSend = contractEthBalance - contractEthBalanceAfterSwap;\n       address payable reciever = payable(msg.sender);\n       reciever.transfer(ethToSend);\n       contractEthBalance -= ethToSend;\n       emit SwapForEth(_amountERC20Token, ethToSend);\n       return ethToSend;\n   }\n   /*\n   * Function to show how much a person would receive in Eth for the amount of ERC20 tokens they pass in\n   * Param: uint _amountERC20Token - the amount of ERC20 tokens a person is testing to give up\n   * return: uint ethToSend - The amount of Eth shown to be sent back based on the ERC20 Token amount passed in\n   */\n   function estimateSwapForEth(uint _amountERC20Token) external view returns (uint ethToSend){\n       //to delete if Korth says that the input will be in 10*18 format\n       _amountERC20Token = _amountERC20Token * 1e18;\n       \n       uint estimatedContractERC20Balance = contractERC20TokenBalance + _amountERC20Token;\n       uint contractETHBalanceAfterSwap = K / estimatedContractERC20Balance;\n       ethToSend = contractEthBalance - contractETHBalanceAfterSwap;\n       return ethToSend;\n   }\n   event SwapForERC20Token(uint amountERC20TokenWithdrew, uint amountEthDeposited);\n\n\n   /*\n   * Function to exchange the callers Eth for ERC20 tokens using the K value for appropriate ratios\n   * Param (external - Value for Eth):  the value being added for the Eth that will be exchanged for ERC20 Tokens\n   * return: uint ERC20TokenToSend - The amount of ERC20 Tokens being sent based on the Eth amount passed in\n   */\n   function swapForERC20Token() external nonReentrancy payable returns (uint ERC20TokenToSend){\n       contractEthBalance += msg.value;\n       uint contractERC20TokenBalanceAfterSwap = K / contractEthBalance;\n       ERC20TokenToSend = contractERC20TokenBalance - contractERC20TokenBalanceAfterSwap;\n       address payable reciever = payable(msg.sender);\n       ierc20Token.approve(address(this), ERC20TokenToSend);\n       ierc20Token.transferFrom(address(this), reciever, ERC20TokenToSend);\n       contractERC20TokenBalance = contractERC20TokenBalanceAfterSwap;\n       emit SwapForERC20Token(ERC20TokenToSend,msg.value);\n       return ERC20TokenToSend;\n   }\n   /*\n   * Function to show how much a person would receive in ERC20 Tokens for the amount of Eth they pass in\n   * Param: uint _amountEth - the amount of Eth a person is testing to give up\n   * return: uint ERC20TokenToSend - The amount of ERC20 Tokens shown to be sent back based on the Eth amount passed in\n   */\n   function estimateSwapForERC20Token(uint _amountEth) external view returns (uint ERC20TokenToSend){\n       uint estimatedContractEthBalance = contractEthBalance + _amountEth;\n       uint contractERC20TokenBalanceAfterSwap = K / estimatedContractEthBalance;\n       ERC20TokenToSend = contractERC20TokenBalance - contractERC20TokenBalanceAfterSwap;\n       return (ERC20TokenToSend/1e19);\n   }\n   /*\n   * Outputs the balance of the ERC20 Tokens for that address instance\n   * return: uint - The amount of ERC20 Tokens of the balance in that instance from where it is called\n   */\n   function _ERC20TokenBalance() external view returns (uint) {\n       return (ierc20Token.balanceOf(address(this))/1e18);\n   }\n}\n\n\n\n"
			},
			"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"
			},
			"openzeppelin-contracts/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Exchange.sol": {
				"Exchange": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "adr",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountERC20TokenDeposited",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountEthDeposited",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidityPositionsIssued",
									"type": "uint256"
								}
							],
							"name": "LiquidityProvided",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountERC20TokenWithdrew",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountEthWithdrew",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidityPositionsBurned",
									"type": "uint256"
								}
							],
							"name": "LiquidityWithdrew",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountERC20TokenWithdrew",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountEthDeposited",
									"type": "uint256"
								}
							],
							"name": "SwapForERC20Token",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountERC20TokenDeposited",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountEthWithdrew",
									"type": "uint256"
								}
							],
							"name": "SwapForEth",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "K",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_ERC20TokenBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "contractEthBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amountEth",
									"type": "uint256"
								}
							],
							"name": "estimateERC20TokenToProvide",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_amountERC20",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amountERC20Token",
									"type": "uint256"
								}
							],
							"name": "estimateEthToProvide",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_amountEth",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amountEth",
									"type": "uint256"
								}
							],
							"name": "estimateSwapForERC20Token",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "ERC20TokenToSend",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amountERC20Token",
									"type": "uint256"
								}
							],
							"name": "estimateSwapForEth",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "ethToSend",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getMyLiquidityPositions",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amountERC20Token",
									"type": "uint256"
								}
							],
							"name": "provideLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapForERC20Token",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "ERC20TokenToSend",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amountERC20Token",
									"type": "uint256"
								}
							],
							"name": "swapForEth",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "ethToSend",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_liquidityPositionsToBurn",
									"type": "uint256"
								}
							],
							"name": "withdrawLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountEthToSend",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountERC20ToSend",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Exchange.sol\":331:10613  contract Exchange{... */\n  mstore(0x40, 0x80)\n    /* \"Exchange.sol\":448:449  0 */\n  0x00\n    /* \"Exchange.sol\":415:449  uint contractERC20TokenBalance = 0 */\n  0x01\n  sstore\n    /* \"Exchange.sol\":541:542  0 */\n  0x00\n    /* \"Exchange.sol\":508:542  uint public contractEthBalance = 0 */\n  0x02\n  sstore\n    /* \"Exchange.sol\":578:579  0 */\n  0x00\n    /* \"Exchange.sol\":547:579  uint totalLiquidityPositions = 0 */\n  0x03\n  sstore\n    /* \"Exchange.sol\":600:601  0 */\n  0x00\n    /* \"Exchange.sol\":584:601  uint public K = 0 */\n  0x04\n  sstore\n    /* \"Exchange.sol\":1070:1075  false */\n  0x00\n    /* \"Exchange.sol\":1056:1075  bool locked = false */\n  0x06\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Exchange.sol\":747:871  constructor(address adr){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Exchange.sol\":780:808  address tokenContractAddress */\n  0x00\n    /* \"Exchange.sol\":811:814  adr */\n  dup2\n    /* \"Exchange.sol\":780:814  address tokenContractAddress = adr */\n  swap1\n  pop\n    /* \"Exchange.sol\":844:864  tokenContractAddress */\n  dup1\n    /* \"Exchange.sol\":823:834  ierc20Token */\n  0x00\n  dup1\n    /* \"Exchange.sol\":823:865  ierc20Token = IERC20(tokenContractAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Exchange.sol\":771:871  {... */\n  pop\n    /* \"Exchange.sol\":747:871  constructor(address adr){... */\n  pop\n    /* \"Exchange.sol\":331:10613  contract Exchange{... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:507   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:362   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":281:360   */\n  tag_14\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":243:362   */\ntag_13:\n    /* \"#utility.yul\":401:402   */\n  0x00\n    /* \"#utility.yul\":426:490   */\n  tag_16\n    /* \"#utility.yul\":482:489   */\n  dup5\n    /* \"#utility.yul\":473:479   */\n  dup3\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":426:490   */\n  tag_8\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":416:490   */\n  swap2\n  pop\n    /* \"#utility.yul\":372:500   */\n  pop\n    /* \"#utility.yul\":156:507   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":594:690   */\ntag_19:\n    /* \"#utility.yul\":631:638   */\n  0x00\n    /* \"#utility.yul\":660:684   */\n  tag_21\n    /* \"#utility.yul\":678:683   */\n  dup3\n    /* \"#utility.yul\":660:684   */\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":649:684   */\n  swap1\n  pop\n    /* \"#utility.yul\":594:690   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:822   */\ntag_22:\n    /* \"#utility.yul\":733:740   */\n  0x00\n    /* \"#utility.yul\":773:815   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":766:771   */\n  dup3\n    /* \"#utility.yul\":762:816   */\n  and\n    /* \"#utility.yul\":751:816   */\n  swap1\n  pop\n    /* \"#utility.yul\":696:822   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":951:1068   */\ntag_15:\n    /* \"#utility.yul\":1060:1061   */\n  0x00\n    /* \"#utility.yul\":1057:1058   */\n  dup1\n    /* \"#utility.yul\":1050:1062   */\n  revert\n    /* \"#utility.yul\":1074:1196   */\ntag_11:\n    /* \"#utility.yul\":1147:1171   */\n  tag_28\n    /* \"#utility.yul\":1165:1170   */\n  dup2\n    /* \"#utility.yul\":1147:1171   */\n  tag_19\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":1140:1145   */\n  dup2\n    /* \"#utility.yul\":1137:1172   */\n  eq\n    /* \"#utility.yul\":1127:1190   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1186:1187   */\n  0x00\n    /* \"#utility.yul\":1183:1184   */\n  dup1\n    /* \"#utility.yul\":1176:1188   */\n  revert\n    /* \"#utility.yul\":1127:1190   */\ntag_29:\n    /* \"#utility.yul\":1074:1196   */\n  pop\n  jump\t// out\n    /* \"Exchange.sol\":331:10613  contract Exchange{... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Exchange.sol\":331:10613  contract Exchange{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa932492f\n      gt\n      tag_14\n      jumpi\n      dup1\n      0xa932492f\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xbc23ae5e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xc8ab8325\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xe0ba2000\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xeb521a4c\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xed7bf868\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_14:\n      dup1\n      0x0a861f2a\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x240f3dea\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x29cbab3e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5d58ce36\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x79ed3562\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x903875f7\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Exchange.sol\":5302:6593  function withdrawLiquidity(uint _liquidityPositionsToBurn) public nonReentrancy payable returns (uint amountEthToSend, uint amountERC20ToSend){... */\n    tag_2:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_19\n      swap3\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Exchange.sol\":3500:3840  function estimateEthToProvide(uint _amountERC20Token) external view returns (uint _amountEth) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_23:\n      tag_24\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Exchange.sol\":8934:9588  function swapForERC20Token() external nonReentrancy payable returns (uint ERC20TokenToSend){... */\n    tag_4:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Exchange.sol\":508:542  uint public contractEthBalance = 0 */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Exchange.sol\":9908:10297  function estimateSwapForERC20Token(uint _amountEth) external view returns (uint ERC20TokenToSend){... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_36:\n      tag_37\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Exchange.sol\":8018:8509  function estimateSwapForEth(uint _amountERC20Token) external view returns (uint ethToSend){... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Exchange.sol\":584:601  uint public K = 0 */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Exchange.sol\":10487:10611  function _ERC20TokenBalance() external view returns (uint) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Exchange.sol\":6973:7690  function swapForEth(uint _amountERC20Token) public nonReentrancy payable returns (uint ethToSend) {... */\n    tag_10:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Exchange.sol\":4588:4714  function getMyLiquidityPositions() external view returns(uint _liquidity) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Exchange.sol\":1801:3154  function provideLiquidity(uint _amountERC20Token) external nonReentrancy payable returns(uint _liquidity){... */\n    tag_12:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Exchange.sol\":4179:4395  function estimateERC20TokenToProvide(uint _amountEth) external view returns(uint _amountERC20){... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Exchange.sol\":5302:6593  function withdrawLiquidity(uint _liquidityPositionsToBurn) public nonReentrancy payable returns (uint amountEthToSend, uint amountERC20ToSend){... */\n    tag_18:\n        /* \"Exchange.sol\":5399:5419  uint amountEthToSend */\n      0x00\n        /* \"Exchange.sol\":5421:5443  uint amountERC20ToSend */\n      dup1\n        /* \"Exchange.sol\":1121:1127  locked */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Exchange.sol\":1120:1127  !locked */\n      iszero\n        /* \"Exchange.sol\":1111:1143  require (!locked, \"No re-entry\") */\n      tag_70\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_71\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_70:\n        /* \"Exchange.sol\":1161:1165  true */\n      0x01\n        /* \"Exchange.sol\":1152:1158  locked */\n      0x06\n      0x00\n        /* \"Exchange.sol\":1152:1165  locked = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Exchange.sol\":5486:5504  liquidityPositions */\n      0x05\n        /* \"Exchange.sol\":5486:5516  liquidityPositions[msg.sender] */\n      0x00\n        /* \"Exchange.sol\":5505:5515  msg.sender */\n      caller\n        /* \"Exchange.sol\":5486:5516  liquidityPositions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Exchange.sol\":5457:5482  _liquidityPositionsToBurn */\n      dup4\n        /* \"Exchange.sol\":5457:5516  _liquidityPositionsToBurn <= liquidityPositions[msg.sender] */\n      gt\n      iszero\n        /* \"Exchange.sol\":5457:5577  _liquidityPositionsToBurn <= liquidityPositions[msg.sender] &&  totalLiquidityPositions - _liquidityPositionsToBurn >= 0 */\n      dup1\n      iszero\n      tag_74\n      jumpi\n      pop\n        /* \"Exchange.sol\":5576:5577  0 */\n      0x00\n        /* \"Exchange.sol\":5547:5572  _liquidityPositionsToBurn */\n      dup4\n        /* \"Exchange.sol\":5521:5544  totalLiquidityPositions */\n      sload(0x03)\n        /* \"Exchange.sol\":5521:5572  totalLiquidityPositions - _liquidityPositionsToBurn */\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n        /* \"Exchange.sol\":5521:5577  totalLiquidityPositions - _liquidityPositionsToBurn >= 0 */\n      lt\n      iszero\n        /* \"Exchange.sol\":5457:5577  _liquidityPositionsToBurn <= liquidityPositions[msg.sender] &&  totalLiquidityPositions - _liquidityPositionsToBurn >= 0 */\n    tag_74:\n        /* \"Exchange.sol\":5453:6383  if (_liquidityPositionsToBurn <= liquidityPositions[msg.sender] &&  totalLiquidityPositions - _liquidityPositionsToBurn >= 0 ){... */\n      iszero\n      tag_77\n      jumpi\n        /* \"Exchange.sol\":5659:5682  totalLiquidityPositions */\n      sload(0x03)\n        /* \"Exchange.sol\":5638:5656  contractEthBalance */\n      sload(0x02)\n        /* \"Exchange.sol\":5610:5635  _liquidityPositionsToBurn */\n      dup5\n        /* \"Exchange.sol\":5610:5656  _liquidityPositionsToBurn * contractEthBalance */\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n        /* \"Exchange.sol\":5610:5682  _liquidityPositionsToBurn * contractEthBalance / totalLiquidityPositions */\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n        /* \"Exchange.sol\":5592:5682  amountEthToSend = _liquidityPositionsToBurn * contractEthBalance / totalLiquidityPositions */\n      swap2\n      pop\n        /* \"Exchange.sol\":5771:5794  totalLiquidityPositions */\n      sload(0x03)\n        /* \"Exchange.sol\":5743:5768  contractERC20TokenBalance */\n      sload(0x01)\n        /* \"Exchange.sol\":5715:5740  _liquidityPositionsToBurn */\n      dup5\n        /* \"Exchange.sol\":5715:5768  _liquidityPositionsToBurn * contractERC20TokenBalance */\n      tag_82\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_82:\n        /* \"Exchange.sol\":5715:5794  _liquidityPositionsToBurn * contractERC20TokenBalance / totalLiquidityPositions */\n      tag_83\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_83:\n        /* \"Exchange.sol\":5695:5794  amountERC20ToSend = _liquidityPositionsToBurn * contractERC20TokenBalance / totalLiquidityPositions */\n      swap1\n      pop\n        /* \"Exchange.sol\":5841:5866  _liquidityPositionsToBurn */\n      dup3\n        /* \"Exchange.sol\":5807:5825  liquidityPositions */\n      0x05\n        /* \"Exchange.sol\":5807:5837  liquidityPositions[msg.sender] */\n      0x00\n        /* \"Exchange.sol\":5826:5836  msg.sender */\n      caller\n        /* \"Exchange.sol\":5807:5837  liquidityPositions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Exchange.sol\":5807:5866  liquidityPositions[msg.sender] -= _liquidityPositionsToBurn */\n      dup3\n      dup3\n      sload\n      tag_84\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_84:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Exchange.sol\":5906:5931  _liquidityPositionsToBurn */\n      dup3\n        /* \"Exchange.sol\":5879:5902  totalLiquidityPositions */\n      0x03\n      0x00\n        /* \"Exchange.sol\":5879:5931  totalLiquidityPositions -= _liquidityPositionsToBurn */\n      dup3\n      dup3\n      sload\n      tag_85\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_85:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Exchange.sol\":5944:5968  address payable reciever */\n      0x00\n        /* \"Exchange.sol\":5979:5989  msg.sender */\n      caller\n        /* \"Exchange.sol\":5944:5990  address payable reciever = payable(msg.sender) */\n      swap1\n      pop\n        /* \"Exchange.sol\":6003:6011  reciever */\n      dup1\n        /* \"Exchange.sol\":6003:6020  reciever.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Exchange.sol\":6003:6037  reciever.transfer(amountEthToSend) */\n      0x08fc\n        /* \"Exchange.sol\":6021:6036  amountEthToSend */\n      dup5\n        /* \"Exchange.sol\":6003:6037  reciever.transfer(amountEthToSend) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_87\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_87:\n      pop\n        /* \"Exchange.sol\":6072:6087  amountEthToSend */\n      dup3\n        /* \"Exchange.sol\":6050:6068  contractEthBalance */\n      0x02\n      0x00\n        /* \"Exchange.sol\":6050:6087  contractEthBalance -= amountEthToSend */\n      dup3\n      dup3\n      sload\n      tag_88\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_88:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Exchange.sol\":6100:6111  ierc20Token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Exchange.sol\":6100:6119  ierc20Token.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"Exchange.sol\":6128:6132  this */\n      address\n        /* \"Exchange.sol\":6135:6152  amountERC20ToSend */\n      dup5\n        /* \"Exchange.sol\":6100:6153  ierc20Token.approve(address(this), amountERC20ToSend) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap3\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_93\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      pop\n        /* \"Exchange.sol\":6166:6177  ierc20Token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Exchange.sol\":6166:6190  ierc20Token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"Exchange.sol\":6199:6203  this */\n      address\n        /* \"Exchange.sol\":6206:6214  reciever */\n      dup4\n        /* \"Exchange.sol\":6216:6233  amountERC20ToSend */\n      dup6\n        /* \"Exchange.sol\":6166:6234  ierc20Token.transferFrom(address(this), reciever, amountERC20ToSend) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_100\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_100:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_101:\n      pop\n        /* \"Exchange.sol\":6276:6293  amountERC20ToSend */\n      dup2\n        /* \"Exchange.sol\":6247:6272  contractERC20TokenBalance */\n      0x01\n      0x00\n        /* \"Exchange.sol\":6247:6293  contractERC20TokenBalance -= amountERC20ToSend */\n      dup3\n      dup3\n      sload\n      tag_102\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_102:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Exchange.sol\":5579:6303  {... */\n      pop\n        /* \"Exchange.sol\":5453:6383  if (_liquidityPositionsToBurn <= liquidityPositions[msg.sender] &&  totalLiquidityPositions - _liquidityPositionsToBurn >= 0 ){... */\n      jump(tag_103)\n    tag_77:\n        /* \"Exchange.sol\":6338:6339  0 */\n      0x00\n        /* \"Exchange.sol\":6320:6339  amountEthToSend = 0 */\n      swap2\n      pop\n        /* \"Exchange.sol\":6372:6373  0 */\n      0x00\n        /* \"Exchange.sol\":6352:6373  amountERC20ToSend = 0 */\n      swap1\n      pop\n        /* \"Exchange.sol\":5453:6383  if (_liquidityPositionsToBurn <= liquidityPositions[msg.sender] &&  totalLiquidityPositions - _liquidityPositionsToBurn >= 0 ){... */\n    tag_103:\n        /* \"Exchange.sol\":6416:6441  contractERC20TokenBalance */\n      sload(0x01)\n        /* \"Exchange.sol\":6395:6413  contractEthBalance */\n      sload(0x02)\n        /* \"Exchange.sol\":6395:6441  contractEthBalance * contractERC20TokenBalance */\n      tag_104\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_104:\n        /* \"Exchange.sol\":6391:6392  K */\n      0x04\n        /* \"Exchange.sol\":6391:6441  K = contractEthBalance * contractERC20TokenBalance */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Exchange.sol\":6455:6535  LiquidityWithdrew(amountERC20ToSend, amountEthToSend, _liquidityPositionsToBurn) */\n      0xb14f451e613015c13a17c78777f1d87fcb448d7330d67299a09b8f2db38aab10\n        /* \"Exchange.sol\":6473:6490  amountERC20ToSend */\n      dup2\n        /* \"Exchange.sol\":6492:6507  amountEthToSend */\n      dup4\n        /* \"Exchange.sol\":6509:6534  _liquidityPositionsToBurn */\n      dup6\n        /* \"Exchange.sol\":6455:6535  LiquidityWithdrew(amountERC20ToSend, amountEthToSend, _liquidityPositionsToBurn) */\n      mload(0x40)\n      tag_105\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Exchange.sol\":1193:1198  false */\n      0x00\n        /* \"Exchange.sol\":1184:1190  locked */\n      0x06\n      0x00\n        /* \"Exchange.sol\":1184:1198  locked = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Exchange.sol\":5302:6593  function withdrawLiquidity(uint _liquidityPositionsToBurn) public nonReentrancy payable returns (uint amountEthToSend, uint amountERC20ToSend){... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"Exchange.sol\":3500:3840  function estimateEthToProvide(uint _amountERC20Token) external view returns (uint _amountEth) {... */\n    tag_24:\n        /* \"Exchange.sol\":3577:3592  uint _amountEth */\n      0x00\n        /* \"Exchange.sol\":3715:3719  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Exchange.sol\":3695:3712  _amountERC20Token */\n      dup3\n        /* \"Exchange.sol\":3695:3719  _amountERC20Token * 1e18 */\n      tag_108\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_108:\n        /* \"Exchange.sol\":3675:3719  _amountERC20Token = _amountERC20Token * 1e18 */\n      swap2\n      pop\n        /* \"Exchange.sol\":3783:3808  contractERC20TokenBalance */\n      sload(0x01)\n        /* \"Exchange.sol\":3763:3780  _amountERC20Token */\n      dup3\n        /* \"Exchange.sol\":3742:3760  contractEthBalance */\n      sload(0x02)\n        /* \"Exchange.sol\":3742:3780  contractEthBalance * _amountERC20Token */\n      tag_109\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_109:\n        /* \"Exchange.sol\":3742:3808  contractEthBalance * _amountERC20Token / contractERC20TokenBalance */\n      tag_110\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_110:\n        /* \"Exchange.sol\":3729:3808  _amountEth = contractEthBalance * _amountERC20Token / contractERC20TokenBalance */\n      swap1\n      pop\n        /* \"Exchange.sol\":3500:3840  function estimateEthToProvide(uint _amountERC20Token) external view returns (uint _amountEth) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Exchange.sol\":8934:9588  function swapForERC20Token() external nonReentrancy payable returns (uint ERC20TokenToSend){... */\n    tag_28:\n        /* \"Exchange.sol\":9003:9024  uint ERC20TokenToSend */\n      0x00\n        /* \"Exchange.sol\":1121:1127  locked */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Exchange.sol\":1120:1127  !locked */\n      iszero\n        /* \"Exchange.sol\":1111:1143  require (!locked, \"No re-entry\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_72\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"Exchange.sol\":1161:1165  true */\n      0x01\n        /* \"Exchange.sol\":1152:1158  locked */\n      0x06\n      0x00\n        /* \"Exchange.sol\":1152:1165  locked = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Exchange.sol\":9056:9065  msg.value */\n      callvalue\n        /* \"Exchange.sol\":9034:9052  contractEthBalance */\n      0x02\n      0x00\n        /* \"Exchange.sol\":9034:9065  contractEthBalance += msg.value */\n      dup3\n      dup3\n      sload\n      tag_115\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Exchange.sol\":9074:9113  uint contractERC20TokenBalanceAfterSwap */\n      0x00\n        /* \"Exchange.sol\":9120:9138  contractEthBalance */\n      sload(0x02)\n        /* \"Exchange.sol\":9116:9117  K */\n      sload(0x04)\n        /* \"Exchange.sol\":9116:9138  K / contractEthBalance */\n      tag_117\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_117:\n        /* \"Exchange.sol\":9074:9138  uint contractERC20TokenBalanceAfterSwap = K / contractEthBalance */\n      swap1\n      pop\n        /* \"Exchange.sol\":9194:9228  contractERC20TokenBalanceAfterSwap */\n      dup1\n        /* \"Exchange.sol\":9166:9191  contractERC20TokenBalance */\n      sload(0x01)\n        /* \"Exchange.sol\":9166:9228  contractERC20TokenBalance - contractERC20TokenBalanceAfterSwap */\n      tag_118\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_118:\n        /* \"Exchange.sol\":9147:9228  ERC20TokenToSend = contractERC20TokenBalance - contractERC20TokenBalanceAfterSwap */\n      swap2\n      pop\n        /* \"Exchange.sol\":9237:9261  address payable reciever */\n      0x00\n        /* \"Exchange.sol\":9272:9282  msg.sender */\n      caller\n        /* \"Exchange.sol\":9237:9283  address payable reciever = payable(msg.sender) */\n      swap1\n      pop\n        /* \"Exchange.sol\":9292:9303  ierc20Token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Exchange.sol\":9292:9311  ierc20Token.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"Exchange.sol\":9320:9324  this */\n      address\n        /* \"Exchange.sol\":9327:9343  ERC20TokenToSend */\n      dup6\n        /* \"Exchange.sol\":9292:9344  ierc20Token.approve(address(this), ERC20TokenToSend) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap3\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_119:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_122\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_122:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_123\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_123:\n      pop\n        /* \"Exchange.sol\":9353:9364  ierc20Token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Exchange.sol\":9353:9377  ierc20Token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"Exchange.sol\":9386:9390  this */\n      address\n        /* \"Exchange.sol\":9393:9401  reciever */\n      dup4\n        /* \"Exchange.sol\":9403:9419  ERC20TokenToSend */\n      dup7\n        /* \"Exchange.sol\":9353:9420  ierc20Token.transferFrom(address(this), reciever, ERC20TokenToSend) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_124:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_127\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_127:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_128\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_128:\n      pop\n        /* \"Exchange.sol\":9457:9491  contractERC20TokenBalanceAfterSwap */\n      dup2\n        /* \"Exchange.sol\":9429:9454  contractERC20TokenBalance */\n      0x01\n        /* \"Exchange.sol\":9429:9491  contractERC20TokenBalance = contractERC20TokenBalanceAfterSwap */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Exchange.sol\":9505:9550  SwapForERC20Token(ERC20TokenToSend,msg.value) */\n      0xcdfc57b3d0cdc24b23cea1f480aabea287321f5bee23ad76c2b52fa7982f5ea5\n        /* \"Exchange.sol\":9523:9539  ERC20TokenToSend */\n      dup4\n        /* \"Exchange.sol\":9540:9549  msg.value */\n      callvalue\n        /* \"Exchange.sol\":9505:9550  SwapForERC20Token(ERC20TokenToSend,msg.value) */\n      mload(0x40)\n      tag_129\n      swap3\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Exchange.sol\":9559:9582  return ERC20TokenToSend */\n      pop\n      pop\n        /* \"Exchange.sol\":1193:1198  false */\n      0x00\n        /* \"Exchange.sol\":1184:1190  locked */\n      0x06\n      0x00\n        /* \"Exchange.sol\":1184:1198  locked = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Exchange.sol\":8934:9588  function swapForERC20Token() external nonReentrancy payable returns (uint ERC20TokenToSend){... */\n      swap1\n      jump\t// out\n        /* \"Exchange.sol\":508:542  uint public contractEthBalance = 0 */\n    tag_32:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"Exchange.sol\":9908:10297  function estimateSwapForERC20Token(uint _amountEth) external view returns (uint ERC20TokenToSend){... */\n    tag_37:\n        /* \"Exchange.sol\":9983:10004  uint ERC20TokenToSend */\n      0x00\n        /* \"Exchange.sol\":10014:10046  uint estimatedContractEthBalance */\n      dup1\n        /* \"Exchange.sol\":10070:10080  _amountEth */\n      dup3\n        /* \"Exchange.sol\":10049:10067  contractEthBalance */\n      sload(0x02)\n        /* \"Exchange.sol\":10049:10080  contractEthBalance + _amountEth */\n      tag_131\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_131:\n        /* \"Exchange.sol\":10014:10080  uint estimatedContractEthBalance = contractEthBalance + _amountEth */\n      swap1\n      pop\n        /* \"Exchange.sol\":10089:10128  uint contractERC20TokenBalanceAfterSwap */\n      0x00\n        /* \"Exchange.sol\":10135:10162  estimatedContractEthBalance */\n      dup2\n        /* \"Exchange.sol\":10131:10132  K */\n      sload(0x04)\n        /* \"Exchange.sol\":10131:10162  K / estimatedContractEthBalance */\n      tag_132\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_132:\n        /* \"Exchange.sol\":10089:10162  uint contractERC20TokenBalanceAfterSwap = K / estimatedContractEthBalance */\n      swap1\n      pop\n        /* \"Exchange.sol\":10218:10252  contractERC20TokenBalanceAfterSwap */\n      dup1\n        /* \"Exchange.sol\":10190:10215  contractERC20TokenBalance */\n      sload(0x01)\n        /* \"Exchange.sol\":10190:10252  contractERC20TokenBalance - contractERC20TokenBalanceAfterSwap */\n      tag_133\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_133:\n        /* \"Exchange.sol\":10171:10252  ERC20TokenToSend = contractERC20TokenBalance - contractERC20TokenBalanceAfterSwap */\n      swap3\n      pop\n        /* \"Exchange.sol\":10286:10290  1e19 */\n      0x8ac7230489e80000\n        /* \"Exchange.sol\":10269:10285  ERC20TokenToSend */\n      dup4\n        /* \"Exchange.sol\":10269:10290  ERC20TokenToSend/1e19 */\n      tag_134\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_134:\n        /* \"Exchange.sol\":10261:10291  return (ERC20TokenToSend/1e19) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Exchange.sol\":9908:10297  function estimateSwapForERC20Token(uint _amountEth) external view returns (uint ERC20TokenToSend){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Exchange.sol\":8018:8509  function estimateSwapForEth(uint _amountERC20Token) external view returns (uint ethToSend){... */\n    tag_42:\n        /* \"Exchange.sol\":8093:8107  uint ethToSend */\n      0x00\n        /* \"Exchange.sol\":8229:8233  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Exchange.sol\":8209:8226  _amountERC20Token */\n      dup3\n        /* \"Exchange.sol\":8209:8233  _amountERC20Token * 1e18 */\n      tag_136\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_136:\n        /* \"Exchange.sol\":8189:8233  _amountERC20Token = _amountERC20Token * 1e18 */\n      swap2\n      pop\n        /* \"Exchange.sol\":8250:8284  uint estimatedContractERC20Balance */\n      0x00\n        /* \"Exchange.sol\":8315:8332  _amountERC20Token */\n      dup3\n        /* \"Exchange.sol\":8287:8312  contractERC20TokenBalance */\n      sload(0x01)\n        /* \"Exchange.sol\":8287:8332  contractERC20TokenBalance + _amountERC20Token */\n      tag_137\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_137:\n        /* \"Exchange.sol\":8250:8332  uint estimatedContractERC20Balance = contractERC20TokenBalance + _amountERC20Token */\n      swap1\n      pop\n        /* \"Exchange.sol\":8341:8373  uint contractETHBalanceAfterSwap */\n      0x00\n        /* \"Exchange.sol\":8380:8409  estimatedContractERC20Balance */\n      dup2\n        /* \"Exchange.sol\":8376:8377  K */\n      sload(0x04)\n        /* \"Exchange.sol\":8376:8409  K / estimatedContractERC20Balance */\n      tag_138\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_138:\n        /* \"Exchange.sol\":8341:8409  uint contractETHBalanceAfterSwap = K / estimatedContractERC20Balance */\n      swap1\n      pop\n        /* \"Exchange.sol\":8451:8478  contractETHBalanceAfterSwap */\n      dup1\n        /* \"Exchange.sol\":8430:8448  contractEthBalance */\n      sload(0x02)\n        /* \"Exchange.sol\":8430:8478  contractEthBalance - contractETHBalanceAfterSwap */\n      tag_139\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_139:\n        /* \"Exchange.sol\":8418:8478  ethToSend = contractEthBalance - contractETHBalanceAfterSwap */\n      swap3\n      pop\n        /* \"Exchange.sol\":8487:8503  return ethToSend */\n      pop\n      pop\n        /* \"Exchange.sol\":8018:8509  function estimateSwapForEth(uint _amountERC20Token) external view returns (uint ethToSend){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Exchange.sol\":584:601  uint public K = 0 */\n    tag_46:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"Exchange.sol\":10487:10611  function _ERC20TokenBalance() external view returns (uint) {... */\n    tag_50:\n        /* \"Exchange.sol\":10540:10544  uint */\n      0x00\n        /* \"Exchange.sol\":10600:10604  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Exchange.sol\":10563:10574  ierc20Token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Exchange.sol\":10563:10584  ierc20Token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Exchange.sol\":10593:10597  this */\n      address\n        /* \"Exchange.sol\":10563:10599  ierc20Token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_143\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_143:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_145\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_145:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_146\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n        /* \"Exchange.sol\":10563:10604  ierc20Token.balanceOf(address(this))/1e18 */\n      tag_148\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_148:\n        /* \"Exchange.sol\":10555:10605  return (ierc20Token.balanceOf(address(this))/1e18) */\n      swap1\n      pop\n        /* \"Exchange.sol\":10487:10611  function _ERC20TokenBalance() external view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"Exchange.sol\":6973:7690  function swapForEth(uint _amountERC20Token) public nonReentrancy payable returns (uint ethToSend) {... */\n    tag_54:\n        /* \"Exchange.sol\":7055:7069  uint ethToSend */\n      0x00\n        /* \"Exchange.sol\":1121:1127  locked */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Exchange.sol\":1120:1127  !locked */\n      iszero\n        /* \"Exchange.sol\":1111:1143  require (!locked, \"No re-entry\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_72\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_150:\n        /* \"Exchange.sol\":1161:1165  true */\n      0x01\n        /* \"Exchange.sol\":1152:1158  locked */\n      0x06\n      0x00\n        /* \"Exchange.sol\":1152:1165  locked = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Exchange.sol\":7192:7196  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Exchange.sol\":7172:7189  _amountERC20Token */\n      dup3\n        /* \"Exchange.sol\":7172:7196  _amountERC20Token * 1e18 */\n      tag_153\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_153:\n        /* \"Exchange.sol\":7152:7196  _amountERC20Token = _amountERC20Token * 1e18 */\n      swap2\n      pop\n        /* \"Exchange.sol\":7206:7217  ierc20Token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Exchange.sol\":7206:7230  ierc20Token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"Exchange.sol\":7231:7241  msg.sender */\n      caller\n        /* \"Exchange.sol\":7251:7255  this */\n      address\n        /* \"Exchange.sol\":7258:7275  _amountERC20Token */\n      dup6\n        /* \"Exchange.sol\":7206:7276  ierc20Token.transferFrom(msg.sender, address(this), _amountERC20Token) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_156\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_156:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_158\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_158:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_159\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_159:\n      pop\n        /* \"Exchange.sol\":7314:7331  _amountERC20Token */\n      dup2\n        /* \"Exchange.sol\":7285:7310  contractERC20TokenBalance */\n      0x01\n      0x00\n        /* \"Exchange.sol\":7285:7331  contractERC20TokenBalance += _amountERC20Token */\n      dup3\n      dup3\n      sload\n      tag_160\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_160:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Exchange.sol\":7340:7372  uint contractEthBalanceAfterSwap */\n      0x00\n        /* \"Exchange.sol\":7379:7404  contractERC20TokenBalance */\n      sload(0x01)\n        /* \"Exchange.sol\":7375:7376  K */\n      sload(0x04)\n        /* \"Exchange.sol\":7375:7404  K / contractERC20TokenBalance */\n      tag_161\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_161:\n        /* \"Exchange.sol\":7340:7404  uint contractEthBalanceAfterSwap = K / contractERC20TokenBalance */\n      swap1\n      pop\n        /* \"Exchange.sol\":7446:7473  contractEthBalanceAfterSwap */\n      dup1\n        /* \"Exchange.sol\":7425:7443  contractEthBalance */\n      sload(0x02)\n        /* \"Exchange.sol\":7425:7473  contractEthBalance - contractEthBalanceAfterSwap */\n      tag_162\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_162:\n        /* \"Exchange.sol\":7413:7473  ethToSend = contractEthBalance - contractEthBalanceAfterSwap */\n      swap2\n      pop\n        /* \"Exchange.sol\":7482:7506  address payable reciever */\n      0x00\n        /* \"Exchange.sol\":7517:7527  msg.sender */\n      caller\n        /* \"Exchange.sol\":7482:7528  address payable reciever = payable(msg.sender) */\n      swap1\n      pop\n        /* \"Exchange.sol\":7537:7545  reciever */\n      dup1\n        /* \"Exchange.sol\":7537:7554  reciever.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Exchange.sol\":7537:7565  reciever.transfer(ethToSend) */\n      0x08fc\n        /* \"Exchange.sol\":7555:7564  ethToSend */\n      dup5\n        /* \"Exchange.sol\":7537:7565  reciever.transfer(ethToSend) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_164\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_164:\n      pop\n        /* \"Exchange.sol\":7596:7605  ethToSend */\n      dup3\n        /* \"Exchange.sol\":7574:7592  contractEthBalance */\n      0x02\n      0x00\n        /* \"Exchange.sol\":7574:7605  contractEthBalance -= ethToSend */\n      dup3\n      dup3\n      sload\n      tag_165\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_165:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Exchange.sol\":7619:7659  SwapForEth(_amountERC20Token, ethToSend) */\n      0x3297a389bb586920e62a196af529d5f42651b17a1013d6bfe77f22372a0b2112\n        /* \"Exchange.sol\":7630:7647  _amountERC20Token */\n      dup5\n        /* \"Exchange.sol\":7649:7658  ethToSend */\n      dup5\n        /* \"Exchange.sol\":7619:7659  SwapForEth(_amountERC20Token, ethToSend) */\n      mload(0x40)\n      tag_166\n      swap3\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Exchange.sol\":7668:7684  return ethToSend */\n      pop\n      pop\n        /* \"Exchange.sol\":1193:1198  false */\n      0x00\n        /* \"Exchange.sol\":1184:1190  locked */\n      0x06\n      0x00\n        /* \"Exchange.sol\":1184:1198  locked = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Exchange.sol\":6973:7690  function swapForEth(uint _amountERC20Token) public nonReentrancy payable returns (uint ethToSend) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Exchange.sol\":4588:4714  function getMyLiquidityPositions() external view returns(uint _liquidity) {... */\n    tag_58:\n        /* \"Exchange.sol\":4645:4660  uint _liquidity */\n      0x00\n        /* \"Exchange.sol\":4678:4696  liquidityPositions */\n      0x05\n        /* \"Exchange.sol\":4678:4708  liquidityPositions[msg.sender] */\n      0x00\n        /* \"Exchange.sol\":4697:4707  msg.sender */\n      caller\n        /* \"Exchange.sol\":4678:4708  liquidityPositions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Exchange.sol\":4671:4708  return liquidityPositions[msg.sender] */\n      swap1\n      pop\n        /* \"Exchange.sol\":4588:4714  function getMyLiquidityPositions() external view returns(uint _liquidity) {... */\n      swap1\n      jump\t// out\n        /* \"Exchange.sol\":1801:3154  function provideLiquidity(uint _amountERC20Token) external nonReentrancy payable returns(uint _liquidity){... */\n    tag_62:\n        /* \"Exchange.sol\":1890:1905  uint _liquidity */\n      0x00\n        /* \"Exchange.sol\":1121:1127  locked */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Exchange.sol\":1120:1127  !locked */\n      iszero\n        /* \"Exchange.sol\":1111:1143  require (!locked, \"No re-entry\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap1\n      tag_72\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_169:\n        /* \"Exchange.sol\":1161:1165  true */\n      0x01\n        /* \"Exchange.sol\":1152:1158  locked */\n      0x06\n      0x00\n        /* \"Exchange.sol\":1152:1165  locked = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Exchange.sol\":1916:1931  uint _amountEth */\n      0x00\n        /* \"Exchange.sol\":1934:1943  msg.value */\n      callvalue\n        /* \"Exchange.sol\":1916:1943  uint _amountEth = msg.value */\n      swap1\n      pop\n        /* \"Exchange.sol\":1974:1984  _amountEth */\n      dup1\n        /* \"Exchange.sol\":1952:1970  contractEthBalance */\n      0x02\n      0x00\n        /* \"Exchange.sol\":1952:1984  contractEthBalance += _amountEth */\n      dup3\n      dup3\n      sload\n      tag_172\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_172:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Exchange.sol\":2070:2074  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Exchange.sol\":2050:2067  _amountERC20Token */\n      dup4\n        /* \"Exchange.sol\":2050:2074  _amountERC20Token * 1e18 */\n      tag_173\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_173:\n        /* \"Exchange.sol\":2030:2074  _amountERC20Token = _amountERC20Token * 1e18 */\n      swap3\n      pop\n        /* \"Exchange.sol\":2083:2094  ierc20Token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Exchange.sol\":2083:2102  ierc20Token.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"Exchange.sol\":2111:2115  this */\n      address\n        /* \"Exchange.sol\":2118:2135  _amountERC20Token */\n      dup6\n        /* \"Exchange.sol\":2083:2136  ierc20Token.approve(address(this), _amountERC20Token) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap3\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_174:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_175\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_175:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_177\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_177:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_178\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_178:\n      pop\n        /* \"Exchange.sol\":2145:2157  bool success */\n      0x00\n        /* \"Exchange.sol\":2160:2171  ierc20Token */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Exchange.sol\":2160:2184  ierc20Token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"Exchange.sol\":2185:2195  msg.sender */\n      caller\n        /* \"Exchange.sol\":2205:2209  this */\n      address\n        /* \"Exchange.sol\":2212:2229  _amountERC20Token */\n      dup8\n        /* \"Exchange.sol\":2160:2230  ierc20Token.transferFrom(msg.sender, address(this), _amountERC20Token) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_179:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_180\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_180:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_182\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_182:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_183\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_183:\n        /* \"Exchange.sol\":2145:2230  bool success = ierc20Token.transferFrom(msg.sender, address(this), _amountERC20Token) */\n      swap1\n      pop\n        /* \"Exchange.sol\":2247:2254  success */\n      dup1\n        /* \"Exchange.sol\":2239:2278  require(success, \"transfer failed. :(\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"Exchange.sol\":2316:2333  _amountERC20Token */\n      dup4\n        /* \"Exchange.sol\":2287:2312  contractERC20TokenBalance */\n      0x01\n      0x00\n        /* \"Exchange.sol\":2287:2333  contractERC20TokenBalance += _amountERC20Token */\n      dup3\n      dup3\n      sload\n      tag_187\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_187:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Exchange.sol\":2463:2481  contractEthBalance */\n      sload(0x02)\n        /* \"Exchange.sol\":2452:2462  _amountEth */\n      dup3\n        /* \"Exchange.sol\":2426:2449  totalLiquidityPositions */\n      sload(0x03)\n        /* \"Exchange.sol\":2426:2462  totalLiquidityPositions * _amountEth */\n      tag_188\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_188:\n        /* \"Exchange.sol\":2426:2481  totalLiquidityPositions * _amountEth/contractEthBalance */\n      tag_189\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_189:\n        /* \"Exchange.sol\":2395:2420  contractERC20TokenBalance */\n      sload(0x01)\n        /* \"Exchange.sol\":2377:2394  _amountERC20Token */\n      dup6\n        /* \"Exchange.sol\":2351:2374  totalLiquidityPositions */\n      sload(0x03)\n        /* \"Exchange.sol\":2351:2394  totalLiquidityPositions * _amountERC20Token */\n      tag_190\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_190:\n        /* \"Exchange.sol\":2351:2420  totalLiquidityPositions * _amountERC20Token/contractERC20TokenBalance */\n      tag_191\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_191:\n        /* \"Exchange.sol\":2350:2482  (totalLiquidityPositions * _amountERC20Token/contractERC20TokenBalance) == (totalLiquidityPositions * _amountEth/contractEthBalance) */\n      eq\n        /* \"Exchange.sol\":2342:2506  require((totalLiquidityPositions * _amountERC20Token/contractERC20TokenBalance) == (totalLiquidityPositions * _amountEth/contractEthBalance), \"liquidity inbalance\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_192:\n        /* \"Exchange.sol\":2549:2550  0 */\n      0x00\n        /* \"Exchange.sol\":2522:2545  totalLiquidityPositions */\n      sload(0x03)\n        /* \"Exchange.sol\":2522:2550  totalLiquidityPositions == 0 */\n      eq\n        /* \"Exchange.sol\":2519:2949  if(totalLiquidityPositions == 0){... */\n      iszero\n      tag_195\n      jumpi\n        /* \"Exchange.sol\":2601:2604  100 */\n      0x64\n        /* \"Exchange.sol\":2568:2586  liquidityPositions */\n      0x05\n        /* \"Exchange.sol\":2568:2598  liquidityPositions[msg.sender] */\n      0x00\n        /* \"Exchange.sol\":2587:2597  msg.sender */\n      caller\n        /* \"Exchange.sol\":2568:2598  liquidityPositions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Exchange.sol\":2568:2604  liquidityPositions[msg.sender] = 100 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Exchange.sol\":2648:2666  liquidityPositions */\n      0x05\n        /* \"Exchange.sol\":2648:2678  liquidityPositions[msg.sender] */\n      0x00\n        /* \"Exchange.sol\":2667:2677  msg.sender */\n      caller\n        /* \"Exchange.sol\":2648:2678  liquidityPositions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Exchange.sol\":2621:2644  totalLiquidityPositions */\n      0x03\n      0x00\n        /* \"Exchange.sol\":2621:2678  totalLiquidityPositions += liquidityPositions[msg.sender] */\n      dup3\n      dup3\n      sload\n      tag_196\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_196:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Exchange.sol\":2519:2949  if(totalLiquidityPositions == 0){... */\n      jump(tag_197)\n    tag_195:\n        /* \"Exchange.sol\":2793:2818  contractERC20TokenBalance */\n      sload(0x01)\n        /* \"Exchange.sol\":2773:2790  _amountERC20Token */\n      dup5\n        /* \"Exchange.sol\":2747:2770  totalLiquidityPositions */\n      sload(0x03)\n        /* \"Exchange.sol\":2747:2790  totalLiquidityPositions * _amountERC20Token */\n      tag_198\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_198:\n        /* \"Exchange.sol\":2747:2818  totalLiquidityPositions * _amountERC20Token / contractERC20TokenBalance */\n      tag_199\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_199:\n        /* \"Exchange.sol\":2713:2731  liquidityPositions */\n      0x05\n        /* \"Exchange.sol\":2713:2743  liquidityPositions[msg.sender] */\n      0x00\n        /* \"Exchange.sol\":2732:2742  msg.sender */\n      caller\n        /* \"Exchange.sol\":2713:2743  liquidityPositions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Exchange.sol\":2713:2818  liquidityPositions[msg.sender] += totalLiquidityPositions * _amountERC20Token / contractERC20TokenBalance */\n      dup3\n      dup3\n      sload\n      tag_200\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_200:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Exchange.sol\":2909:2934  contractERC20TokenBalance */\n      sload(0x01)\n        /* \"Exchange.sol\":2889:2906  _amountERC20Token */\n      dup5\n        /* \"Exchange.sol\":2863:2886  totalLiquidityPositions */\n      sload(0x03)\n        /* \"Exchange.sol\":2863:2906  totalLiquidityPositions * _amountERC20Token */\n      tag_201\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_201:\n        /* \"Exchange.sol\":2863:2934  totalLiquidityPositions * _amountERC20Token / contractERC20TokenBalance */\n      tag_202\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_202:\n        /* \"Exchange.sol\":2835:2858  totalLiquidityPositions */\n      0x03\n      0x00\n        /* \"Exchange.sol\":2835:2935  totalLiquidityPositions += (totalLiquidityPositions * _amountERC20Token / contractERC20TokenBalance) */\n      dup3\n      dup3\n      sload\n      tag_203\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_203:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Exchange.sol\":2519:2949  if(totalLiquidityPositions == 0){... */\n    tag_197:\n        /* \"Exchange.sol\":2982:3007  contractERC20TokenBalance */\n      sload(0x01)\n        /* \"Exchange.sol\":2961:2979  contractEthBalance */\n      sload(0x02)\n        /* \"Exchange.sol\":2961:3007  contractEthBalance * contractERC20TokenBalance */\n      tag_204\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_204:\n        /* \"Exchange.sol\":2957:2958  K */\n      0x04\n        /* \"Exchange.sol\":2957:3007  K = contractEthBalance * contractERC20TokenBalance */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Exchange.sol\":3021:3102  LiquidityProvided(_amountERC20Token, _amountEth, liquidityPositions[msg.sender] ) */\n      0xaa58f006cc244b2af6662862508bd39465f57169ff8386d1d1f7b0b903150abc\n        /* \"Exchange.sol\":3039:3056  _amountERC20Token */\n      dup5\n        /* \"Exchange.sol\":3058:3068  _amountEth */\n      dup4\n        /* \"Exchange.sol\":3070:3088  liquidityPositions */\n      0x05\n        /* \"Exchange.sol\":3070:3100  liquidityPositions[msg.sender] */\n      0x00\n        /* \"Exchange.sol\":3089:3099  msg.sender */\n      caller\n        /* \"Exchange.sol\":3070:3100  liquidityPositions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Exchange.sol\":3021:3102  LiquidityProvided(_amountERC20Token, _amountEth, liquidityPositions[msg.sender] ) */\n      mload(0x40)\n      tag_205\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Exchange.sol\":3118:3136  liquidityPositions */\n      0x05\n        /* \"Exchange.sol\":3118:3148  liquidityPositions[msg.sender] */\n      0x00\n        /* \"Exchange.sol\":3137:3147  msg.sender */\n      caller\n        /* \"Exchange.sol\":3118:3148  liquidityPositions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Exchange.sol\":3111:3148  return liquidityPositions[msg.sender] */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Exchange.sol\":1193:1198  false */\n      0x00\n        /* \"Exchange.sol\":1184:1190  locked */\n      0x06\n      0x00\n        /* \"Exchange.sol\":1184:1198  locked = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Exchange.sol\":1801:3154  function provideLiquidity(uint _amountERC20Token) external nonReentrancy payable returns(uint _liquidity){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Exchange.sol\":4179:4395  function estimateERC20TokenToProvide(uint _amountEth) external view returns(uint _amountERC20){... */\n    tag_67:\n        /* \"Exchange.sol\":4255:4272  uint _amountERC20 */\n      0x00\n        /* \"Exchange.sol\":4336:4354  contractEthBalance */\n      sload(0x02)\n        /* \"Exchange.sol\":4325:4335  _amountEth */\n      dup3\n        /* \"Exchange.sol\":4297:4322  contractERC20TokenBalance */\n      sload(0x01)\n        /* \"Exchange.sol\":4297:4335  contractERC20TokenBalance * _amountEth */\n      tag_207\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_207:\n        /* \"Exchange.sol\":4297:4354  contractERC20TokenBalance * _amountEth/contractEthBalance */\n      tag_208\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_208:\n        /* \"Exchange.sol\":4282:4354  _amountERC20 = contractERC20TokenBalance * _amountEth/contractEthBalance */\n      swap1\n      pop\n        /* \"Exchange.sol\":4384:4388  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Exchange.sol\":4371:4383  _amountERC20 */\n      dup2\n        /* \"Exchange.sol\":4371:4388  _amountERC20/1e18 */\n      tag_209\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_209:\n        /* \"Exchange.sol\":4363:4389  return (_amountERC20/1e18) */\n      swap1\n      pop\n        /* \"Exchange.sol\":4179:4395  function estimateERC20TokenToProvide(uint _amountEth) external view returns(uint _amountERC20){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:144   */\n    tag_211:\n        /* \"#utility.yul\":61:66   */\n      0x00\n        /* \"#utility.yul\":92:98   */\n      dup2\n        /* \"#utility.yul\":86:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":108:138   */\n      tag_213\n        /* \"#utility.yul\":132:137   */\n      dup2\n        /* \"#utility.yul\":108:138   */\n      tag_214\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":7:144   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:289   */\n    tag_215:\n        /* \"#utility.yul\":196:201   */\n      0x00\n        /* \"#utility.yul\":234:240   */\n      dup2\n        /* \"#utility.yul\":221:241   */\n      calldataload\n        /* \"#utility.yul\":212:241   */\n      swap1\n      pop\n        /* \"#utility.yul\":250:283   */\n      tag_217\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":250:283   */\n      tag_218\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":150:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:438   */\n    tag_219:\n        /* \"#utility.yul\":352:357   */\n      0x00\n        /* \"#utility.yul\":383:389   */\n      dup2\n        /* \"#utility.yul\":377:390   */\n      mload\n        /* \"#utility.yul\":368:390   */\n      swap1\n      pop\n        /* \"#utility.yul\":399:432   */\n      tag_221\n        /* \"#utility.yul\":426:431   */\n      dup2\n        /* \"#utility.yul\":399:432   */\n      tag_218\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":295:438   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":444:789   */\n    tag_95:\n        /* \"#utility.yul\":511:517   */\n      0x00\n        /* \"#utility.yul\":560:562   */\n      0x20\n        /* \"#utility.yul\":548:557   */\n      dup3\n        /* \"#utility.yul\":539:546   */\n      dup5\n        /* \"#utility.yul\":535:558   */\n      sub\n        /* \"#utility.yul\":531:563   */\n      slt\n        /* \"#utility.yul\":528:647   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":566:645   */\n      tag_224\n      tag_225\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":528:647   */\n    tag_223:\n        /* \"#utility.yul\":686:687   */\n      0x00\n        /* \"#utility.yul\":711:772   */\n      tag_226\n        /* \"#utility.yul\":764:771   */\n      dup5\n        /* \"#utility.yul\":755:761   */\n      dup3\n        /* \"#utility.yul\":744:753   */\n      dup6\n        /* \"#utility.yul\":740:762   */\n      add\n        /* \"#utility.yul\":711:772   */\n      tag_211\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":701:772   */\n      swap2\n      pop\n        /* \"#utility.yul\":657:782   */\n      pop\n        /* \"#utility.yul\":444:789   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":795:1124   */\n    tag_17:\n        /* \"#utility.yul\":854:860   */\n      0x00\n        /* \"#utility.yul\":903:905   */\n      0x20\n        /* \"#utility.yul\":891:900   */\n      dup3\n        /* \"#utility.yul\":882:889   */\n      dup5\n        /* \"#utility.yul\":878:901   */\n      sub\n        /* \"#utility.yul\":874:906   */\n      slt\n        /* \"#utility.yul\":871:990   */\n      iszero\n      tag_228\n      jumpi\n        /* \"#utility.yul\":909:988   */\n      tag_229\n      tag_225\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":871:990   */\n    tag_228:\n        /* \"#utility.yul\":1029:1030   */\n      0x00\n        /* \"#utility.yul\":1054:1107   */\n      tag_230\n        /* \"#utility.yul\":1099:1106   */\n      dup5\n        /* \"#utility.yul\":1090:1096   */\n      dup3\n        /* \"#utility.yul\":1079:1088   */\n      dup6\n        /* \"#utility.yul\":1075:1097   */\n      add\n        /* \"#utility.yul\":1054:1107   */\n      tag_215\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":1044:1107   */\n      swap2\n      pop\n        /* \"#utility.yul\":1000:1117   */\n      pop\n        /* \"#utility.yul\":795:1124   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1130:1481   */\n    tag_147:\n        /* \"#utility.yul\":1200:1206   */\n      0x00\n        /* \"#utility.yul\":1249:1251   */\n      0x20\n        /* \"#utility.yul\":1237:1246   */\n      dup3\n        /* \"#utility.yul\":1228:1235   */\n      dup5\n        /* \"#utility.yul\":1224:1247   */\n      sub\n        /* \"#utility.yul\":1220:1252   */\n      slt\n        /* \"#utility.yul\":1217:1336   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":1255:1334   */\n      tag_233\n      tag_225\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":1217:1336   */\n    tag_232:\n        /* \"#utility.yul\":1375:1376   */\n      0x00\n        /* \"#utility.yul\":1400:1464   */\n      tag_234\n        /* \"#utility.yul\":1456:1463   */\n      dup5\n        /* \"#utility.yul\":1447:1453   */\n      dup3\n        /* \"#utility.yul\":1436:1445   */\n      dup6\n        /* \"#utility.yul\":1432:1454   */\n      add\n        /* \"#utility.yul\":1400:1464   */\n      tag_219\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":1390:1464   */\n      swap2\n      pop\n        /* \"#utility.yul\":1346:1474   */\n      pop\n        /* \"#utility.yul\":1130:1481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1487:1634   */\n    tag_235:\n        /* \"#utility.yul\":1582:1627   */\n      tag_237\n        /* \"#utility.yul\":1621:1626   */\n      dup2\n        /* \"#utility.yul\":1582:1627   */\n      tag_238\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":1577:1580   */\n      dup3\n        /* \"#utility.yul\":1570:1628   */\n      mstore\n        /* \"#utility.yul\":1487:1634   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1640:1758   */\n    tag_239:\n        /* \"#utility.yul\":1727:1751   */\n      tag_241\n        /* \"#utility.yul\":1745:1750   */\n      dup2\n        /* \"#utility.yul\":1727:1751   */\n      tag_242\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":1722:1725   */\n      dup3\n        /* \"#utility.yul\":1715:1752   */\n      mstore\n        /* \"#utility.yul\":1640:1758   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1764:2130   */\n    tag_243:\n        /* \"#utility.yul\":1906:1909   */\n      0x00\n        /* \"#utility.yul\":1927:1994   */\n      tag_245\n        /* \"#utility.yul\":1991:1993   */\n      0x13\n        /* \"#utility.yul\":1986:1989   */\n      dup4\n        /* \"#utility.yul\":1927:1994   */\n      tag_246\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":1920:1994   */\n      swap2\n      pop\n        /* \"#utility.yul\":2003:2096   */\n      tag_247\n        /* \"#utility.yul\":2092:2095   */\n      dup3\n        /* \"#utility.yul\":2003:2096   */\n      tag_248\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":2121:2123   */\n      0x20\n        /* \"#utility.yul\":2116:2119   */\n      dup3\n        /* \"#utility.yul\":2112:2124   */\n      add\n        /* \"#utility.yul\":2105:2124   */\n      swap1\n      pop\n        /* \"#utility.yul\":1764:2130   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2136:2502   */\n    tag_249:\n        /* \"#utility.yul\":2278:2281   */\n      0x00\n        /* \"#utility.yul\":2299:2366   */\n      tag_251\n        /* \"#utility.yul\":2363:2365   */\n      0x0b\n        /* \"#utility.yul\":2358:2361   */\n      dup4\n        /* \"#utility.yul\":2299:2366   */\n      tag_246\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":2292:2366   */\n      swap2\n      pop\n        /* \"#utility.yul\":2375:2468   */\n      tag_252\n        /* \"#utility.yul\":2464:2467   */\n      dup3\n        /* \"#utility.yul\":2375:2468   */\n      tag_253\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":2493:2495   */\n      0x20\n        /* \"#utility.yul\":2488:2491   */\n      dup3\n        /* \"#utility.yul\":2484:2496   */\n      add\n        /* \"#utility.yul\":2477:2496   */\n      swap1\n      pop\n        /* \"#utility.yul\":2136:2502   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2508:2874   */\n    tag_254:\n        /* \"#utility.yul\":2650:2653   */\n      0x00\n        /* \"#utility.yul\":2671:2738   */\n      tag_256\n        /* \"#utility.yul\":2735:2737   */\n      0x13\n        /* \"#utility.yul\":2730:2733   */\n      dup4\n        /* \"#utility.yul\":2671:2738   */\n      tag_246\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":2664:2738   */\n      swap2\n      pop\n        /* \"#utility.yul\":2747:2840   */\n      tag_257\n        /* \"#utility.yul\":2836:2839   */\n      dup3\n        /* \"#utility.yul\":2747:2840   */\n      tag_258\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":2865:2867   */\n      0x20\n        /* \"#utility.yul\":2860:2863   */\n      dup3\n        /* \"#utility.yul\":2856:2868   */\n      add\n        /* \"#utility.yul\":2849:2868   */\n      swap1\n      pop\n        /* \"#utility.yul\":2508:2874   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2880:2998   */\n    tag_259:\n        /* \"#utility.yul\":2967:2991   */\n      tag_261\n        /* \"#utility.yul\":2985:2990   */\n      dup2\n        /* \"#utility.yul\":2967:2991   */\n      tag_262\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":2962:2965   */\n      dup3\n        /* \"#utility.yul\":2955:2992   */\n      mstore\n        /* \"#utility.yul\":2880:2998   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3004:3226   */\n    tag_142:\n        /* \"#utility.yul\":3097:3101   */\n      0x00\n        /* \"#utility.yul\":3135:3137   */\n      0x20\n        /* \"#utility.yul\":3124:3133   */\n      dup3\n        /* \"#utility.yul\":3120:3138   */\n      add\n        /* \"#utility.yul\":3112:3138   */\n      swap1\n      pop\n        /* \"#utility.yul\":3148:3219   */\n      tag_264\n        /* \"#utility.yul\":3216:3217   */\n      0x00\n        /* \"#utility.yul\":3205:3214   */\n      dup4\n        /* \"#utility.yul\":3201:3218   */\n      add\n        /* \"#utility.yul\":3192:3198   */\n      dup5\n        /* \"#utility.yul\":3148:3219   */\n      tag_239\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":3004:3226   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3232:3690   */\n    tag_97:\n        /* \"#utility.yul\":3389:3393   */\n      0x00\n        /* \"#utility.yul\":3427:3429   */\n      0x60\n        /* \"#utility.yul\":3416:3425   */\n      dup3\n        /* \"#utility.yul\":3412:3430   */\n      add\n        /* \"#utility.yul\":3404:3430   */\n      swap1\n      pop\n        /* \"#utility.yul\":3440:3511   */\n      tag_266\n        /* \"#utility.yul\":3508:3509   */\n      0x00\n        /* \"#utility.yul\":3497:3506   */\n      dup4\n        /* \"#utility.yul\":3493:3510   */\n      add\n        /* \"#utility.yul\":3484:3490   */\n      dup7\n        /* \"#utility.yul\":3440:3511   */\n      tag_239\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":3521:3601   */\n      tag_267\n        /* \"#utility.yul\":3597:3599   */\n      0x20\n        /* \"#utility.yul\":3586:3595   */\n      dup4\n        /* \"#utility.yul\":3582:3600   */\n      add\n        /* \"#utility.yul\":3573:3579   */\n      dup6\n        /* \"#utility.yul\":3521:3601   */\n      tag_235\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":3611:3683   */\n      tag_268\n        /* \"#utility.yul\":3679:3681   */\n      0x40\n        /* \"#utility.yul\":3668:3677   */\n      dup4\n        /* \"#utility.yul\":3664:3682   */\n      add\n        /* \"#utility.yul\":3655:3661   */\n      dup5\n        /* \"#utility.yul\":3611:3683   */\n      tag_259\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":3232:3690   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3696:4138   */\n    tag_155:\n        /* \"#utility.yul\":3845:3849   */\n      0x00\n        /* \"#utility.yul\":3883:3885   */\n      0x60\n        /* \"#utility.yul\":3872:3881   */\n      dup3\n        /* \"#utility.yul\":3868:3886   */\n      add\n        /* \"#utility.yul\":3860:3886   */\n      swap1\n      pop\n        /* \"#utility.yul\":3896:3967   */\n      tag_270\n        /* \"#utility.yul\":3964:3965   */\n      0x00\n        /* \"#utility.yul\":3953:3962   */\n      dup4\n        /* \"#utility.yul\":3949:3966   */\n      add\n        /* \"#utility.yul\":3940:3946   */\n      dup7\n        /* \"#utility.yul\":3896:3967   */\n      tag_239\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":3977:4049   */\n      tag_271\n        /* \"#utility.yul\":4045:4047   */\n      0x20\n        /* \"#utility.yul\":4034:4043   */\n      dup4\n        /* \"#utility.yul\":4030:4048   */\n      add\n        /* \"#utility.yul\":4021:4027   */\n      dup6\n        /* \"#utility.yul\":3977:4049   */\n      tag_239\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":4059:4131   */\n      tag_272\n        /* \"#utility.yul\":4127:4129   */\n      0x40\n        /* \"#utility.yul\":4116:4125   */\n      dup4\n        /* \"#utility.yul\":4112:4130   */\n      add\n        /* \"#utility.yul\":4103:4109   */\n      dup5\n        /* \"#utility.yul\":4059:4131   */\n      tag_259\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":3696:4138   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4144:4476   */\n    tag_90:\n        /* \"#utility.yul\":4265:4269   */\n      0x00\n        /* \"#utility.yul\":4303:4305   */\n      0x40\n        /* \"#utility.yul\":4292:4301   */\n      dup3\n        /* \"#utility.yul\":4288:4306   */\n      add\n        /* \"#utility.yul\":4280:4306   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4387   */\n      tag_274\n        /* \"#utility.yul\":4384:4385   */\n      0x00\n        /* \"#utility.yul\":4373:4382   */\n      dup4\n        /* \"#utility.yul\":4369:4386   */\n      add\n        /* \"#utility.yul\":4360:4366   */\n      dup6\n        /* \"#utility.yul\":4316:4387   */\n      tag_239\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":4397:4469   */\n      tag_275\n        /* \"#utility.yul\":4465:4467   */\n      0x20\n        /* \"#utility.yul\":4454:4463   */\n      dup4\n        /* \"#utility.yul\":4450:4468   */\n      add\n        /* \"#utility.yul\":4441:4447   */\n      dup5\n        /* \"#utility.yul\":4397:4469   */\n      tag_259\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":4144:4476   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4482:4901   */\n    tag_194:\n        /* \"#utility.yul\":4648:4652   */\n      0x00\n        /* \"#utility.yul\":4686:4688   */\n      0x20\n        /* \"#utility.yul\":4675:4684   */\n      dup3\n        /* \"#utility.yul\":4671:4689   */\n      add\n        /* \"#utility.yul\":4663:4689   */\n      swap1\n      pop\n        /* \"#utility.yul\":4735:4744   */\n      dup2\n        /* \"#utility.yul\":4729:4733   */\n      dup2\n        /* \"#utility.yul\":4725:4745   */\n      sub\n        /* \"#utility.yul\":4721:4722   */\n      0x00\n        /* \"#utility.yul\":4710:4719   */\n      dup4\n        /* \"#utility.yul\":4706:4723   */\n      add\n        /* \"#utility.yul\":4699:4746   */\n      mstore\n        /* \"#utility.yul\":4763:4894   */\n      tag_277\n        /* \"#utility.yul\":4889:4893   */\n      dup2\n        /* \"#utility.yul\":4763:4894   */\n      tag_243\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":4755:4894   */\n      swap1\n      pop\n        /* \"#utility.yul\":4482:4901   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4907:5326   */\n    tag_72:\n        /* \"#utility.yul\":5073:5077   */\n      0x00\n        /* \"#utility.yul\":5111:5113   */\n      0x20\n        /* \"#utility.yul\":5100:5109   */\n      dup3\n        /* \"#utility.yul\":5096:5114   */\n      add\n        /* \"#utility.yul\":5088:5114   */\n      swap1\n      pop\n        /* \"#utility.yul\":5160:5169   */\n      dup2\n        /* \"#utility.yul\":5154:5158   */\n      dup2\n        /* \"#utility.yul\":5150:5170   */\n      sub\n        /* \"#utility.yul\":5146:5147   */\n      0x00\n        /* \"#utility.yul\":5135:5144   */\n      dup4\n        /* \"#utility.yul\":5131:5148   */\n      add\n        /* \"#utility.yul\":5124:5171   */\n      mstore\n        /* \"#utility.yul\":5188:5319   */\n      tag_279\n        /* \"#utility.yul\":5314:5318   */\n      dup2\n        /* \"#utility.yul\":5188:5319   */\n      tag_249\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":5180:5319   */\n      swap1\n      pop\n        /* \"#utility.yul\":4907:5326   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5332:5751   */\n    tag_186:\n        /* \"#utility.yul\":5498:5502   */\n      0x00\n        /* \"#utility.yul\":5536:5538   */\n      0x20\n        /* \"#utility.yul\":5525:5534   */\n      dup3\n        /* \"#utility.yul\":5521:5539   */\n      add\n        /* \"#utility.yul\":5513:5539   */\n      swap1\n      pop\n        /* \"#utility.yul\":5585:5594   */\n      dup2\n        /* \"#utility.yul\":5579:5583   */\n      dup2\n        /* \"#utility.yul\":5575:5595   */\n      sub\n        /* \"#utility.yul\":5571:5572   */\n      0x00\n        /* \"#utility.yul\":5560:5569   */\n      dup4\n        /* \"#utility.yul\":5556:5573   */\n      add\n        /* \"#utility.yul\":5549:5596   */\n      mstore\n        /* \"#utility.yul\":5613:5744   */\n      tag_281\n        /* \"#utility.yul\":5739:5743   */\n      dup2\n        /* \"#utility.yul\":5613:5744   */\n      tag_254\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":5605:5744   */\n      swap1\n      pop\n        /* \"#utility.yul\":5332:5751   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5757:5979   */\n    tag_26:\n        /* \"#utility.yul\":5850:5854   */\n      0x00\n        /* \"#utility.yul\":5888:5890   */\n      0x20\n        /* \"#utility.yul\":5877:5886   */\n      dup3\n        /* \"#utility.yul\":5873:5891   */\n      add\n        /* \"#utility.yul\":5865:5891   */\n      swap1\n      pop\n        /* \"#utility.yul\":5901:5972   */\n      tag_283\n        /* \"#utility.yul\":5969:5970   */\n      0x00\n        /* \"#utility.yul\":5958:5967   */\n      dup4\n        /* \"#utility.yul\":5954:5971   */\n      add\n        /* \"#utility.yul\":5945:5951   */\n      dup5\n        /* \"#utility.yul\":5901:5972   */\n      tag_259\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":5757:5979   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5985:6317   */\n    tag_20:\n        /* \"#utility.yul\":6106:6110   */\n      0x00\n        /* \"#utility.yul\":6144:6146   */\n      0x40\n        /* \"#utility.yul\":6133:6142   */\n      dup3\n        /* \"#utility.yul\":6129:6147   */\n      add\n        /* \"#utility.yul\":6121:6147   */\n      swap1\n      pop\n        /* \"#utility.yul\":6157:6228   */\n      tag_285\n        /* \"#utility.yul\":6225:6226   */\n      0x00\n        /* \"#utility.yul\":6214:6223   */\n      dup4\n        /* \"#utility.yul\":6210:6227   */\n      add\n        /* \"#utility.yul\":6201:6207   */\n      dup6\n        /* \"#utility.yul\":6157:6228   */\n      tag_259\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":6238:6310   */\n      tag_286\n        /* \"#utility.yul\":6306:6308   */\n      0x20\n        /* \"#utility.yul\":6295:6304   */\n      dup4\n        /* \"#utility.yul\":6291:6309   */\n      add\n        /* \"#utility.yul\":6282:6288   */\n      dup5\n        /* \"#utility.yul\":6238:6310   */\n      tag_259\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":5985:6317   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6323:6765   */\n    tag_106:\n        /* \"#utility.yul\":6472:6476   */\n      0x00\n        /* \"#utility.yul\":6510:6512   */\n      0x60\n        /* \"#utility.yul\":6499:6508   */\n      dup3\n        /* \"#utility.yul\":6495:6513   */\n      add\n        /* \"#utility.yul\":6487:6513   */\n      swap1\n      pop\n        /* \"#utility.yul\":6523:6594   */\n      tag_288\n        /* \"#utility.yul\":6591:6592   */\n      0x00\n        /* \"#utility.yul\":6580:6589   */\n      dup4\n        /* \"#utility.yul\":6576:6593   */\n      add\n        /* \"#utility.yul\":6567:6573   */\n      dup7\n        /* \"#utility.yul\":6523:6594   */\n      tag_259\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":6604:6676   */\n      tag_289\n        /* \"#utility.yul\":6672:6674   */\n      0x20\n        /* \"#utility.yul\":6661:6670   */\n      dup4\n        /* \"#utility.yul\":6657:6675   */\n      add\n        /* \"#utility.yul\":6648:6654   */\n      dup6\n        /* \"#utility.yul\":6604:6676   */\n      tag_259\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":6686:6758   */\n      tag_290\n        /* \"#utility.yul\":6754:6756   */\n      0x40\n        /* \"#utility.yul\":6743:6752   */\n      dup4\n        /* \"#utility.yul\":6739:6757   */\n      add\n        /* \"#utility.yul\":6730:6736   */\n      dup5\n        /* \"#utility.yul\":6686:6758   */\n      tag_259\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":6323:6765   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6852:7021   */\n    tag_246:\n        /* \"#utility.yul\":6936:6947   */\n      0x00\n        /* \"#utility.yul\":6970:6976   */\n      dup3\n        /* \"#utility.yul\":6965:6968   */\n      dup3\n        /* \"#utility.yul\":6958:6977   */\n      mstore\n        /* \"#utility.yul\":7010:7014   */\n      0x20\n        /* \"#utility.yul\":7005:7008   */\n      dup3\n        /* \"#utility.yul\":7001:7015   */\n      add\n        /* \"#utility.yul\":6986:7015   */\n      swap1\n      pop\n        /* \"#utility.yul\":6852:7021   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7027:7332   */\n    tag_116:\n        /* \"#utility.yul\":7067:7070   */\n      0x00\n        /* \"#utility.yul\":7086:7106   */\n      tag_295\n        /* \"#utility.yul\":7104:7105   */\n      dup3\n        /* \"#utility.yul\":7086:7106   */\n      tag_262\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":7081:7106   */\n      swap2\n      pop\n        /* \"#utility.yul\":7120:7140   */\n      tag_296\n        /* \"#utility.yul\":7138:7139   */\n      dup4\n        /* \"#utility.yul\":7120:7140   */\n      tag_262\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":7115:7140   */\n      swap3\n      pop\n        /* \"#utility.yul\":7274:7275   */\n      dup3\n        /* \"#utility.yul\":7206:7272   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7202:7276   */\n      sub\n        /* \"#utility.yul\":7199:7200   */\n      dup3\n        /* \"#utility.yul\":7196:7277   */\n      gt\n        /* \"#utility.yul\":7193:7300   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":7280:7298   */\n      tag_298\n      tag_299\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":7193:7300   */\n    tag_297:\n        /* \"#utility.yul\":7324:7325   */\n      dup3\n        /* \"#utility.yul\":7321:7322   */\n      dup3\n        /* \"#utility.yul\":7317:7326   */\n      add\n        /* \"#utility.yul\":7310:7326   */\n      swap1\n      pop\n        /* \"#utility.yul\":7027:7332   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7338:7523   */\n    tag_81:\n        /* \"#utility.yul\":7378:7379   */\n      0x00\n        /* \"#utility.yul\":7395:7415   */\n      tag_301\n        /* \"#utility.yul\":7413:7414   */\n      dup3\n        /* \"#utility.yul\":7395:7415   */\n      tag_262\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":7390:7415   */\n      swap2\n      pop\n        /* \"#utility.yul\":7429:7449   */\n      tag_302\n        /* \"#utility.yul\":7447:7448   */\n      dup4\n        /* \"#utility.yul\":7429:7449   */\n      tag_262\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":7424:7449   */\n      swap3\n      pop\n        /* \"#utility.yul\":7468:7469   */\n      dup3\n        /* \"#utility.yul\":7458:7493   */\n      tag_303\n      jumpi\n        /* \"#utility.yul\":7473:7491   */\n      tag_304\n      tag_305\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":7458:7493   */\n    tag_303:\n        /* \"#utility.yul\":7515:7516   */\n      dup3\n        /* \"#utility.yul\":7512:7513   */\n      dup3\n        /* \"#utility.yul\":7508:7517   */\n      div\n        /* \"#utility.yul\":7503:7517   */\n      swap1\n      pop\n        /* \"#utility.yul\":7338:7523   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7529:7877   */\n    tag_79:\n        /* \"#utility.yul\":7569:7576   */\n      0x00\n        /* \"#utility.yul\":7592:7612   */\n      tag_307\n        /* \"#utility.yul\":7610:7611   */\n      dup3\n        /* \"#utility.yul\":7592:7612   */\n      tag_262\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":7587:7612   */\n      swap2\n      pop\n        /* \"#utility.yul\":7626:7646   */\n      tag_308\n        /* \"#utility.yul\":7644:7645   */\n      dup4\n        /* \"#utility.yul\":7626:7646   */\n      tag_262\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":7621:7646   */\n      swap3\n      pop\n        /* \"#utility.yul\":7814:7815   */\n      dup2\n        /* \"#utility.yul\":7746:7812   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7742:7816   */\n      div\n        /* \"#utility.yul\":7739:7740   */\n      dup4\n        /* \"#utility.yul\":7736:7817   */\n      gt\n        /* \"#utility.yul\":7731:7732   */\n      dup3\n        /* \"#utility.yul\":7724:7733   */\n      iszero\n        /* \"#utility.yul\":7717:7734   */\n      iszero\n        /* \"#utility.yul\":7713:7818   */\n      and\n        /* \"#utility.yul\":7710:7841   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":7821:7839   */\n      tag_310\n      tag_299\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":7710:7841   */\n    tag_309:\n        /* \"#utility.yul\":7869:7870   */\n      dup3\n        /* \"#utility.yul\":7866:7867   */\n      dup3\n        /* \"#utility.yul\":7862:7871   */\n      mul\n        /* \"#utility.yul\":7851:7871   */\n      swap1\n      pop\n        /* \"#utility.yul\":7529:7877   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7883:8074   */\n    tag_76:\n        /* \"#utility.yul\":7923:7927   */\n      0x00\n        /* \"#utility.yul\":7943:7963   */\n      tag_312\n        /* \"#utility.yul\":7961:7962   */\n      dup3\n        /* \"#utility.yul\":7943:7963   */\n      tag_262\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":7938:7963   */\n      swap2\n      pop\n        /* \"#utility.yul\":7977:7997   */\n      tag_313\n        /* \"#utility.yul\":7995:7996   */\n      dup4\n        /* \"#utility.yul\":7977:7997   */\n      tag_262\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":7972:7997   */\n      swap3\n      pop\n        /* \"#utility.yul\":8016:8017   */\n      dup3\n        /* \"#utility.yul\":8013:8014   */\n      dup3\n        /* \"#utility.yul\":8010:8018   */\n      lt\n        /* \"#utility.yul\":8007:8041   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":8021:8039   */\n      tag_315\n      tag_299\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":8007:8041   */\n    tag_314:\n        /* \"#utility.yul\":8066:8067   */\n      dup3\n        /* \"#utility.yul\":8063:8064   */\n      dup3\n        /* \"#utility.yul\":8059:8068   */\n      sub\n        /* \"#utility.yul\":8051:8068   */\n      swap1\n      pop\n        /* \"#utility.yul\":7883:8074   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8080:8176   */\n    tag_242:\n        /* \"#utility.yul\":8117:8124   */\n      0x00\n        /* \"#utility.yul\":8146:8170   */\n      tag_317\n        /* \"#utility.yul\":8164:8169   */\n      dup3\n        /* \"#utility.yul\":8146:8170   */\n      tag_318\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":8135:8170   */\n      swap1\n      pop\n        /* \"#utility.yul\":8080:8176   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8182:8272   */\n    tag_319:\n        /* \"#utility.yul\":8216:8223   */\n      0x00\n        /* \"#utility.yul\":8259:8264   */\n      dup2\n        /* \"#utility.yul\":8252:8265   */\n      iszero\n        /* \"#utility.yul\":8245:8266   */\n      iszero\n        /* \"#utility.yul\":8234:8266   */\n      swap1\n      pop\n        /* \"#utility.yul\":8182:8272   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8278:8404   */\n    tag_318:\n        /* \"#utility.yul\":8315:8322   */\n      0x00\n        /* \"#utility.yul\":8355:8397   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8348:8353   */\n      dup3\n        /* \"#utility.yul\":8344:8398   */\n      and\n        /* \"#utility.yul\":8333:8398   */\n      swap1\n      pop\n        /* \"#utility.yul\":8278:8404   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8410:8487   */\n    tag_262:\n        /* \"#utility.yul\":8447:8454   */\n      0x00\n        /* \"#utility.yul\":8476:8481   */\n      dup2\n        /* \"#utility.yul\":8465:8481   */\n      swap1\n      pop\n        /* \"#utility.yul\":8410:8487   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8493:8627   */\n    tag_238:\n        /* \"#utility.yul\":8551:8560   */\n      0x00\n        /* \"#utility.yul\":8584:8621   */\n      tag_324\n        /* \"#utility.yul\":8615:8620   */\n      dup3\n        /* \"#utility.yul\":8584:8621   */\n      tag_325\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":8571:8621   */\n      swap1\n      pop\n        /* \"#utility.yul\":8493:8627   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8633:8759   */\n    tag_325:\n        /* \"#utility.yul\":8683:8692   */\n      0x00\n        /* \"#utility.yul\":8716:8753   */\n      tag_327\n        /* \"#utility.yul\":8747:8752   */\n      dup3\n        /* \"#utility.yul\":8716:8753   */\n      tag_328\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":8703:8753   */\n      swap1\n      pop\n        /* \"#utility.yul\":8633:8759   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8765:8878   */\n    tag_328:\n        /* \"#utility.yul\":8815:8824   */\n      0x00\n        /* \"#utility.yul\":8848:8872   */\n      tag_330\n        /* \"#utility.yul\":8866:8871   */\n      dup3\n        /* \"#utility.yul\":8848:8872   */\n      tag_318\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":8835:8872   */\n      swap1\n      pop\n        /* \"#utility.yul\":8765:8878   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8884:9064   */\n    tag_299:\n        /* \"#utility.yul\":8932:9009   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8929:8930   */\n      0x00\n        /* \"#utility.yul\":8922:9010   */\n      mstore\n        /* \"#utility.yul\":9029:9033   */\n      0x11\n        /* \"#utility.yul\":9026:9027   */\n      0x04\n        /* \"#utility.yul\":9019:9034   */\n      mstore\n        /* \"#utility.yul\":9053:9057   */\n      0x24\n        /* \"#utility.yul\":9050:9051   */\n      0x00\n        /* \"#utility.yul\":9043:9058   */\n      revert\n        /* \"#utility.yul\":9070:9250   */\n    tag_305:\n        /* \"#utility.yul\":9118:9195   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9115:9116   */\n      0x00\n        /* \"#utility.yul\":9108:9196   */\n      mstore\n        /* \"#utility.yul\":9215:9219   */\n      0x12\n        /* \"#utility.yul\":9212:9213   */\n      0x04\n        /* \"#utility.yul\":9205:9220   */\n      mstore\n        /* \"#utility.yul\":9239:9243   */\n      0x24\n        /* \"#utility.yul\":9236:9237   */\n      0x00\n        /* \"#utility.yul\":9229:9244   */\n      revert\n        /* \"#utility.yul\":9379:9496   */\n    tag_225:\n        /* \"#utility.yul\":9488:9489   */\n      0x00\n        /* \"#utility.yul\":9485:9486   */\n      dup1\n        /* \"#utility.yul\":9478:9490   */\n      revert\n        /* \"#utility.yul\":9502:9671   */\n    tag_248:\n        /* \"#utility.yul\":9642:9663   */\n      0x6c697175696469747920696e62616c616e636500000000000000000000000000\n        /* \"#utility.yul\":9638:9639   */\n      0x00\n        /* \"#utility.yul\":9630:9636   */\n      dup3\n        /* \"#utility.yul\":9626:9640   */\n      add\n        /* \"#utility.yul\":9619:9664   */\n      mstore\n        /* \"#utility.yul\":9502:9671   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9677:9838   */\n    tag_253:\n        /* \"#utility.yul\":9817:9830   */\n      0x4e6f2072652d656e747279000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9813:9814   */\n      0x00\n        /* \"#utility.yul\":9805:9811   */\n      dup3\n        /* \"#utility.yul\":9801:9815   */\n      add\n        /* \"#utility.yul\":9794:9831   */\n      mstore\n        /* \"#utility.yul\":9677:9838   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9844:10017   */\n    tag_258:\n        /* \"#utility.yul\":9984:10005   */\n      0x7472616e73666572206661696c65642e203a2800000000000000000000000000\n        /* \"#utility.yul\":9980:9981   */\n      0x00\n        /* \"#utility.yul\":9972:9978   */\n      dup3\n        /* \"#utility.yul\":9968:9982   */\n      add\n        /* \"#utility.yul\":9961:10006   */\n      mstore\n        /* \"#utility.yul\":9844:10017   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10027:10151   */\n    tag_214:\n        /* \"#utility.yul\":10101:10122   */\n      tag_340\n        /* \"#utility.yul\":10116:10121   */\n      dup2\n        /* \"#utility.yul\":10101:10122   */\n      tag_319\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":10094:10099   */\n      dup2\n        /* \"#utility.yul\":10091:10123   */\n      eq\n        /* \"#utility.yul\":10081:10141   */\n      tag_341\n      jumpi\n        /* \"#utility.yul\":10137:10138   */\n      0x00\n        /* \"#utility.yul\":10134:10135   */\n      dup1\n        /* \"#utility.yul\":10127:10139   */\n      revert\n        /* \"#utility.yul\":10081:10141   */\n    tag_341:\n        /* \"#utility.yul\":10027:10151   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10161:10291   */\n    tag_218:\n        /* \"#utility.yul\":10238:10262   */\n      tag_343\n        /* \"#utility.yul\":10256:10261   */\n      dup2\n        /* \"#utility.yul\":10238:10262   */\n      tag_262\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":10231:10236   */\n      dup2\n        /* \"#utility.yul\":10228:10263   */\n      eq\n        /* \"#utility.yul\":10218:10281   */\n      tag_344\n      jumpi\n        /* \"#utility.yul\":10277:10278   */\n      0x00\n        /* \"#utility.yul\":10274:10275   */\n      dup1\n        /* \"#utility.yul\":10267:10279   */\n      revert\n        /* \"#utility.yul\":10218:10281   */\n    tag_344:\n        /* \"#utility.yul\":10161:10291   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220920b8a52facf59ed74ba9f72eeb4ef53f52925a1d4e5c0ae6b3ef65f25fb42cc64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_37": {
									"entryPoint": null,
									"id": 37,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 304,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:5",
														"type": ""
													}
												],
												"src": "7:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:274:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "281:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:5"
															},
															"nodeType": "YulIf",
															"src": "243:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "372:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "387:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "401:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "391:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "416:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "462:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "473:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "458:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "458:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "482:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "426:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "426:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "416:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:5",
														"type": ""
													}
												],
												"src": "156:351:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "553:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "563:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "579:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "573:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "563:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "546:6:5",
														"type": ""
													}
												],
												"src": "513:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "639:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "649:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "678:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "660:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "660:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "649:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "621:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "631:7:5",
														"type": ""
													}
												],
												"src": "594:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "751:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "766:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "773:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "762:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "751:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "723:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "733:7:5",
														"type": ""
													}
												],
												"src": "696:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "934:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "937:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "927:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "927:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "927:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "828:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1040:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1057:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1060:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1050:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1050:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1050:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "951:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1117:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1174:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1183:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1186:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1176:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1176:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1176:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1140:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1165:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1147:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1137:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1137:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1130:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1130:43:5"
															},
															"nodeType": "YulIf",
															"src": "1127:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1110:5:5",
														"type": ""
													}
												],
												"src": "1074:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405260006001556000600255600060035560006004556000600660006101000a81548160ff0219169083151502179055503480156200004057600080fd5b50604051620019e1380380620019e18339818101604052810190620000669190620000ca565b6000819050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200014f565b600081519050620000c48162000135565b92915050565b600060208284031215620000e357620000e262000130565b5b6000620000f384828501620000b3565b91505092915050565b6000620001098262000110565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200014081620000fc565b81146200014c57600080fd5b50565b611882806200015f6000396000f3fe6080604052600436106100a75760003560e01c8063a932492f11610064578063a932492f146101dd578063bc23ae5e14610208578063c8ab832514610233578063e0ba200014610263578063eb521a4c1461028e578063ed7bf868146102be576100a7565b80630a861f2a146100ac578063240f3dea146100dd57806329cbab3e1461011a5780635d58ce361461013857806379ed356214610163578063903875f7146101a0575b600080fd5b6100c660048036038101906100c1919061131f565b6102fb565b6040516100d492919061153c565b60405180910390f35b3480156100e957600080fd5b5061010460048036038101906100ff919061131f565b6106d0565b6040516101119190611521565b60405180910390f35b61012261070a565b60405161012f9190611521565b60405180910390f35b34801561014457600080fd5b5061014d610977565b60405161015a9190611521565b60405180910390f35b34801561016f57600080fd5b5061018a6004803603810190610185919061131f565b61097d565b6040516101979190611521565b60405180910390f35b3480156101ac57600080fd5b506101c760048036038101906101c2919061131f565b6109cf565b6040516101d49190611521565b60405180910390f35b3480156101e957600080fd5b506101f2610a22565b6040516101ff9190611521565b60405180910390f35b34801561021457600080fd5b5061021d610a28565b60405161022a9190611521565b60405180910390f35b61024d6004803603810190610248919061131f565b610aeb565b60405161025a9190611521565b60405180910390f35b34801561026f57600080fd5b50610278610d1b565b6040516102859190611521565b60405180910390f35b6102a860048036038101906102a3919061131f565b610d62565b6040516102b59190611521565b60405180910390f35b3480156102ca57600080fd5b506102e560048036038101906102e0919061131f565b611279565b6040516102f29190611521565b60405180910390f35b600080600660009054906101000a900460ff161561034e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610345906114e1565b60405180910390fd5b6001600660006101000a81548160ff021916908315150217905550600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483111580156103c657506000836003546103c3919061168e565b10155b1561065657600354600254846103dc9190611634565b6103e69190611603565b9150600354600154846103f99190611634565b6104039190611603565b905082600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610454919061168e565b92505081905550826003600082825461046d919061168e565b9250508190555060003390508073ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f193505050501580156104bf573d6000803e3d6000fd5b5082600260008282546104d2919061168e565b9250508190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330846040518363ffffffff1660e01b8152600401610534929190611498565b602060405180830381600087803b15801561054e57600080fd5b505af1158015610562573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058691906112f2565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3083856040518463ffffffff1660e01b81526004016105e49392919061142a565b602060405180830381600087803b1580156105fe57600080fd5b505af1158015610612573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063691906112f2565b508160016000828254610649919061168e565b925050819055505061065f565b60009150600090505b60015460025461066f9190611634565b6004819055507fb14f451e613015c13a17c78777f1d87fcb448d7330d67299a09b8f2db38aab108183856040516106a893929190611565565b60405180910390a16000600660006101000a81548160ff021916908315150217905550915091565b6000670de0b6b3a7640000826106e69190611634565b9150600154826002546106f99190611634565b6107039190611603565b9050919050565b6000600660009054906101000a900460ff161561075c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610753906114e1565b60405180910390fd5b6001600660006101000a81548160ff021916908315150217905550346002600082825461078991906115ad565b9250508190555060006002546004546107a29190611603565b9050806001546107b2919061168e565b9150600033905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330856040518363ffffffff1660e01b8152600401610814929190611498565b602060405180830381600087803b15801561082e57600080fd5b505af1158015610842573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086691906112f2565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3083866040518463ffffffff1660e01b81526004016108c49392919061142a565b602060405180830381600087803b1580156108de57600080fd5b505af11580156108f2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091691906112f2565b50816001819055507fcdfc57b3d0cdc24b23cea1f480aabea287321f5bee23ad76c2b52fa7982f5ea5833460405161094f92919061153c565b60405180910390a150506000600660006101000a81548160ff02191690831515021790555090565b60025481565b6000808260025461098e91906115ad565b90506000816004546109a09190611603565b9050806001546109b0919061168e565b9250678ac7230489e80000836109c69190611603565b92505050919050565b6000670de0b6b3a7640000826109e59190611634565b91506000826001546109f791906115ad565b9050600081600454610a099190611603565b905080600254610a19919061168e565b92505050919050565b60045481565b6000670de0b6b3a764000060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a8c919061140f565b60206040518083038186803b158015610aa457600080fd5b505afa158015610ab8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610adc919061134c565b610ae69190611603565b905090565b6000600660009054906101000a900460ff1615610b3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b34906114e1565b60405180910390fd5b6001600660006101000a81548160ff021916908315150217905550670de0b6b3a764000082610b6c9190611634565b915060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610bcb93929190611461565b602060405180830381600087803b158015610be557600080fd5b505af1158015610bf9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1d91906112f2565b508160016000828254610c3091906115ad565b925050819055506000600154600454610c499190611603565b905080600254610c59919061168e565b915060003390508073ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f19350505050158015610ca6573d6000803e3d6000fd5b508260026000828254610cb9919061168e565b925050819055507f3297a389bb586920e62a196af529d5f42651b17a1013d6bfe77f22372a0b21128484604051610cf192919061153c565b60405180910390a150506000600660006101000a81548160ff021916908315150217905550919050565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6000600660009054906101000a900460ff1615610db4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dab906114e1565b60405180910390fd5b6001600660006101000a81548160ff02191690831515021790555060003490508060026000828254610de691906115ad565b92505081905550670de0b6b3a764000083610e019190611634565b925060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330856040518363ffffffff1660e01b8152600401610e5e929190611498565b602060405180830381600087803b158015610e7857600080fd5b505af1158015610e8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb091906112f2565b5060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b8152600401610f1193929190611461565b602060405180830381600087803b158015610f2b57600080fd5b505af1158015610f3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f6391906112f2565b905080610fa5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9c90611501565b60405180910390fd5b8360016000828254610fb791906115ad565b9250508190555060025482600354610fcf9190611634565b610fd99190611603565b60015485600354610fea9190611634565b610ff49190611603565b14611034576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102b906114c1565b60405180910390fd5b600060035414156110e1576064600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600360008282546110d591906115ad565b92505081905550611185565b600154846003546110f29190611634565b6110fc9190611603565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461114a91906115ad565b92505081905550600154846003546111629190611634565b61116c9190611603565b6003600082825461117d91906115ad565b925050819055505b6001546002546111959190611634565b6004819055507faa58f006cc244b2af6662862508bd39465f57169ff8386d1d1f7b0b903150abc8483600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460405161120d93929190611565565b60405180910390a1600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054925050506000600660006101000a81548160ff021916908315150217905550919050565b60006002548260015461128c9190611634565b6112969190611603565b9050670de0b6b3a7640000816112ac9190611603565b9050919050565b6000815190506112c28161181e565b92915050565b6000813590506112d781611835565b92915050565b6000815190506112ec81611835565b92915050565b6000602082840312156113085761130761179e565b5b6000611316848285016112b3565b91505092915050565b6000602082840312156113355761133461179e565b5b6000611343848285016112c8565b91505092915050565b6000602082840312156113625761136161179e565b5b6000611370848285016112dd565b91505092915050565b6113828161170a565b82525050565b611391816116c2565b82525050565b60006113a460138361159c565b91506113af826117a3565b602082019050919050565b60006113c7600b8361159c565b91506113d2826117cc565b602082019050919050565b60006113ea60138361159c565b91506113f5826117f5565b602082019050919050565b61140981611700565b82525050565b60006020820190506114246000830184611388565b92915050565b600060608201905061143f6000830186611388565b61144c6020830185611379565b6114596040830184611400565b949350505050565b60006060820190506114766000830186611388565b6114836020830185611388565b6114906040830184611400565b949350505050565b60006040820190506114ad6000830185611388565b6114ba6020830184611400565b9392505050565b600060208201905081810360008301526114da81611397565b9050919050565b600060208201905081810360008301526114fa816113ba565b9050919050565b6000602082019050818103600083015261151a816113dd565b9050919050565b60006020820190506115366000830184611400565b92915050565b60006040820190506115516000830185611400565b61155e6020830184611400565b9392505050565b600060608201905061157a6000830186611400565b6115876020830185611400565b6115946040830184611400565b949350505050565b600082825260208201905092915050565b60006115b882611700565b91506115c383611700565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156115f8576115f7611740565b5b828201905092915050565b600061160e82611700565b915061161983611700565b9250826116295761162861176f565b5b828204905092915050565b600061163f82611700565b915061164a83611700565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561168357611682611740565b5b828202905092915050565b600061169982611700565b91506116a483611700565b9250828210156116b7576116b6611740565b5b828203905092915050565b60006116cd826116e0565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006117158261171c565b9050919050565b60006117278261172e565b9050919050565b6000611739826116e0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f6c697175696469747920696e62616c616e636500000000000000000000000000600082015250565b7f4e6f2072652d656e747279000000000000000000000000000000000000000000600082015250565b7f7472616e73666572206661696c65642e203a2800000000000000000000000000600082015250565b611827816116d4565b811461183257600080fd5b50565b61183e81611700565b811461184957600080fd5b5056fea2646970667358221220920b8a52facf59ed74ba9f72eeb4ef53f52925a1d4e5c0ae6b3ef65f25fb42cc64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x1 SSTORE PUSH1 0x0 PUSH1 0x2 SSTORE PUSH1 0x0 PUSH1 0x3 SSTORE PUSH1 0x0 PUSH1 0x4 SSTORE PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x19E1 CODESIZE SUB DUP1 PUSH3 0x19E1 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x66 SWAP2 SWAP1 PUSH3 0xCA JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x14F JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xC4 DUP2 PUSH3 0x135 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xE3 JUMPI PUSH3 0xE2 PUSH3 0x130 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0xF3 DUP5 DUP3 DUP6 ADD PUSH3 0xB3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x109 DUP3 PUSH3 0x110 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x140 DUP2 PUSH3 0xFC JUMP JUMPDEST DUP2 EQ PUSH3 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1882 DUP1 PUSH3 0x15F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA932492F GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA932492F EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0xBC23AE5E EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0xC8AB8325 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xE0BA2000 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xEB521A4C EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0xED7BF868 EQ PUSH2 0x2BE JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0xA861F2A EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x240F3DEA EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x29CBAB3E EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x5D58CE36 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x79ED3562 EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x903875F7 EQ PUSH2 0x1A0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC1 SWAP2 SWAP1 PUSH2 0x131F JUMP JUMPDEST PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD4 SWAP3 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x104 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFF SWAP2 SWAP1 PUSH2 0x131F JUMP JUMPDEST PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x122 PUSH2 0x70A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH2 0x977 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x131F JUMP JUMPDEST PUSH2 0x97D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x131F JUMP JUMPDEST PUSH2 0x9CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0xA22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21D PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x131F JUMP JUMPDEST PUSH2 0xAEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0xD1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x131F JUMP JUMPDEST PUSH2 0xD62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x131F JUMP JUMPDEST PUSH2 0x1279 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x34E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x345 SWAP1 PUSH2 0x14E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 GT ISZERO DUP1 ISZERO PUSH2 0x3C6 JUMPI POP PUSH1 0x0 DUP4 PUSH1 0x3 SLOAD PUSH2 0x3C3 SWAP2 SWAP1 PUSH2 0x168E JUMP JUMPDEST LT ISZERO JUMPDEST ISZERO PUSH2 0x656 JUMPI PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD DUP5 PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST SWAP2 POP PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD DUP5 PUSH2 0x3F9 SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x403 SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x454 SWAP2 SWAP1 PUSH2 0x168E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x46D SWAP2 SWAP1 PUSH2 0x168E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLER SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP5 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x4BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP3 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4D2 SWAP2 SWAP1 PUSH2 0x168E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 ADDRESS DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x534 SWAP3 SWAP2 SWAP1 PUSH2 0x1498 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x54E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x562 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x586 SWAP2 SWAP1 PUSH2 0x12F2 JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS DUP4 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x142A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x612 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x636 SWAP2 SWAP1 PUSH2 0x12F2 JUMP JUMPDEST POP DUP2 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x649 SWAP2 SWAP1 PUSH2 0x168E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP PUSH2 0x65F JUMP JUMPDEST PUSH1 0x0 SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH2 0x66F SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0xB14F451E613015C13A17C78777F1D87FCB448D7330D67299A09B8F2DB38AAB10 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH2 0x6A8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1565 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x6E6 SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 SLOAD DUP3 PUSH1 0x2 SLOAD PUSH2 0x6F9 SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x703 SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x75C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x753 SWAP1 PUSH2 0x14E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x789 SWAP2 SWAP1 PUSH2 0x15AD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 SLOAD PUSH1 0x4 SLOAD PUSH2 0x7A2 SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 SLOAD PUSH2 0x7B2 SWAP2 SWAP1 PUSH2 0x168E JUMP JUMPDEST SWAP2 POP PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x814 SWAP3 SWAP2 SWAP1 PUSH2 0x1498 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x82E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x842 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x866 SWAP2 SWAP1 PUSH2 0x12F2 JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS DUP4 DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x142A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x916 SWAP2 SWAP1 PUSH2 0x12F2 JUMP JUMPDEST POP DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0xCDFC57B3D0CDC24B23CEA1F480AABEA287321F5BEE23AD76C2B52FA7982F5EA5 DUP4 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x94F SWAP3 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x2 SLOAD PUSH2 0x98E SWAP2 SWAP1 PUSH2 0x15AD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x4 SLOAD PUSH2 0x9A0 SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 SLOAD PUSH2 0x9B0 SWAP2 SWAP1 PUSH2 0x168E JUMP JUMPDEST SWAP3 POP PUSH8 0x8AC7230489E80000 DUP4 PUSH2 0x9C6 SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x9E5 SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 PUSH1 0x1 SLOAD PUSH2 0x9F7 SWAP2 SWAP1 PUSH2 0x15AD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x4 SLOAD PUSH2 0xA09 SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 SLOAD PUSH2 0xA19 SWAP2 SWAP1 PUSH2 0x168E JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8C SWAP2 SWAP1 PUSH2 0x140F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAB8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xADC SWAP2 SWAP1 PUSH2 0x134C JUMP JUMPDEST PUSH2 0xAE6 SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB34 SWAP1 PUSH2 0x14E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0xB6C SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBF9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC1D SWAP2 SWAP1 PUSH2 0x12F2 JUMP JUMPDEST POP DUP2 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC30 SWAP2 SWAP1 PUSH2 0x15AD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 SLOAD PUSH1 0x4 SLOAD PUSH2 0xC49 SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 SLOAD PUSH2 0xC59 SWAP2 SWAP1 PUSH2 0x168E JUMP JUMPDEST SWAP2 POP PUSH1 0x0 CALLER SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP5 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xCA6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP3 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCB9 SWAP2 SWAP1 PUSH2 0x168E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x3297A389BB586920E62A196AF529D5F42651B17A1013D6BFE77F22372A0B2112 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xCF1 SWAP3 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xDB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDAB SWAP1 PUSH2 0x14E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 CALLVALUE SWAP1 POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDE6 SWAP2 SWAP1 PUSH2 0x15AD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0xE01 SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE5E SWAP3 SWAP2 SWAP1 PUSH2 0x1498 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE8C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEB0 SWAP2 SWAP1 PUSH2 0x12F2 JUMP JUMPDEST POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF11 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF3F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF63 SWAP2 SWAP1 PUSH2 0x12F2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xFA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9C SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xFB7 SWAP2 SWAP1 PUSH2 0x15AD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 SLOAD DUP3 PUSH1 0x3 SLOAD PUSH2 0xFCF SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0xFD9 SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP6 PUSH1 0x3 SLOAD PUSH2 0xFEA SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0xFF4 SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST EQ PUSH2 0x1034 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102B SWAP1 PUSH2 0x14C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD EQ ISZERO PUSH2 0x10E1 JUMPI PUSH1 0x64 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x10D5 SWAP2 SWAP1 PUSH2 0x15AD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP5 PUSH1 0x3 SLOAD PUSH2 0x10F2 SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x10FC SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x114A SWAP2 SWAP1 PUSH2 0x15AD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 SLOAD DUP5 PUSH1 0x3 SLOAD PUSH2 0x1162 SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x116C SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x117D SWAP2 SWAP1 PUSH2 0x15AD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH2 0x1195 SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0xAA58F006CC244B2AF6662862508BD39465F57169FF8386D1D1F7B0B903150ABC DUP5 DUP4 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH2 0x120D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1565 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 PUSH1 0x1 SLOAD PUSH2 0x128C SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x1296 SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x12AC SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x12C2 DUP2 PUSH2 0x181E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12D7 DUP2 PUSH2 0x1835 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x12EC DUP2 PUSH2 0x1835 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1308 JUMPI PUSH2 0x1307 PUSH2 0x179E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1316 DUP5 DUP3 DUP6 ADD PUSH2 0x12B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1335 JUMPI PUSH2 0x1334 PUSH2 0x179E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1343 DUP5 DUP3 DUP6 ADD PUSH2 0x12C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1362 JUMPI PUSH2 0x1361 PUSH2 0x179E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1370 DUP5 DUP3 DUP6 ADD PUSH2 0x12DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1382 DUP2 PUSH2 0x170A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1391 DUP2 PUSH2 0x16C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13A4 PUSH1 0x13 DUP4 PUSH2 0x159C JUMP JUMPDEST SWAP2 POP PUSH2 0x13AF DUP3 PUSH2 0x17A3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13C7 PUSH1 0xB DUP4 PUSH2 0x159C JUMP JUMPDEST SWAP2 POP PUSH2 0x13D2 DUP3 PUSH2 0x17CC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13EA PUSH1 0x13 DUP4 PUSH2 0x159C JUMP JUMPDEST SWAP2 POP PUSH2 0x13F5 DUP3 PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1409 DUP2 PUSH2 0x1700 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1424 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1388 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x143F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1388 JUMP JUMPDEST PUSH2 0x144C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1379 JUMP JUMPDEST PUSH2 0x1459 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1400 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1476 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1388 JUMP JUMPDEST PUSH2 0x1483 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1388 JUMP JUMPDEST PUSH2 0x1490 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1400 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x14AD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1388 JUMP JUMPDEST PUSH2 0x14BA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1400 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14DA DUP2 PUSH2 0x1397 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14FA DUP2 PUSH2 0x13BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x151A DUP2 PUSH2 0x13DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1536 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1400 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1551 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1400 JUMP JUMPDEST PUSH2 0x155E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1400 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x157A PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1400 JUMP JUMPDEST PUSH2 0x1587 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1400 JUMP JUMPDEST PUSH2 0x1594 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1400 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B8 DUP3 PUSH2 0x1700 JUMP JUMPDEST SWAP2 POP PUSH2 0x15C3 DUP4 PUSH2 0x1700 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x15F8 JUMPI PUSH2 0x15F7 PUSH2 0x1740 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160E DUP3 PUSH2 0x1700 JUMP JUMPDEST SWAP2 POP PUSH2 0x1619 DUP4 PUSH2 0x1700 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1629 JUMPI PUSH2 0x1628 PUSH2 0x176F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x163F DUP3 PUSH2 0x1700 JUMP JUMPDEST SWAP2 POP PUSH2 0x164A DUP4 PUSH2 0x1700 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1683 JUMPI PUSH2 0x1682 PUSH2 0x1740 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1699 DUP3 PUSH2 0x1700 JUMP JUMPDEST SWAP2 POP PUSH2 0x16A4 DUP4 PUSH2 0x1700 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x16B7 JUMPI PUSH2 0x16B6 PUSH2 0x1740 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16CD DUP3 PUSH2 0x16E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1715 DUP3 PUSH2 0x171C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1727 DUP3 PUSH2 0x172E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1739 DUP3 PUSH2 0x16E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x6C697175696469747920696E62616C616E636500000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F2072652D656E747279000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x7472616E73666572206661696C65642E203A2800000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1827 DUP2 PUSH2 0x16D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1832 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x183E DUP2 PUSH2 0x1700 JUMP JUMPDEST DUP2 EQ PUSH2 0x1849 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 SIGNEXTEND DUP11 MSTORE STATICCALL 0xCF MSIZE 0xED PUSH21 0xBA9F72EEB4EF53F52925A1D4E5C0AE6B3EF65F25FB TIMESTAMP 0xCC PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "331:10282:0:-:0;;;448:1;415:34;;541:1;508:34;;578:1;547:32;;600:1;584:17;;1070:5;1056:19;;;;;;;;;;;;;;;;;;;;747:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;780:28;811:3;780:34;;844:20;823:11;;:42;;;;;;;;;;;;;;;;;;771:100;747:124;331:10282;;7:143:5;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;594:96::-;631:7;660:24;678:5;660:24;:::i;:::-;649:35;;594:96;;;:::o;696:126::-;733:7;773:42;766:5;762:54;751:65;;696:126;;;:::o;951:117::-;1060:1;1057;1050:12;1074:122;1147:24;1165:5;1147:24;:::i;:::-;1140:5;1137:35;1127:63;;1186:1;1183;1176:12;1127:63;1074:122;:::o;331:10282:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@K_17": {
									"entryPoint": 2594,
									"id": 17,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_ERC20TokenBalance_614": {
									"entryPoint": 2600,
									"id": 614,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@contractEthBalance_11": {
									"entryPoint": 2423,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@estimateERC20TokenToProvide_245": {
									"entryPoint": 4729,
									"id": 245,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@estimateEthToProvide_224": {
									"entryPoint": 1744,
									"id": 224,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@estimateSwapForERC20Token_597": {
									"entryPoint": 2429,
									"id": 597,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@estimateSwapForEth_494": {
									"entryPoint": 2511,
									"id": 494,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getMyLiquidityPositions_256": {
									"entryPoint": 3355,
									"id": 256,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@provideLiquidity_200": {
									"entryPoint": 3426,
									"id": 200,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@swapForERC20Token_566": {
									"entryPoint": 1802,
									"id": 566,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@swapForEth_460": {
									"entryPoint": 2795,
									"id": 460,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@withdrawLiquidity_385": {
									"entryPoint": 763,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_fromStack": {
									"entryPoint": 4985,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_5aeb38dcb14d1136e05ccbdc1601b082614d347bf503da078dda80a7f7c5ee6e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5015,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b88163eff53e24a5b06bbb2ff938a2bfbe8d0115396ef7a73b07a01a5379fb16_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c465a993f20bf4ac03b978727ed415088b46306fe674a90dddade57ced237579_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5162,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5217,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5272,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5aeb38dcb14d1136e05ccbdc1601b082614d347bf503da078dda80a7f7c5ee6e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5313,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b88163eff53e24a5b06bbb2ff938a2bfbe8d0115396ef7a73b07a01a5379fb16__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c465a993f20bf4ac03b978727ed415088b46306fe674a90dddade57ced237579__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5377,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5409,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5436,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5477,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5684,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5826,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5844,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5888,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_address_payable_to_t_address": {
									"entryPoint": 5898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 5916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 5934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5952,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5999,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6046,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_5aeb38dcb14d1136e05ccbdc1601b082614d347bf503da078dda80a7f7c5ee6e": {
									"entryPoint": 6051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b88163eff53e24a5b06bbb2ff938a2bfbe8d0115396ef7a73b07a01a5379fb16": {
									"entryPoint": 6092,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c465a993f20bf4ac03b978727ed415088b46306fe674a90dddade57ced237579": {
									"entryPoint": 6133,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10298:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "67:77:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "92:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "86:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "77:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "132:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "108:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "108:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "45:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "53:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "61:5:5",
														"type": ""
													}
												],
												"src": "7:137:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "202:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "212:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "234:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "221:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "212:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "250:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "250:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "250:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "180:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "188:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "196:5:5",
														"type": ""
													}
												],
												"src": "150:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "358:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "368:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "383:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "377:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "377:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "368:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "426:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "399:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "399:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "336:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "344:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "352:5:5",
														"type": ""
													}
												],
												"src": "295:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "518:271:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "564:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "566:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "566:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "566:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "539:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "548:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "535:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "535:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "560:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "531:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "531:32:5"
															},
															"nodeType": "YulIf",
															"src": "528:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "657:125:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "672:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "686:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "676:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "701:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "744:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "755:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "740:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "740:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "764:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "711:28:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "711:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "701:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "488:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "499:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "511:6:5",
														"type": ""
													}
												],
												"src": "444:345:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "861:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "907:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "909:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "909:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "909:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "882:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "891:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "878:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "878:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "903:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "874:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "874:32:5"
															},
															"nodeType": "YulIf",
															"src": "871:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1000:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1015:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1029:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1019:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1044:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1079:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1090:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1075:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1075:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1099:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1054:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1054:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1044:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "831:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "842:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "854:6:5",
														"type": ""
													}
												],
												"src": "795:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1207:274:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1253:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1255:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1255:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1255:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1228:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1237:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1224:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1224:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1249:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1220:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1220:32:5"
															},
															"nodeType": "YulIf",
															"src": "1217:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1346:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1361:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1375:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1365:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1390:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1436:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1447:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1432:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1432:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1456:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1400:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1400:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1390:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1177:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1188:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1200:6:5",
														"type": ""
													}
												],
												"src": "1130:351:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1560:74:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1577:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1621:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_address_payable_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1582:38:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1582:45:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1570:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1570:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1570:58:5"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1548:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1555:3:5",
														"type": ""
													}
												],
												"src": "1487:147:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1705:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1722:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1745:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1727:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1727:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1715:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1715:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1693:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1700:3:5",
														"type": ""
													}
												],
												"src": "1640:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1910:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1920:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1986:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1991:2:5",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1927:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1927:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1920:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2092:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5aeb38dcb14d1136e05ccbdc1601b082614d347bf503da078dda80a7f7c5ee6e",
																	"nodeType": "YulIdentifier",
																	"src": "2003:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2003:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2003:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2105:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2116:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2121:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2112:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2112:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2105:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5aeb38dcb14d1136e05ccbdc1601b082614d347bf503da078dda80a7f7c5ee6e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1898:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1906:3:5",
														"type": ""
													}
												],
												"src": "1764:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2282:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2292:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2358:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2363:2:5",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2299:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2299:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2292:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2464:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b88163eff53e24a5b06bbb2ff938a2bfbe8d0115396ef7a73b07a01a5379fb16",
																	"nodeType": "YulIdentifier",
																	"src": "2375:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2375:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2375:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2477:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2488:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2493:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2484:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2484:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2477:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b88163eff53e24a5b06bbb2ff938a2bfbe8d0115396ef7a73b07a01a5379fb16_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2270:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2278:3:5",
														"type": ""
													}
												],
												"src": "2136:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2654:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2664:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2730:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2735:2:5",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2671:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2671:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2664:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2836:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c465a993f20bf4ac03b978727ed415088b46306fe674a90dddade57ced237579",
																	"nodeType": "YulIdentifier",
																	"src": "2747:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2747:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2747:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2849:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2860:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2865:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2856:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2856:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2849:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c465a993f20bf4ac03b978727ed415088b46306fe674a90dddade57ced237579_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2642:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2650:3:5",
														"type": ""
													}
												],
												"src": "2508:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2945:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2962:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2985:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2967:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2967:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2955:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2955:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2955:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2933:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2940:3:5",
														"type": ""
													}
												],
												"src": "2880:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3102:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3112:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3124:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3135:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3120:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3120:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3112:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3192:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3205:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3216:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3201:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3201:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3148:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3148:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3148:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3074:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3086:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3097:4:5",
														"type": ""
													}
												],
												"src": "3004:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3394:296:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3404:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3416:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3427:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3412:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3412:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3404:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3484:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3497:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3508:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3493:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3493:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3440:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3440:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3440:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3573:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3586:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3597:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3582:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3582:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3521:51:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3521:80:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3521:80:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3655:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3668:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3679:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3664:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3664:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3611:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3611:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3611:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3350:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3362:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3370:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3378:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3389:4:5",
														"type": ""
													}
												],
												"src": "3232:458:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3850:288:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3860:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3872:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3883:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3868:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3868:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3860:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3940:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3953:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3964:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3949:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3949:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3896:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3896:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3896:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4021:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4034:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4045:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4030:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4030:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3977:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3977:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3977:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4103:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4116:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4127:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4112:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4112:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4059:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4059:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4059:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3806:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3818:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3826:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3834:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3845:4:5",
														"type": ""
													}
												],
												"src": "3696:442:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4270:206:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4280:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4292:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4303:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4288:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4288:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4280:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4360:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4373:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4384:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4369:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4369:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4316:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4316:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4316:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4441:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4454:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4465:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4450:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4450:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4397:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4397:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4397:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4234:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4246:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4254:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4265:4:5",
														"type": ""
													}
												],
												"src": "4144:332:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4653:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4663:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4675:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4686:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4671:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4671:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4663:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4710:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4721:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4706:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4706:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4729:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4735:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4725:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4725:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4699:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4699:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4699:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4755:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4889:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5aeb38dcb14d1136e05ccbdc1601b082614d347bf503da078dda80a7f7c5ee6e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4763:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4763:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4755:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5aeb38dcb14d1136e05ccbdc1601b082614d347bf503da078dda80a7f7c5ee6e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4633:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4648:4:5",
														"type": ""
													}
												],
												"src": "4482:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5078:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5088:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5100:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5111:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5096:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5096:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5088:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5135:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5146:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5131:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5131:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5154:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5160:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5150:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5150:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5124:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5124:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5124:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5180:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5314:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b88163eff53e24a5b06bbb2ff938a2bfbe8d0115396ef7a73b07a01a5379fb16_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5188:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5188:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5180:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b88163eff53e24a5b06bbb2ff938a2bfbe8d0115396ef7a73b07a01a5379fb16__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5058:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5073:4:5",
														"type": ""
													}
												],
												"src": "4907:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5503:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5513:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5525:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5536:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5521:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5521:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5513:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5560:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5571:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5556:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5556:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5579:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5585:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5575:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5575:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5549:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5549:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5549:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5605:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5739:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c465a993f20bf4ac03b978727ed415088b46306fe674a90dddade57ced237579_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5613:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5613:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5605:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c465a993f20bf4ac03b978727ed415088b46306fe674a90dddade57ced237579__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5483:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5498:4:5",
														"type": ""
													}
												],
												"src": "5332:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5855:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5865:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5877:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5888:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5873:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5873:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5865:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5945:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5958:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5969:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5954:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5954:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5901:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5901:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5901:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5827:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5839:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5850:4:5",
														"type": ""
													}
												],
												"src": "5757:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6111:206:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6121:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6133:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6144:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6129:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6129:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6121:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6201:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6214:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6225:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6210:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6210:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6157:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6157:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6157:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6282:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6295:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6306:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6291:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6291:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6238:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6238:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6238:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6075:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6087:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6095:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6106:4:5",
														"type": ""
													}
												],
												"src": "5985:332:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6477:288:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6487:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6499:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6510:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6495:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6495:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6487:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6567:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6580:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6591:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6576:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6576:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6523:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6523:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6523:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6648:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6661:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6672:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6657:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6657:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6604:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6604:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6604:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6730:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6743:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6754:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6739:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6739:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6686:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6686:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6686:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6433:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6445:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6453:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6461:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6472:4:5",
														"type": ""
													}
												],
												"src": "6323:442:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6811:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6821:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6837:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6831:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6831:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "6821:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6804:6:5",
														"type": ""
													}
												],
												"src": "6771:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6948:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6965:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6970:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6958:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6958:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6958:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6986:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7005:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7010:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7001:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7001:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6986:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6920:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6925:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6936:11:5",
														"type": ""
													}
												],
												"src": "6852:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7071:261:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7081:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7104:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7086:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7086:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7081:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7115:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7138:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7120:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7120:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7115:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7278:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7280:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7280:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7280:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7199:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7206:66:5",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7274:1:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7202:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7202:74:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7196:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7196:81:5"
															},
															"nodeType": "YulIf",
															"src": "7193:107:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7310:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7321:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7324:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7317:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7317:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7310:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7058:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7061:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7067:3:5",
														"type": ""
													}
												],
												"src": "7027:305:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7380:143:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7390:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7413:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7395:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7395:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7390:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7424:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7447:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7429:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7429:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7424:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7471:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "7473:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7473:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7473:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7468:1:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7461:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7461:9:5"
															},
															"nodeType": "YulIf",
															"src": "7458:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7503:14:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7512:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7515:1:5"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "7508:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7508:9:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7503:1:5"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7369:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7372:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "7378:1:5",
														"type": ""
													}
												],
												"src": "7338:185:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7577:300:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7587:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7610:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7592:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7592:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7587:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7621:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7644:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7626:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7626:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7621:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7819:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7821:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7821:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7821:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7731:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7724:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7724:9:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "7717:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7717:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "7739:1:5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7746:66:5",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7814:1:5"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "7742:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7742:74:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7736:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7736:81:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7713:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7713:105:5"
															},
															"nodeType": "YulIf",
															"src": "7710:131:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7851:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7866:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7869:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7862:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7862:9:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "7851:7:5"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7560:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7563:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "7569:7:5",
														"type": ""
													}
												],
												"src": "7529:348:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7928:146:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7938:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7961:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7943:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7943:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7938:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7972:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7995:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7977:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7977:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7972:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8019:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8021:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8021:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8021:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8013:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8016:1:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8010:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8010:8:5"
															},
															"nodeType": "YulIf",
															"src": "8007:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8051:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8063:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8066:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8059:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8059:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "8051:4:5"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7914:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7917:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "7923:4:5",
														"type": ""
													}
												],
												"src": "7883:191:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8125:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8135:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8164:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "8146:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8146:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8135:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8107:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8117:7:5",
														"type": ""
													}
												],
												"src": "8080:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8224:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8234:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8259:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "8252:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8252:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8245:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8245:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8234:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8206:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8216:7:5",
														"type": ""
													}
												],
												"src": "8182:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8323:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8333:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8348:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8355:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8344:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8344:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8333:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8305:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8315:7:5",
														"type": ""
													}
												],
												"src": "8278:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8455:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8465:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "8476:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8465:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8437:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8447:7:5",
														"type": ""
													}
												],
												"src": "8410:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8561:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8571:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8615:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "8584:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8584:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "8571:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_address_payable_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8541:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "8551:9:5",
														"type": ""
													}
												],
												"src": "8493:134:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8693:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8703:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8747:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "8716:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8716:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "8703:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8673:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "8683:9:5",
														"type": ""
													}
												],
												"src": "8633:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8825:53:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8835:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8866:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "8848:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8848:24:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "8835:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8805:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "8815:9:5",
														"type": ""
													}
												],
												"src": "8765:113:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8912:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8929:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8932:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8922:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8922:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8922:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9026:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9029:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9019:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9019:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9019:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9050:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9053:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9043:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9043:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9043:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8884:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9098:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9115:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9118:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9108:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9108:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9108:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9212:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9215:4:5",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9205:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9205:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9205:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9236:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9239:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9229:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9229:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9229:15:5"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "9070:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9345:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9362:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9365:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9355:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9355:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9355:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "9256:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9468:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9485:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9488:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9478:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9478:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9478:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "9379:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9608:63:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9630:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9638:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9626:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9626:14:5"
																	},
																	{
																		"hexValue": "6c697175696469747920696e62616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9642:21:5",
																		"type": "",
																		"value": "liquidity inbalance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9619:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9619:45:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9619:45:5"
														}
													]
												},
												"name": "store_literal_in_memory_5aeb38dcb14d1136e05ccbdc1601b082614d347bf503da078dda80a7f7c5ee6e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9600:6:5",
														"type": ""
													}
												],
												"src": "9502:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9783:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9805:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9813:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9801:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9801:14:5"
																	},
																	{
																		"hexValue": "4e6f2072652d656e747279",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9817:13:5",
																		"type": "",
																		"value": "No re-entry"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9794:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9794:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9794:37:5"
														}
													]
												},
												"name": "store_literal_in_memory_b88163eff53e24a5b06bbb2ff938a2bfbe8d0115396ef7a73b07a01a5379fb16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9775:6:5",
														"type": ""
													}
												],
												"src": "9677:161:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9950:67:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9972:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9980:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9968:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9968:14:5"
																	},
																	{
																		"hexValue": "7472616e73666572206661696c65642e203a28",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9984:21:5",
																		"type": "",
																		"value": "transfer failed. :("
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9961:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9961:45:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9961:45:5"
														}
													]
												},
												"name": "store_literal_in_memory_c465a993f20bf4ac03b978727ed415088b46306fe674a90dddade57ced237579",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9942:6:5",
														"type": ""
													}
												],
												"src": "9844:173:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10067:84:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10125:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10134:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10137:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10127:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10127:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10127:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10094:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10116:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "10101:14:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10101:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10091:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10091:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10084:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10084:40:5"
															},
															"nodeType": "YulIf",
															"src": "10081:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10060:5:5",
														"type": ""
													}
												],
												"src": "10027:124:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10204:87:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10265:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10274:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10277:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10267:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10267:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10267:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10231:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10256:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "10238:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10238:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10228:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10228:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10221:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10221:43:5"
															},
															"nodeType": "YulIf",
															"src": "10218:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10197:5:5",
														"type": ""
													}
												],
												"src": "10161:130:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_5aeb38dcb14d1136e05ccbdc1601b082614d347bf503da078dda80a7f7c5ee6e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_5aeb38dcb14d1136e05ccbdc1601b082614d347bf503da078dda80a7f7c5ee6e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b88163eff53e24a5b06bbb2ff938a2bfbe8d0115396ef7a73b07a01a5379fb16_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_b88163eff53e24a5b06bbb2ff938a2bfbe8d0115396ef7a73b07a01a5379fb16(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_c465a993f20bf4ac03b978727ed415088b46306fe674a90dddade57ced237579_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_c465a993f20bf4ac03b978727ed415088b46306fe674a90dddade57ced237579(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_5aeb38dcb14d1136e05ccbdc1601b082614d347bf503da078dda80a7f7c5ee6e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5aeb38dcb14d1136e05ccbdc1601b082614d347bf503da078dda80a7f7c5ee6e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b88163eff53e24a5b06bbb2ff938a2bfbe8d0115396ef7a73b07a01a5379fb16__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b88163eff53e24a5b06bbb2ff938a2bfbe8d0115396ef7a73b07a01a5379fb16_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c465a993f20bf4ac03b978727ed415088b46306fe674a90dddade57ced237579__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c465a993f20bf4ac03b978727ed415088b46306fe674a90dddade57ced237579_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_5aeb38dcb14d1136e05ccbdc1601b082614d347bf503da078dda80a7f7c5ee6e(memPtr) {\n\n        mstore(add(memPtr, 0), \"liquidity inbalance\")\n\n    }\n\n    function store_literal_in_memory_b88163eff53e24a5b06bbb2ff938a2bfbe8d0115396ef7a73b07a01a5379fb16(memPtr) {\n\n        mstore(add(memPtr, 0), \"No re-entry\")\n\n    }\n\n    function store_literal_in_memory_c465a993f20bf4ac03b978727ed415088b46306fe674a90dddade57ced237579(memPtr) {\n\n        mstore(add(memPtr, 0), \"transfer failed. :(\")\n\n        }\n\n        function validator_revert_t_bool(value) {\n            if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n        }\n\n        function validator_revert_t_uint256(value) {\n            if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n        }\n\n    }\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100a75760003560e01c8063a932492f11610064578063a932492f146101dd578063bc23ae5e14610208578063c8ab832514610233578063e0ba200014610263578063eb521a4c1461028e578063ed7bf868146102be576100a7565b80630a861f2a146100ac578063240f3dea146100dd57806329cbab3e1461011a5780635d58ce361461013857806379ed356214610163578063903875f7146101a0575b600080fd5b6100c660048036038101906100c1919061131f565b6102fb565b6040516100d492919061153c565b60405180910390f35b3480156100e957600080fd5b5061010460048036038101906100ff919061131f565b6106d0565b6040516101119190611521565b60405180910390f35b61012261070a565b60405161012f9190611521565b60405180910390f35b34801561014457600080fd5b5061014d610977565b60405161015a9190611521565b60405180910390f35b34801561016f57600080fd5b5061018a6004803603810190610185919061131f565b61097d565b6040516101979190611521565b60405180910390f35b3480156101ac57600080fd5b506101c760048036038101906101c2919061131f565b6109cf565b6040516101d49190611521565b60405180910390f35b3480156101e957600080fd5b506101f2610a22565b6040516101ff9190611521565b60405180910390f35b34801561021457600080fd5b5061021d610a28565b60405161022a9190611521565b60405180910390f35b61024d6004803603810190610248919061131f565b610aeb565b60405161025a9190611521565b60405180910390f35b34801561026f57600080fd5b50610278610d1b565b6040516102859190611521565b60405180910390f35b6102a860048036038101906102a3919061131f565b610d62565b6040516102b59190611521565b60405180910390f35b3480156102ca57600080fd5b506102e560048036038101906102e0919061131f565b611279565b6040516102f29190611521565b60405180910390f35b600080600660009054906101000a900460ff161561034e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610345906114e1565b60405180910390fd5b6001600660006101000a81548160ff021916908315150217905550600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483111580156103c657506000836003546103c3919061168e565b10155b1561065657600354600254846103dc9190611634565b6103e69190611603565b9150600354600154846103f99190611634565b6104039190611603565b905082600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610454919061168e565b92505081905550826003600082825461046d919061168e565b9250508190555060003390508073ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f193505050501580156104bf573d6000803e3d6000fd5b5082600260008282546104d2919061168e565b9250508190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330846040518363ffffffff1660e01b8152600401610534929190611498565b602060405180830381600087803b15801561054e57600080fd5b505af1158015610562573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058691906112f2565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3083856040518463ffffffff1660e01b81526004016105e49392919061142a565b602060405180830381600087803b1580156105fe57600080fd5b505af1158015610612573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063691906112f2565b508160016000828254610649919061168e565b925050819055505061065f565b60009150600090505b60015460025461066f9190611634565b6004819055507fb14f451e613015c13a17c78777f1d87fcb448d7330d67299a09b8f2db38aab108183856040516106a893929190611565565b60405180910390a16000600660006101000a81548160ff021916908315150217905550915091565b6000670de0b6b3a7640000826106e69190611634565b9150600154826002546106f99190611634565b6107039190611603565b9050919050565b6000600660009054906101000a900460ff161561075c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610753906114e1565b60405180910390fd5b6001600660006101000a81548160ff021916908315150217905550346002600082825461078991906115ad565b9250508190555060006002546004546107a29190611603565b9050806001546107b2919061168e565b9150600033905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330856040518363ffffffff1660e01b8152600401610814929190611498565b602060405180830381600087803b15801561082e57600080fd5b505af1158015610842573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086691906112f2565b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3083866040518463ffffffff1660e01b81526004016108c49392919061142a565b602060405180830381600087803b1580156108de57600080fd5b505af11580156108f2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091691906112f2565b50816001819055507fcdfc57b3d0cdc24b23cea1f480aabea287321f5bee23ad76c2b52fa7982f5ea5833460405161094f92919061153c565b60405180910390a150506000600660006101000a81548160ff02191690831515021790555090565b60025481565b6000808260025461098e91906115ad565b90506000816004546109a09190611603565b9050806001546109b0919061168e565b9250678ac7230489e80000836109c69190611603565b92505050919050565b6000670de0b6b3a7640000826109e59190611634565b91506000826001546109f791906115ad565b9050600081600454610a099190611603565b905080600254610a19919061168e565b92505050919050565b60045481565b6000670de0b6b3a764000060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a8c919061140f565b60206040518083038186803b158015610aa457600080fd5b505afa158015610ab8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610adc919061134c565b610ae69190611603565b905090565b6000600660009054906101000a900460ff1615610b3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b34906114e1565b60405180910390fd5b6001600660006101000a81548160ff021916908315150217905550670de0b6b3a764000082610b6c9190611634565b915060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610bcb93929190611461565b602060405180830381600087803b158015610be557600080fd5b505af1158015610bf9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1d91906112f2565b508160016000828254610c3091906115ad565b925050819055506000600154600454610c499190611603565b905080600254610c59919061168e565b915060003390508073ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f19350505050158015610ca6573d6000803e3d6000fd5b508260026000828254610cb9919061168e565b925050819055507f3297a389bb586920e62a196af529d5f42651b17a1013d6bfe77f22372a0b21128484604051610cf192919061153c565b60405180910390a150506000600660006101000a81548160ff021916908315150217905550919050565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6000600660009054906101000a900460ff1615610db4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dab906114e1565b60405180910390fd5b6001600660006101000a81548160ff02191690831515021790555060003490508060026000828254610de691906115ad565b92505081905550670de0b6b3a764000083610e019190611634565b925060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330856040518363ffffffff1660e01b8152600401610e5e929190611498565b602060405180830381600087803b158015610e7857600080fd5b505af1158015610e8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb091906112f2565b5060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b8152600401610f1193929190611461565b602060405180830381600087803b158015610f2b57600080fd5b505af1158015610f3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f6391906112f2565b905080610fa5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9c90611501565b60405180910390fd5b8360016000828254610fb791906115ad565b9250508190555060025482600354610fcf9190611634565b610fd99190611603565b60015485600354610fea9190611634565b610ff49190611603565b14611034576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102b906114c1565b60405180910390fd5b600060035414156110e1576064600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600360008282546110d591906115ad565b92505081905550611185565b600154846003546110f29190611634565b6110fc9190611603565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461114a91906115ad565b92505081905550600154846003546111629190611634565b61116c9190611603565b6003600082825461117d91906115ad565b925050819055505b6001546002546111959190611634565b6004819055507faa58f006cc244b2af6662862508bd39465f57169ff8386d1d1f7b0b903150abc8483600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460405161120d93929190611565565b60405180910390a1600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054925050506000600660006101000a81548160ff021916908315150217905550919050565b60006002548260015461128c9190611634565b6112969190611603565b9050670de0b6b3a7640000816112ac9190611603565b9050919050565b6000815190506112c28161181e565b92915050565b6000813590506112d781611835565b92915050565b6000815190506112ec81611835565b92915050565b6000602082840312156113085761130761179e565b5b6000611316848285016112b3565b91505092915050565b6000602082840312156113355761133461179e565b5b6000611343848285016112c8565b91505092915050565b6000602082840312156113625761136161179e565b5b6000611370848285016112dd565b91505092915050565b6113828161170a565b82525050565b611391816116c2565b82525050565b60006113a460138361159c565b91506113af826117a3565b602082019050919050565b60006113c7600b8361159c565b91506113d2826117cc565b602082019050919050565b60006113ea60138361159c565b91506113f5826117f5565b602082019050919050565b61140981611700565b82525050565b60006020820190506114246000830184611388565b92915050565b600060608201905061143f6000830186611388565b61144c6020830185611379565b6114596040830184611400565b949350505050565b60006060820190506114766000830186611388565b6114836020830185611388565b6114906040830184611400565b949350505050565b60006040820190506114ad6000830185611388565b6114ba6020830184611400565b9392505050565b600060208201905081810360008301526114da81611397565b9050919050565b600060208201905081810360008301526114fa816113ba565b9050919050565b6000602082019050818103600083015261151a816113dd565b9050919050565b60006020820190506115366000830184611400565b92915050565b60006040820190506115516000830185611400565b61155e6020830184611400565b9392505050565b600060608201905061157a6000830186611400565b6115876020830185611400565b6115946040830184611400565b949350505050565b600082825260208201905092915050565b60006115b882611700565b91506115c383611700565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156115f8576115f7611740565b5b828201905092915050565b600061160e82611700565b915061161983611700565b9250826116295761162861176f565b5b828204905092915050565b600061163f82611700565b915061164a83611700565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561168357611682611740565b5b828202905092915050565b600061169982611700565b91506116a483611700565b9250828210156116b7576116b6611740565b5b828203905092915050565b60006116cd826116e0565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006117158261171c565b9050919050565b60006117278261172e565b9050919050565b6000611739826116e0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f6c697175696469747920696e62616c616e636500000000000000000000000000600082015250565b7f4e6f2072652d656e747279000000000000000000000000000000000000000000600082015250565b7f7472616e73666572206661696c65642e203a2800000000000000000000000000600082015250565b611827816116d4565b811461183257600080fd5b50565b61183e81611700565b811461184957600080fd5b5056fea2646970667358221220920b8a52facf59ed74ba9f72eeb4ef53f52925a1d4e5c0ae6b3ef65f25fb42cc64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA932492F GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA932492F EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0xBC23AE5E EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0xC8AB8325 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xE0BA2000 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xEB521A4C EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0xED7BF868 EQ PUSH2 0x2BE JUMPI PUSH2 0xA7 JUMP JUMPDEST DUP1 PUSH4 0xA861F2A EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x240F3DEA EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x29CBAB3E EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x5D58CE36 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x79ED3562 EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x903875F7 EQ PUSH2 0x1A0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC1 SWAP2 SWAP1 PUSH2 0x131F JUMP JUMPDEST PUSH2 0x2FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD4 SWAP3 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x104 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFF SWAP2 SWAP1 PUSH2 0x131F JUMP JUMPDEST PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x122 PUSH2 0x70A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH2 0x977 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x131F JUMP JUMPDEST PUSH2 0x97D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x131F JUMP JUMPDEST PUSH2 0x9CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH2 0xA22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21D PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x131F JUMP JUMPDEST PUSH2 0xAEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0xD1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x131F JUMP JUMPDEST PUSH2 0xD62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x131F JUMP JUMPDEST PUSH2 0x1279 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x34E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x345 SWAP1 PUSH2 0x14E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 GT ISZERO DUP1 ISZERO PUSH2 0x3C6 JUMPI POP PUSH1 0x0 DUP4 PUSH1 0x3 SLOAD PUSH2 0x3C3 SWAP2 SWAP1 PUSH2 0x168E JUMP JUMPDEST LT ISZERO JUMPDEST ISZERO PUSH2 0x656 JUMPI PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD DUP5 PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST SWAP2 POP PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD DUP5 PUSH2 0x3F9 SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x403 SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x454 SWAP2 SWAP1 PUSH2 0x168E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x46D SWAP2 SWAP1 PUSH2 0x168E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 CALLER SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP5 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x4BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP3 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4D2 SWAP2 SWAP1 PUSH2 0x168E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 ADDRESS DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x534 SWAP3 SWAP2 SWAP1 PUSH2 0x1498 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x54E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x562 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x586 SWAP2 SWAP1 PUSH2 0x12F2 JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS DUP4 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x142A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x612 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x636 SWAP2 SWAP1 PUSH2 0x12F2 JUMP JUMPDEST POP DUP2 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x649 SWAP2 SWAP1 PUSH2 0x168E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP PUSH2 0x65F JUMP JUMPDEST PUSH1 0x0 SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH2 0x66F SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0xB14F451E613015C13A17C78777F1D87FCB448D7330D67299A09B8F2DB38AAB10 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH2 0x6A8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1565 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x6E6 SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 SLOAD DUP3 PUSH1 0x2 SLOAD PUSH2 0x6F9 SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x703 SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x75C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x753 SWAP1 PUSH2 0x14E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x789 SWAP2 SWAP1 PUSH2 0x15AD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 SLOAD PUSH1 0x4 SLOAD PUSH2 0x7A2 SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 SLOAD PUSH2 0x7B2 SWAP2 SWAP1 PUSH2 0x168E JUMP JUMPDEST SWAP2 POP PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x814 SWAP3 SWAP2 SWAP1 PUSH2 0x1498 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x82E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x842 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x866 SWAP2 SWAP1 PUSH2 0x12F2 JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS DUP4 DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x142A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x916 SWAP2 SWAP1 PUSH2 0x12F2 JUMP JUMPDEST POP DUP2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH32 0xCDFC57B3D0CDC24B23CEA1F480AABEA287321F5BEE23AD76C2B52FA7982F5EA5 DUP4 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x94F SWAP3 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x2 SLOAD PUSH2 0x98E SWAP2 SWAP1 PUSH2 0x15AD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x4 SLOAD PUSH2 0x9A0 SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 SLOAD PUSH2 0x9B0 SWAP2 SWAP1 PUSH2 0x168E JUMP JUMPDEST SWAP3 POP PUSH8 0x8AC7230489E80000 DUP4 PUSH2 0x9C6 SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x9E5 SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 PUSH1 0x1 SLOAD PUSH2 0x9F7 SWAP2 SWAP1 PUSH2 0x15AD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x4 SLOAD PUSH2 0xA09 SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 SLOAD PUSH2 0xA19 SWAP2 SWAP1 PUSH2 0x168E JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA8C SWAP2 SWAP1 PUSH2 0x140F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAB8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xADC SWAP2 SWAP1 PUSH2 0x134C JUMP JUMPDEST PUSH2 0xAE6 SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB34 SWAP1 PUSH2 0x14E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0xB6C SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBF9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC1D SWAP2 SWAP1 PUSH2 0x12F2 JUMP JUMPDEST POP DUP2 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC30 SWAP2 SWAP1 PUSH2 0x15AD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 SLOAD PUSH1 0x4 SLOAD PUSH2 0xC49 SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 SLOAD PUSH2 0xC59 SWAP2 SWAP1 PUSH2 0x168E JUMP JUMPDEST SWAP2 POP PUSH1 0x0 CALLER SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP5 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xCA6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP3 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCB9 SWAP2 SWAP1 PUSH2 0x168E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0x3297A389BB586920E62A196AF529D5F42651B17A1013D6BFE77F22372A0B2112 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xCF1 SWAP3 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xDB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDAB SWAP1 PUSH2 0x14E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 CALLVALUE SWAP1 POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDE6 SWAP2 SWAP1 PUSH2 0x15AD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0xE01 SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE5E SWAP3 SWAP2 SWAP1 PUSH2 0x1498 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE8C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEB0 SWAP2 SWAP1 PUSH2 0x12F2 JUMP JUMPDEST POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF11 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1461 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF3F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF63 SWAP2 SWAP1 PUSH2 0x12F2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xFA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9C SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xFB7 SWAP2 SWAP1 PUSH2 0x15AD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 SLOAD DUP3 PUSH1 0x3 SLOAD PUSH2 0xFCF SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0xFD9 SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP6 PUSH1 0x3 SLOAD PUSH2 0xFEA SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0xFF4 SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST EQ PUSH2 0x1034 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102B SWAP1 PUSH2 0x14C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD EQ ISZERO PUSH2 0x10E1 JUMPI PUSH1 0x64 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x10D5 SWAP2 SWAP1 PUSH2 0x15AD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP5 PUSH1 0x3 SLOAD PUSH2 0x10F2 SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x10FC SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x114A SWAP2 SWAP1 PUSH2 0x15AD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 SLOAD DUP5 PUSH1 0x3 SLOAD PUSH2 0x1162 SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x116C SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x117D SWAP2 SWAP1 PUSH2 0x15AD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH2 0x1195 SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH32 0xAA58F006CC244B2AF6662862508BD39465F57169FF8386D1D1F7B0B903150ABC DUP5 DUP4 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH2 0x120D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1565 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 PUSH1 0x1 SLOAD PUSH2 0x128C SWAP2 SWAP1 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x1296 SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 PUSH2 0x12AC SWAP2 SWAP1 PUSH2 0x1603 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x12C2 DUP2 PUSH2 0x181E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12D7 DUP2 PUSH2 0x1835 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x12EC DUP2 PUSH2 0x1835 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1308 JUMPI PUSH2 0x1307 PUSH2 0x179E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1316 DUP5 DUP3 DUP6 ADD PUSH2 0x12B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1335 JUMPI PUSH2 0x1334 PUSH2 0x179E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1343 DUP5 DUP3 DUP6 ADD PUSH2 0x12C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1362 JUMPI PUSH2 0x1361 PUSH2 0x179E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1370 DUP5 DUP3 DUP6 ADD PUSH2 0x12DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1382 DUP2 PUSH2 0x170A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1391 DUP2 PUSH2 0x16C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13A4 PUSH1 0x13 DUP4 PUSH2 0x159C JUMP JUMPDEST SWAP2 POP PUSH2 0x13AF DUP3 PUSH2 0x17A3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13C7 PUSH1 0xB DUP4 PUSH2 0x159C JUMP JUMPDEST SWAP2 POP PUSH2 0x13D2 DUP3 PUSH2 0x17CC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13EA PUSH1 0x13 DUP4 PUSH2 0x159C JUMP JUMPDEST SWAP2 POP PUSH2 0x13F5 DUP3 PUSH2 0x17F5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1409 DUP2 PUSH2 0x1700 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1424 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1388 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x143F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1388 JUMP JUMPDEST PUSH2 0x144C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1379 JUMP JUMPDEST PUSH2 0x1459 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1400 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1476 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1388 JUMP JUMPDEST PUSH2 0x1483 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1388 JUMP JUMPDEST PUSH2 0x1490 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1400 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x14AD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1388 JUMP JUMPDEST PUSH2 0x14BA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1400 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14DA DUP2 PUSH2 0x1397 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14FA DUP2 PUSH2 0x13BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x151A DUP2 PUSH2 0x13DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1536 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1400 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1551 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1400 JUMP JUMPDEST PUSH2 0x155E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1400 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x157A PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1400 JUMP JUMPDEST PUSH2 0x1587 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1400 JUMP JUMPDEST PUSH2 0x1594 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1400 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B8 DUP3 PUSH2 0x1700 JUMP JUMPDEST SWAP2 POP PUSH2 0x15C3 DUP4 PUSH2 0x1700 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x15F8 JUMPI PUSH2 0x15F7 PUSH2 0x1740 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160E DUP3 PUSH2 0x1700 JUMP JUMPDEST SWAP2 POP PUSH2 0x1619 DUP4 PUSH2 0x1700 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1629 JUMPI PUSH2 0x1628 PUSH2 0x176F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x163F DUP3 PUSH2 0x1700 JUMP JUMPDEST SWAP2 POP PUSH2 0x164A DUP4 PUSH2 0x1700 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1683 JUMPI PUSH2 0x1682 PUSH2 0x1740 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1699 DUP3 PUSH2 0x1700 JUMP JUMPDEST SWAP2 POP PUSH2 0x16A4 DUP4 PUSH2 0x1700 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x16B7 JUMPI PUSH2 0x16B6 PUSH2 0x1740 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16CD DUP3 PUSH2 0x16E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1715 DUP3 PUSH2 0x171C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1727 DUP3 PUSH2 0x172E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1739 DUP3 PUSH2 0x16E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x6C697175696469747920696E62616C616E636500000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F2072652D656E747279000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x7472616E73666572206661696C65642E203A2800000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1827 DUP2 PUSH2 0x16D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1832 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x183E DUP2 PUSH2 0x1700 JUMP JUMPDEST DUP2 EQ PUSH2 0x1849 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 SIGNEXTEND DUP11 MSTORE STATICCALL 0xCF MSIZE 0xED PUSH21 0xBA9F72EEB4EF53F52925A1D4E5C0AE6B3EF65F25FB TIMESTAMP 0xCC PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "331:10282:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5302:1291;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3500:340;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8934:654;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;508:34;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9908:389;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8018:491;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;584:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10487:124;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6973:717;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4588:126;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1801:1353;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4179:216;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5302:1291;5399:20;5421:22;1121:6;;;;;;;;;;;1120:7;1111:32;;;;;;;;;;;;:::i;:::-;;;;;;;;;1161:4;1152:6;;:13;;;;;;;;;;;;;;;;;;5486:18:::1;:30;5505:10;5486:30;;;;;;;;;;;;;;;;5457:25;:59;;:120;;;;;5576:1;5547:25;5521:23;;:51;;;;:::i;:::-;:56;;5457:120;5453:930;;;5659:23;;5638:18;;5610:25;:46;;;;:::i;:::-;:72;;;;:::i;:::-;5592:90;;5771:23;;5743:25;;5715;:53;;;;:::i;:::-;:79;;;;:::i;:::-;5695:99;;5841:25;5807:18;:30;5826:10;5807:30;;;;;;;;;;;;;;;;:59;;;;;;;:::i;:::-;;;;;;;;5906:25;5879:23;;:52;;;;;;;:::i;:::-;;;;;;;;5944:24;5979:10;5944:46;;6003:8;:17;;:34;6021:15;6003:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;6072:15;6050:18;;:37;;;;;;;:::i;:::-;;;;;;;;6100:11;::::0;::::1;;;;;;;;:19;;;6128:4;6135:17;6100:53;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6166:11;::::0;::::1;;;;;;;;:24;;;6199:4;6206:8;6216:17;6166:68;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6276:17;6247:25;;:46;;;;;;;:::i;:::-;;;;;;;;5579:724;5453:930;;;6338:1;6320:19;;6372:1;6352:21;;5453:930;6416:25;;6395:18;;:46;;;;:::i;:::-;6391:1;:50;;;;6455:80;6473:17;6492:15;6509:25;6455:80;;;;;;;;:::i;:::-;;;;;;;;1193:5:::0;1184:6;;:14;;;;;;;;;;;;;;;;;;5302:1291;;;:::o;3500:340::-;3577:15;3715:4;3695:17;:24;;;;:::i;:::-;3675:44;;3783:25;;3763:17;3742:18;;:38;;;;:::i;:::-;:66;;;;:::i;:::-;3729:79;;3500:340;;;:::o;8934:654::-;9003:21;1121:6;;;;;;;;;;;1120:7;1111:32;;;;;;;;;;;;:::i;:::-;;;;;;;;;1161:4;1152:6;;:13;;;;;;;;;;;;;;;;;;9056:9:::1;9034:18;;:31;;;;;;;:::i;:::-;;;;;;;;9074:39;9120:18;;9116:1;;:22;;;;:::i;:::-;9074:64;;9194:34;9166:25;;:62;;;;:::i;:::-;9147:81;;9237:24;9272:10;9237:46;;9292:11;::::0;::::1;;;;;;;;:19;;;9320:4;9327:16;9292:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9353:11;::::0;::::1;;;;;;;;:24;;;9386:4;9393:8;9403:16;9353:67;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9457:34;9429:25;:62;;;;9505:45;9523:16;9540:9;9505:45;;;;;;;:::i;:::-;;;;;;;;9559:23;;1193:5:::0;1184:6;;:14;;;;;;;;;;;;;;;;;;8934:654;:::o;508:34::-;;;;:::o;9908:389::-;9983:21;10014:32;10070:10;10049:18;;:31;;;;:::i;:::-;10014:66;;10089:39;10135:27;10131:1;;:31;;;;:::i;:::-;10089:73;;10218:34;10190:25;;:62;;;;:::i;:::-;10171:81;;10286:4;10269:16;:21;;;;:::i;:::-;10261:30;;;;9908:389;;;:::o;8018:491::-;8093:14;8229:4;8209:17;:24;;;;:::i;:::-;8189:44;;8250:34;8315:17;8287:25;;:45;;;;:::i;:::-;8250:82;;8341:32;8380:29;8376:1;;:33;;;;:::i;:::-;8341:68;;8451:27;8430:18;;:48;;;;:::i;:::-;8418:60;;8487:16;;8018:491;;;:::o;584:17::-;;;;:::o;10487:124::-;10540:4;10600;10563:11;;;;;;;;;;:21;;;10593:4;10563:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;;;:::i;:::-;10555:50;;10487:124;:::o;6973:717::-;7055:14;1121:6;;;;;;;;;;;1120:7;1111:32;;;;;;;;;;;;:::i;:::-;;;;;;;;;1161:4;1152:6;;:13;;;;;;;;;;;;;;;;;;7192:4:::1;7172:17;:24;;;;:::i;:::-;7152:44;;7206:11;::::0;::::1;;;;;;;;:24;;;7231:10;7251:4;7258:17;7206:70;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7314:17;7285:25;;:46;;;;;;;:::i;:::-;;;;;;;;7340:32;7379:25;;7375:1;;:29;;;;:::i;:::-;7340:64;;7446:27;7425:18;;:48;;;;:::i;:::-;7413:60;;7482:24;7517:10;7482:46;;7537:8;:17;;:28;7555:9;7537:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;7596:9;7574:18;;:31;;;;;;;:::i;:::-;;;;;;;;7619:40;7630:17;7649:9;7619:40;;;;;;;:::i;:::-;;;;;;;;7668:16;;1193:5:::0;1184:6;;:14;;;;;;;;;;;;;;;;;;6973:717;;;:::o;4588:126::-;4645:15;4678:18;:30;4697:10;4678:30;;;;;;;;;;;;;;;;4671:37;;4588:126;:::o;1801:1353::-;1890:15;1121:6;;;;;;;;;;;1120:7;1111:32;;;;;;;;;;;;:::i;:::-;;;;;;;;;1161:4;1152:6;;:13;;;;;;;;;;;;;;;;;;1916:15:::1;1934:9;1916:27;;1974:10;1952:18;;:32;;;;;;;:::i;:::-;;;;;;;;2070:4;2050:17;:24;;;;:::i;:::-;2030:44;;2083:11;::::0;::::1;;;;;;;;:19;;;2111:4;2118:17;2083:53;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2145:12;2160:11:::0;::::1;;;;;;;;;;:24;;;2185:10;2205:4;2212:17;2160:70;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2145:85;;2247:7;2239:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;2316:17;2287:25;;:46;;;;;;;:::i;:::-;;;;;;;;2463:18;;2452:10;2426:23;;:36;;;;:::i;:::-;:55;;;;:::i;:::-;2395:25;;2377:17;2351:23;;:43;;;;:::i;:::-;:69;;;;:::i;:::-;2350:132;2342:164;;;;;;;;;;;;:::i;:::-;;;;;;;;;2549:1;2522:23;;:28;2519:430;;;2601:3;2568:18;:30;2587:10;2568:30;;;;;;;;;;;;;;;:36;;;;2648:18;:30;2667:10;2648:30;;;;;;;;;;;;;;;;2621:23;;:57;;;;;;;:::i;:::-;;;;;;;;2519:430;;;2793:25;;2773:17;2747:23;;:43;;;;:::i;:::-;:71;;;;:::i;:::-;2713:18;:30;2732:10;2713:30;;;;;;;;;;;;;;;;:105;;;;;;;:::i;:::-;;;;;;;;2909:25;;2889:17;2863:23;;:43;;;;:::i;:::-;:71;;;;:::i;:::-;2835:23;;:100;;;;;;;:::i;:::-;;;;;;;;2519:430;2982:25;;2961:18;;:46;;;;:::i;:::-;2957:1;:50;;;;3021:81;3039:17;3058:10;3070:18;:30;3089:10;3070:30;;;;;;;;;;;;;;;;3021:81;;;;;;;;:::i;:::-;;;;;;;;3118:18;:30;3137:10;3118:30;;;;;;;;;;;;;;;;3111:37;;;;1193:5:::0;1184:6;;:14;;;;;;;;;;;;;;;;;;1801:1353;;;:::o;4179:216::-;4255:17;4336:18;;4325:10;4297:25;;:38;;;;:::i;:::-;:57;;;;:::i;:::-;4282:72;;4384:4;4371:12;:17;;;;:::i;:::-;4363:26;;4179:216;;;:::o;7:137:5:-;61:5;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;7:137;;;;:::o;150:139::-;196:5;234:6;221:20;212:29;;250:33;277:5;250:33;:::i;:::-;150:139;;;;:::o;295:143::-;352:5;383:6;377:13;368:22;;399:33;426:5;399:33;:::i;:::-;295:143;;;;:::o;444:345::-;511:6;560:2;548:9;539:7;535:23;531:32;528:119;;;566:79;;:::i;:::-;528:119;686:1;711:61;764:7;755:6;744:9;740:22;711:61;:::i;:::-;701:71;;657:125;444:345;;;;:::o;795:329::-;854:6;903:2;891:9;882:7;878:23;874:32;871:119;;;909:79;;:::i;:::-;871:119;1029:1;1054:53;1099:7;1090:6;1079:9;1075:22;1054:53;:::i;:::-;1044:63;;1000:117;795:329;;;;:::o;1130:351::-;1200:6;1249:2;1237:9;1228:7;1224:23;1220:32;1217:119;;;1255:79;;:::i;:::-;1217:119;1375:1;1400:64;1456:7;1447:6;1436:9;1432:22;1400:64;:::i;:::-;1390:74;;1346:128;1130:351;;;;:::o;1487:147::-;1582:45;1621:5;1582:45;:::i;:::-;1577:3;1570:58;1487:147;;:::o;1640:118::-;1727:24;1745:5;1727:24;:::i;:::-;1722:3;1715:37;1640:118;;:::o;1764:366::-;1906:3;1927:67;1991:2;1986:3;1927:67;:::i;:::-;1920:74;;2003:93;2092:3;2003:93;:::i;:::-;2121:2;2116:3;2112:12;2105:19;;1764:366;;;:::o;2136:::-;2278:3;2299:67;2363:2;2358:3;2299:67;:::i;:::-;2292:74;;2375:93;2464:3;2375:93;:::i;:::-;2493:2;2488:3;2484:12;2477:19;;2136:366;;;:::o;2508:::-;2650:3;2671:67;2735:2;2730:3;2671:67;:::i;:::-;2664:74;;2747:93;2836:3;2747:93;:::i;:::-;2865:2;2860:3;2856:12;2849:19;;2508:366;;;:::o;2880:118::-;2967:24;2985:5;2967:24;:::i;:::-;2962:3;2955:37;2880:118;;:::o;3004:222::-;3097:4;3135:2;3124:9;3120:18;3112:26;;3148:71;3216:1;3205:9;3201:17;3192:6;3148:71;:::i;:::-;3004:222;;;;:::o;3232:458::-;3389:4;3427:2;3416:9;3412:18;3404:26;;3440:71;3508:1;3497:9;3493:17;3484:6;3440:71;:::i;:::-;3521:80;3597:2;3586:9;3582:18;3573:6;3521:80;:::i;:::-;3611:72;3679:2;3668:9;3664:18;3655:6;3611:72;:::i;:::-;3232:458;;;;;;:::o;3696:442::-;3845:4;3883:2;3872:9;3868:18;3860:26;;3896:71;3964:1;3953:9;3949:17;3940:6;3896:71;:::i;:::-;3977:72;4045:2;4034:9;4030:18;4021:6;3977:72;:::i;:::-;4059;4127:2;4116:9;4112:18;4103:6;4059:72;:::i;:::-;3696:442;;;;;;:::o;4144:332::-;4265:4;4303:2;4292:9;4288:18;4280:26;;4316:71;4384:1;4373:9;4369:17;4360:6;4316:71;:::i;:::-;4397:72;4465:2;4454:9;4450:18;4441:6;4397:72;:::i;:::-;4144:332;;;;;:::o;4482:419::-;4648:4;4686:2;4675:9;4671:18;4663:26;;4735:9;4729:4;4725:20;4721:1;4710:9;4706:17;4699:47;4763:131;4889:4;4763:131;:::i;:::-;4755:139;;4482:419;;;:::o;4907:::-;5073:4;5111:2;5100:9;5096:18;5088:26;;5160:9;5154:4;5150:20;5146:1;5135:9;5131:17;5124:47;5188:131;5314:4;5188:131;:::i;:::-;5180:139;;4907:419;;;:::o;5332:::-;5498:4;5536:2;5525:9;5521:18;5513:26;;5585:9;5579:4;5575:20;5571:1;5560:9;5556:17;5549:47;5613:131;5739:4;5613:131;:::i;:::-;5605:139;;5332:419;;;:::o;5757:222::-;5850:4;5888:2;5877:9;5873:18;5865:26;;5901:71;5969:1;5958:9;5954:17;5945:6;5901:71;:::i;:::-;5757:222;;;;:::o;5985:332::-;6106:4;6144:2;6133:9;6129:18;6121:26;;6157:71;6225:1;6214:9;6210:17;6201:6;6157:71;:::i;:::-;6238:72;6306:2;6295:9;6291:18;6282:6;6238:72;:::i;:::-;5985:332;;;;;:::o;6323:442::-;6472:4;6510:2;6499:9;6495:18;6487:26;;6523:71;6591:1;6580:9;6576:17;6567:6;6523:71;:::i;:::-;6604:72;6672:2;6661:9;6657:18;6648:6;6604:72;:::i;:::-;6686;6754:2;6743:9;6739:18;6730:6;6686:72;:::i;:::-;6323:442;;;;;;:::o;6852:169::-;6936:11;6970:6;6965:3;6958:19;7010:4;7005:3;7001:14;6986:29;;6852:169;;;;:::o;7027:305::-;7067:3;7086:20;7104:1;7086:20;:::i;:::-;7081:25;;7120:20;7138:1;7120:20;:::i;:::-;7115:25;;7274:1;7206:66;7202:74;7199:1;7196:81;7193:107;;;7280:18;;:::i;:::-;7193:107;7324:1;7321;7317:9;7310:16;;7027:305;;;;:::o;7338:185::-;7378:1;7395:20;7413:1;7395:20;:::i;:::-;7390:25;;7429:20;7447:1;7429:20;:::i;:::-;7424:25;;7468:1;7458:35;;7473:18;;:::i;:::-;7458:35;7515:1;7512;7508:9;7503:14;;7338:185;;;;:::o;7529:348::-;7569:7;7592:20;7610:1;7592:20;:::i;:::-;7587:25;;7626:20;7644:1;7626:20;:::i;:::-;7621:25;;7814:1;7746:66;7742:74;7739:1;7736:81;7731:1;7724:9;7717:17;7713:105;7710:131;;;7821:18;;:::i;:::-;7710:131;7869:1;7866;7862:9;7851:20;;7529:348;;;;:::o;7883:191::-;7923:4;7943:20;7961:1;7943:20;:::i;:::-;7938:25;;7977:20;7995:1;7977:20;:::i;:::-;7972:25;;8016:1;8013;8010:8;8007:34;;;8021:18;;:::i;:::-;8007:34;8066:1;8063;8059:9;8051:17;;7883:191;;;;:::o;8080:96::-;8117:7;8146:24;8164:5;8146:24;:::i;:::-;8135:35;;8080:96;;;:::o;8182:90::-;8216:7;8259:5;8252:13;8245:21;8234:32;;8182:90;;;:::o;8278:126::-;8315:7;8355:42;8348:5;8344:54;8333:65;;8278:126;;;:::o;8410:77::-;8447:7;8476:5;8465:16;;8410:77;;;:::o;8493:134::-;8551:9;8584:37;8615:5;8584:37;:::i;:::-;8571:50;;8493:134;;;:::o;8633:126::-;8683:9;8716:37;8747:5;8716:37;:::i;:::-;8703:50;;8633:126;;;:::o;8765:113::-;8815:9;8848:24;8866:5;8848:24;:::i;:::-;8835:37;;8765:113;;;:::o;8884:180::-;8932:77;8929:1;8922:88;9029:4;9026:1;9019:15;9053:4;9050:1;9043:15;9070:180;9118:77;9115:1;9108:88;9215:4;9212:1;9205:15;9239:4;9236:1;9229:15;9379:117;9488:1;9485;9478:12;9502:169;9642:21;9638:1;9630:6;9626:14;9619:45;9502:169;:::o;9677:161::-;9817:13;9813:1;9805:6;9801:14;9794:37;9677:161;:::o;9844:173::-;9984:21;9980:1;9972:6;9968:14;9961:45;9844:173;:::o;10027:124::-;10101:21;10116:5;10101:21;:::i;:::-;10094:5;10091:32;10081:60;;10137:1;10134;10127:12;10081:60;10027:124;:::o;10161:130::-;10238:24;10256:5;10238:24;:::i;:::-;10231:5;10228:35;10218:63;;10277:1;10274;10267:12;10218:63;10161:130;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1254800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"K()": "2429",
								"_ERC20TokenBalance()": "infinite",
								"contractEthBalance()": "2496",
								"estimateERC20TokenToProvide(uint256)": "infinite",
								"estimateEthToProvide(uint256)": "infinite",
								"estimateSwapForERC20Token(uint256)": "infinite",
								"estimateSwapForEth(uint256)": "infinite",
								"getMyLiquidityPositions()": "2592",
								"provideLiquidity(uint256)": "infinite",
								"swapForERC20Token()": "infinite",
								"swapForEth(uint256)": "infinite",
								"withdrawLiquidity(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 331,
									"end": 10613,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 331,
									"end": 10613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 331,
									"end": 10613,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 448,
									"end": 449,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 415,
									"end": 449,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 415,
									"end": 449,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 541,
									"end": 542,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 508,
									"end": 542,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 508,
									"end": 542,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 578,
									"end": 579,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 547,
									"end": 579,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 547,
									"end": 579,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 600,
									"end": 601,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 584,
									"end": 601,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 584,
									"end": 601,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1070,
									"end": 1075,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1056,
									"end": 1075,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1056,
									"end": 1075,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1056,
									"end": 1075,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1056,
									"end": 1075,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1056,
									"end": 1075,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1056,
									"end": 1075,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1056,
									"end": 1075,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1056,
									"end": 1075,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 1056,
									"end": 1075,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1056,
									"end": 1075,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1056,
									"end": 1075,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1056,
									"end": 1075,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1056,
									"end": 1075,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1056,
									"end": 1075,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1056,
									"end": 1075,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1056,
									"end": 1075,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1056,
									"end": 1075,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1056,
									"end": 1075,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1056,
									"end": 1075,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1056,
									"end": 1075,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 747,
									"end": 871,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 747,
									"end": 871,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 747,
									"end": 871,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 747,
									"end": 871,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 747,
									"end": 871,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 747,
									"end": 871,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 747,
									"end": 871,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 747,
									"end": 871,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 747,
									"end": 871,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 747,
									"end": 871,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 747,
									"end": 871,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 747,
									"end": 871,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 747,
									"end": 871,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 747,
									"end": 871,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 747,
									"end": 871,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 747,
									"end": 871,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 747,
									"end": 871,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 747,
									"end": 871,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 747,
									"end": 871,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 747,
									"end": 871,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 747,
									"end": 871,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 747,
									"end": 871,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 747,
									"end": 871,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 747,
									"end": 871,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 747,
									"end": 871,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 747,
									"end": 871,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 747,
									"end": 871,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 747,
									"end": 871,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 747,
									"end": 871,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 747,
									"end": 871,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 747,
									"end": 871,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 747,
									"end": 871,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 747,
									"end": 871,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 747,
									"end": 871,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 747,
									"end": 871,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 780,
									"end": 808,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 811,
									"end": 814,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 780,
									"end": 814,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 780,
									"end": 814,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 844,
									"end": 864,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 823,
									"end": 834,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 823,
									"end": 834,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 823,
									"end": 865,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 823,
									"end": 865,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 823,
									"end": 865,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 823,
									"end": 865,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 823,
									"end": 865,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 823,
									"end": 865,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 823,
									"end": 865,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 823,
									"end": 865,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 823,
									"end": 865,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 823,
									"end": 865,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 823,
									"end": 865,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 823,
									"end": 865,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 823,
									"end": 865,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 823,
									"end": 865,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 823,
									"end": 865,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 823,
									"end": 865,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 823,
									"end": 865,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 823,
									"end": 865,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 771,
									"end": 871,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 747,
									"end": 871,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 331,
									"end": 10613,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 331,
									"end": 10613,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 243,
									"end": 362,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 243,
									"end": 362,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 243,
									"end": 362,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 401,
									"end": 402,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 482,
									"end": 489,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 416,
									"end": 490,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 416,
									"end": 490,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 372,
									"end": 500,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 631,
									"end": 638,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 678,
									"end": 683,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 649,
									"end": 684,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 649,
									"end": 684,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 594,
									"end": 690,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 733,
									"end": 740,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 815,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 766,
									"end": 771,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 762,
									"end": 816,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 751,
									"end": 816,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 751,
									"end": 816,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 696,
									"end": 822,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1060,
									"end": 1061,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1057,
									"end": 1058,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1050,
									"end": 1062,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 1165,
									"end": 1170,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1140,
									"end": 1145,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1137,
									"end": 1172,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1186,
									"end": 1187,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1183,
									"end": 1184,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1188,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 331,
									"end": 10613,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 331,
									"end": 10613,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 331,
									"end": 10613,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 331,
									"end": 10613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 331,
									"end": 10613,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 331,
									"end": 10613,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 331,
									"end": 10613,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 331,
									"end": 10613,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 331,
									"end": 10613,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220920b8a52facf59ed74ba9f72eeb4ef53f52925a1d4e5c0ae6b3ef65f25fb42cc64736f6c63430008070033",
									".code": [
										{
											"begin": 331,
											"end": 10613,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "PUSH",
											"source": 0,
											"value": "A932492F"
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "PUSH",
											"source": 0,
											"value": "A932492F"
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "PUSH",
											"source": 0,
											"value": "BC23AE5E"
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "PUSH",
											"source": 0,
											"value": "C8AB8325"
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "PUSH",
											"source": 0,
											"value": "E0BA2000"
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "PUSH",
											"source": 0,
											"value": "EB521A4C"
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "PUSH",
											"source": 0,
											"value": "ED7BF868"
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "PUSH",
											"source": 0,
											"value": "A861F2A"
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "PUSH",
											"source": 0,
											"value": "240F3DEA"
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "PUSH",
											"source": 0,
											"value": "29CBAB3E"
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "PUSH",
											"source": 0,
											"value": "5D58CE36"
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "PUSH",
											"source": 0,
											"value": "79ED3562"
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "PUSH",
											"source": 0,
											"value": "903875F7"
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 331,
											"end": 10613,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8934,
											"end": 9588,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8934,
											"end": 9588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8934,
											"end": 9588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 8934,
											"end": 9588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 8934,
											"end": 9588,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8934,
											"end": 9588,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 8934,
											"end": 9588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8934,
											"end": 9588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8934,
											"end": 9588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8934,
											"end": 9588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 8934,
											"end": 9588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8934,
											"end": 9588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8934,
											"end": 9588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 8934,
											"end": 9588,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8934,
											"end": 9588,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 8934,
											"end": 9588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8934,
											"end": 9588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8934,
											"end": 9588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8934,
											"end": 9588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8934,
											"end": 9588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8934,
											"end": 9588,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8934,
											"end": 9588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8934,
											"end": 9588,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 508,
											"end": 542,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 508,
											"end": 542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 508,
											"end": 542,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 508,
											"end": 542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 508,
											"end": 542,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 508,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 508,
											"end": 542,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 508,
											"end": 542,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 508,
											"end": 542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 508,
											"end": 542,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 508,
											"end": 542,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 508,
											"end": 542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 508,
											"end": 542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 508,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 508,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 508,
											"end": 542,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 508,
											"end": 542,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 508,
											"end": 542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 508,
											"end": 542,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 542,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 508,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 508,
											"end": 542,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 508,
											"end": 542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 508,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 508,
											"end": 542,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 508,
											"end": 542,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 508,
											"end": 542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 508,
											"end": 542,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 542,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 508,
											"end": 542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 508,
											"end": 542,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 508,
											"end": 542,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 508,
											"end": 542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 508,
											"end": 542,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 584,
											"end": 601,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 584,
											"end": 601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 584,
											"end": 601,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 584,
											"end": 601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 584,
											"end": 601,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 584,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 584,
											"end": 601,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 584,
											"end": 601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 584,
											"end": 601,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 584,
											"end": 601,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 584,
											"end": 601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 584,
											"end": 601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 584,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 584,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 584,
											"end": 601,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 584,
											"end": 601,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 584,
											"end": 601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 584,
											"end": 601,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 584,
											"end": 601,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 584,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 584,
											"end": 601,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 584,
											"end": 601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 584,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 584,
											"end": 601,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 584,
											"end": 601,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 584,
											"end": 601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 584,
											"end": 601,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 584,
											"end": 601,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 584,
											"end": 601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 584,
											"end": 601,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 584,
											"end": 601,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 584,
											"end": 601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 584,
											"end": 601,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10611,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 10487,
											"end": 10611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10611,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10611,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 10487,
											"end": 10611,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10487,
											"end": 10611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10611,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10611,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 10487,
											"end": 10611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10611,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 10487,
											"end": 10611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 10487,
											"end": 10611,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10487,
											"end": 10611,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 10487,
											"end": 10611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10611,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10487,
											"end": 10611,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 10487,
											"end": 10611,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 10487,
											"end": 10611,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10487,
											"end": 10611,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 10487,
											"end": 10611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10611,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10487,
											"end": 10611,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10611,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10611,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10611,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10611,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4714,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4588,
											"end": 4714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4714,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4714,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 4588,
											"end": 4714,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4588,
											"end": 4714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4714,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4714,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 4588,
											"end": 4714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4714,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 4588,
											"end": 4714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4588,
											"end": 4714,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4588,
											"end": 4714,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 4588,
											"end": 4714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4714,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4588,
											"end": 4714,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4588,
											"end": 4714,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 4588,
											"end": 4714,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4588,
											"end": 4714,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4588,
											"end": 4714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4714,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4588,
											"end": 4714,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4714,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4714,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4714,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5399,
											"end": 5419,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5421,
											"end": 5443,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1127,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1161,
											"end": 1165,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1152,
											"end": 1158,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1152,
											"end": 1158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5504,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5486,
											"end": 5516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5505,
											"end": 5515,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5516,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5486,
											"end": 5516,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5516,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5486,
											"end": 5516,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5516,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5516,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5486,
											"end": 5516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5516,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5516,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5486,
											"end": 5516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5486,
											"end": 5516,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5516,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5457,
											"end": 5482,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5457,
											"end": 5516,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 5457,
											"end": 5516,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5457,
											"end": 5577,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5457,
											"end": 5577,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5457,
											"end": 5577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5457,
											"end": 5577,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5457,
											"end": 5577,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5576,
											"end": 5577,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5547,
											"end": 5572,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5521,
											"end": 5544,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5521,
											"end": 5544,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5521,
											"end": 5572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 5521,
											"end": 5572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5521,
											"end": 5572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5521,
											"end": 5572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 5521,
											"end": 5572,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5521,
											"end": 5572,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 5521,
											"end": 5572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5521,
											"end": 5577,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5521,
											"end": 5577,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5457,
											"end": 5577,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5457,
											"end": 5577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 6383,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 5453,
											"end": 6383,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5659,
											"end": 5682,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5659,
											"end": 5682,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5638,
											"end": 5656,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5638,
											"end": 5656,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5610,
											"end": 5635,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5610,
											"end": 5656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5610,
											"end": 5656,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5610,
											"end": 5656,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5610,
											"end": 5656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5610,
											"end": 5656,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5610,
											"end": 5656,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5610,
											"end": 5656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5610,
											"end": 5682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5610,
											"end": 5682,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5610,
											"end": 5682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5610,
											"end": 5682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5610,
											"end": 5682,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5610,
											"end": 5682,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5610,
											"end": 5682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5592,
											"end": 5682,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5592,
											"end": 5682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5771,
											"end": 5794,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5771,
											"end": 5794,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5743,
											"end": 5768,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5743,
											"end": 5768,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5715,
											"end": 5740,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5715,
											"end": 5768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5715,
											"end": 5768,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5715,
											"end": 5768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5715,
											"end": 5768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5715,
											"end": 5768,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5715,
											"end": 5768,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5715,
											"end": 5768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5715,
											"end": 5794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5715,
											"end": 5794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5715,
											"end": 5794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5715,
											"end": 5794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5715,
											"end": 5794,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5715,
											"end": 5794,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5715,
											"end": 5794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 5794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5695,
											"end": 5794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5841,
											"end": 5866,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5825,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5807,
											"end": 5837,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5826,
											"end": 5836,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5837,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5807,
											"end": 5837,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5837,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5807,
											"end": 5837,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5837,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5807,
											"end": 5837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5837,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5807,
											"end": 5837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5837,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5837,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5837,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5866,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5866,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5866,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5807,
											"end": 5866,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 5807,
											"end": 5866,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5807,
											"end": 5866,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5807,
											"end": 5866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5866,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5866,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5807,
											"end": 5866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5906,
											"end": 5931,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5879,
											"end": 5902,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5879,
											"end": 5902,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5879,
											"end": 5931,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5879,
											"end": 5931,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5879,
											"end": 5931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5879,
											"end": 5931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 5879,
											"end": 5931,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5879,
											"end": 5931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5879,
											"end": 5931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 5879,
											"end": 5931,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5879,
											"end": 5931,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 5879,
											"end": 5931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5879,
											"end": 5931,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5879,
											"end": 5931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5879,
											"end": 5931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5879,
											"end": 5931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5879,
											"end": 5931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5879,
											"end": 5931,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5879,
											"end": 5931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5944,
											"end": 5968,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5979,
											"end": 5989,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5944,
											"end": 5990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5944,
											"end": 5990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6020,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6003,
											"end": 6020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 6021,
											"end": 6036,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6003,
											"end": 6037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6072,
											"end": 6087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6050,
											"end": 6068,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6050,
											"end": 6068,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6050,
											"end": 6087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6050,
											"end": 6087,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6050,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 6050,
											"end": 6087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6050,
											"end": 6087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6050,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 6050,
											"end": 6087,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6050,
											"end": 6087,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 6050,
											"end": 6087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6050,
											"end": 6087,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6050,
											"end": 6087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6050,
											"end": 6087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6050,
											"end": 6087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6050,
											"end": 6087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6050,
											"end": 6087,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6050,
											"end": 6087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6100,
											"end": 6111,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6111,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6111,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6100,
											"end": 6111,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6111,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6111,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6100,
											"end": 6111,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6119,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6100,
											"end": 6119,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6119,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 6128,
											"end": 6132,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 6135,
											"end": 6152,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6100,
											"end": 6153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6177,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6166,
											"end": 6177,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6177,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6177,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6166,
											"end": 6177,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6177,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6177,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6166,
											"end": 6177,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6190,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6166,
											"end": 6190,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6190,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 6199,
											"end": 6203,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 6206,
											"end": 6214,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6216,
											"end": 6233,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6166,
											"end": 6234,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6276,
											"end": 6293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6247,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6247,
											"end": 6272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6247,
											"end": 6293,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6247,
											"end": 6293,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6247,
											"end": 6293,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6247,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 6247,
											"end": 6293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6247,
											"end": 6293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6247,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 6247,
											"end": 6293,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6247,
											"end": 6293,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 6247,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6247,
											"end": 6293,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6247,
											"end": 6293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6247,
											"end": 6293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6247,
											"end": 6293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6247,
											"end": 6293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6247,
											"end": 6293,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6247,
											"end": 6293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5579,
											"end": 6303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 5453,
											"end": 6383,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 6383,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 5453,
											"end": 6383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6338,
											"end": 6339,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6320,
											"end": 6339,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6320,
											"end": 6339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6372,
											"end": 6373,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6352,
											"end": 6373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6373,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5453,
											"end": 6383,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 5453,
											"end": 6383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6416,
											"end": 6441,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6416,
											"end": 6441,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6395,
											"end": 6413,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6395,
											"end": 6413,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6395,
											"end": 6441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 6395,
											"end": 6441,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6395,
											"end": 6441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6395,
											"end": 6441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 6395,
											"end": 6441,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6395,
											"end": 6441,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 6395,
											"end": 6441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6391,
											"end": 6392,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6391,
											"end": 6441,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6391,
											"end": 6441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6391,
											"end": 6441,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6391,
											"end": 6441,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6535,
											"name": "PUSH",
											"source": 0,
											"value": "B14F451E613015C13A17C78777F1D87FCB448D7330D67299A09B8F2DB38AAB10"
										},
										{
											"begin": 6473,
											"end": 6490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6492,
											"end": 6507,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6509,
											"end": 6534,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6535,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6455,
											"end": 6535,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 6455,
											"end": 6535,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6535,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6535,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 6455,
											"end": 6535,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6455,
											"end": 6535,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 6455,
											"end": 6535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6535,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6455,
											"end": 6535,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6535,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6535,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6535,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6455,
											"end": 6535,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 1193,
											"end": 1198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1190,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1184,
											"end": 1190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5302,
											"end": 6593,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3577,
											"end": 3592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3715,
											"end": 3719,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3695,
											"end": 3712,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3695,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3695,
											"end": 3719,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3695,
											"end": 3719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3695,
											"end": 3719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 3695,
											"end": 3719,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3695,
											"end": 3719,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 3695,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3675,
											"end": 3719,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3675,
											"end": 3719,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3783,
											"end": 3808,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3783,
											"end": 3808,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3780,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3760,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3742,
											"end": 3760,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3742,
											"end": 3780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 3742,
											"end": 3780,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3742,
											"end": 3780,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3742,
											"end": 3780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3742,
											"end": 3808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3742,
											"end": 3808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3742,
											"end": 3808,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3742,
											"end": 3808,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 3742,
											"end": 3808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3840,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8934,
											"end": 9588,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 8934,
											"end": 9588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9003,
											"end": 9024,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1127,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1161,
											"end": 1165,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1152,
											"end": 1158,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1152,
											"end": 1158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9056,
											"end": 9065,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9034,
											"end": 9052,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9034,
											"end": 9052,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9034,
											"end": 9065,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9034,
											"end": 9065,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9034,
											"end": 9065,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9034,
											"end": 9065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 9034,
											"end": 9065,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9034,
											"end": 9065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9034,
											"end": 9065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 9034,
											"end": 9065,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9034,
											"end": 9065,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 9034,
											"end": 9065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9034,
											"end": 9065,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9034,
											"end": 9065,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9034,
											"end": 9065,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9034,
											"end": 9065,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9034,
											"end": 9065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9034,
											"end": 9065,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9034,
											"end": 9065,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9074,
											"end": 9113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9120,
											"end": 9138,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9120,
											"end": 9138,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9117,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9116,
											"end": 9117,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 9116,
											"end": 9138,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9116,
											"end": 9138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 9116,
											"end": 9138,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9116,
											"end": 9138,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 9116,
											"end": 9138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9074,
											"end": 9138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9074,
											"end": 9138,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9194,
											"end": 9228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9166,
											"end": 9191,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9166,
											"end": 9191,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9166,
											"end": 9228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 9166,
											"end": 9228,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9166,
											"end": 9228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9166,
											"end": 9228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 9166,
											"end": 9228,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9166,
											"end": 9228,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 9166,
											"end": 9228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9147,
											"end": 9228,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9147,
											"end": 9228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9237,
											"end": 9261,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9272,
											"end": 9282,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9237,
											"end": 9283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9237,
											"end": 9283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9292,
											"end": 9303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9303,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9303,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9292,
											"end": 9303,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9303,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9303,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9292,
											"end": 9303,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9311,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9292,
											"end": 9311,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9311,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 9320,
											"end": 9324,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 9327,
											"end": 9343,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9292,
											"end": 9344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9353,
											"end": 9364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9364,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9364,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9353,
											"end": 9364,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9364,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9364,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9353,
											"end": 9364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9377,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9353,
											"end": 9377,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9377,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 9386,
											"end": 9390,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 9393,
											"end": 9401,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9403,
											"end": 9419,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9353,
											"end": 9420,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9457,
											"end": 9491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9429,
											"end": 9454,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9429,
											"end": 9491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9429,
											"end": 9491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9429,
											"end": 9491,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9429,
											"end": 9491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9505,
											"end": 9550,
											"name": "PUSH",
											"source": 0,
											"value": "CDFC57B3D0CDC24B23CEA1F480AABEA287321F5BEE23AD76C2B52FA7982F5EA5"
										},
										{
											"begin": 9523,
											"end": 9539,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9540,
											"end": 9549,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 9505,
											"end": 9550,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9505,
											"end": 9550,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9505,
											"end": 9550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 9505,
											"end": 9550,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9505,
											"end": 9550,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9505,
											"end": 9550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9505,
											"end": 9550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9505,
											"end": 9550,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9505,
											"end": 9550,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 9505,
											"end": 9550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9505,
											"end": 9550,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9505,
											"end": 9550,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9505,
											"end": 9550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9505,
											"end": 9550,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9505,
											"end": 9550,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9505,
											"end": 9550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9505,
											"end": 9550,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 9559,
											"end": 9582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9559,
											"end": 9582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1193,
											"end": 1198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1190,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1184,
											"end": 1190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8934,
											"end": 9588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8934,
											"end": 9588,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 508,
											"end": 542,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 508,
											"end": 542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 508,
											"end": 542,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 508,
											"end": 542,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 508,
											"end": 542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 508,
											"end": 542,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9983,
											"end": 10004,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10014,
											"end": 10046,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10070,
											"end": 10080,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10049,
											"end": 10067,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10049,
											"end": 10067,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10049,
											"end": 10080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 10049,
											"end": 10080,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10049,
											"end": 10080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10049,
											"end": 10080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 10049,
											"end": 10080,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10049,
											"end": 10080,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 10049,
											"end": 10080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10014,
											"end": 10080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10014,
											"end": 10080,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10089,
											"end": 10128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10135,
											"end": 10162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10131,
											"end": 10132,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10131,
											"end": 10132,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10131,
											"end": 10162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 10131,
											"end": 10162,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10131,
											"end": 10162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10131,
											"end": 10162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 10131,
											"end": 10162,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10131,
											"end": 10162,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 10131,
											"end": 10162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10089,
											"end": 10162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10089,
											"end": 10162,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10218,
											"end": 10252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10190,
											"end": 10215,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10190,
											"end": 10215,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10190,
											"end": 10252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 10190,
											"end": 10252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10190,
											"end": 10252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10190,
											"end": 10252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 10190,
											"end": 10252,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10190,
											"end": 10252,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 10190,
											"end": 10252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10252,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10171,
											"end": 10252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10286,
											"end": 10290,
											"name": "PUSH",
											"source": 0,
											"value": "8AC7230489E80000"
										},
										{
											"begin": 10269,
											"end": 10285,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10269,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 10269,
											"end": 10290,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10269,
											"end": 10290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10269,
											"end": 10290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 10269,
											"end": 10290,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10269,
											"end": 10290,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 10269,
											"end": 10290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10261,
											"end": 10291,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10261,
											"end": 10291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10261,
											"end": 10291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10261,
											"end": 10291,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 10297,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8093,
											"end": 8107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8229,
											"end": 8233,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 8209,
											"end": 8226,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8209,
											"end": 8233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 8209,
											"end": 8233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8209,
											"end": 8233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8209,
											"end": 8233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 8209,
											"end": 8233,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8209,
											"end": 8233,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 8209,
											"end": 8233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8189,
											"end": 8233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8189,
											"end": 8233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8250,
											"end": 8284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8315,
											"end": 8332,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8287,
											"end": 8312,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8287,
											"end": 8312,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8287,
											"end": 8332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 8287,
											"end": 8332,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8287,
											"end": 8332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8287,
											"end": 8332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 8287,
											"end": 8332,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8287,
											"end": 8332,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 8287,
											"end": 8332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8250,
											"end": 8332,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8250,
											"end": 8332,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8341,
											"end": 8373,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8380,
											"end": 8409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8376,
											"end": 8377,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8376,
											"end": 8377,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8376,
											"end": 8409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 8376,
											"end": 8409,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8376,
											"end": 8409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8376,
											"end": 8409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8376,
											"end": 8409,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8376,
											"end": 8409,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 8376,
											"end": 8409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8341,
											"end": 8409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8341,
											"end": 8409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8451,
											"end": 8478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8430,
											"end": 8448,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8430,
											"end": 8448,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8478,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8418,
											"end": 8478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8487,
											"end": 8503,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8487,
											"end": 8503,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8509,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 584,
											"end": 601,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 584,
											"end": 601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 584,
											"end": 601,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 584,
											"end": 601,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 584,
											"end": 601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 584,
											"end": 601,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10487,
											"end": 10611,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 10487,
											"end": 10611,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10540,
											"end": 10544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10600,
											"end": 10604,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 10563,
											"end": 10574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10563,
											"end": 10574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10574,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10574,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10563,
											"end": 10574,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10574,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10574,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10563,
											"end": 10574,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10584,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10563,
											"end": 10584,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10584,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 10593,
											"end": 10597,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 10563,
											"end": 10599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 10563,
											"end": 10604,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10563,
											"end": 10604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 10563,
											"end": 10604,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10563,
											"end": 10604,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 10563,
											"end": 10604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10555,
											"end": 10605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10555,
											"end": 10605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10487,
											"end": 10611,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7055,
											"end": 7069,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1127,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1161,
											"end": 1165,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1152,
											"end": 1158,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1152,
											"end": 1158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7192,
											"end": 7196,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 7172,
											"end": 7189,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7172,
											"end": 7196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 7172,
											"end": 7196,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7172,
											"end": 7196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7172,
											"end": 7196,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 7172,
											"end": 7196,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7172,
											"end": 7196,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 7172,
											"end": 7196,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7196,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7206,
											"end": 7217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7217,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7217,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7206,
											"end": 7217,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7217,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7217,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7206,
											"end": 7217,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7230,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7206,
											"end": 7230,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7230,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 7231,
											"end": 7241,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7251,
											"end": 7255,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7258,
											"end": 7275,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7206,
											"end": 7276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7314,
											"end": 7331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7285,
											"end": 7310,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7285,
											"end": 7310,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7285,
											"end": 7331,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7285,
											"end": 7331,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7285,
											"end": 7331,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7285,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 7285,
											"end": 7331,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7285,
											"end": 7331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7285,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 7285,
											"end": 7331,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7285,
											"end": 7331,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 7285,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7285,
											"end": 7331,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7285,
											"end": 7331,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7285,
											"end": 7331,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7285,
											"end": 7331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7285,
											"end": 7331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7285,
											"end": 7331,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7285,
											"end": 7331,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7340,
											"end": 7372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7379,
											"end": 7404,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7379,
											"end": 7404,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7376,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7376,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 7375,
											"end": 7404,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 7375,
											"end": 7404,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7375,
											"end": 7404,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 7375,
											"end": 7404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7340,
											"end": 7404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7340,
											"end": 7404,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7446,
											"end": 7473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7425,
											"end": 7473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 7425,
											"end": 7473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7425,
											"end": 7473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7425,
											"end": 7473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 7425,
											"end": 7473,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7425,
											"end": 7473,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 7425,
											"end": 7473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7413,
											"end": 7473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7482,
											"end": 7506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7517,
											"end": 7527,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7482,
											"end": 7528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7482,
											"end": 7528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7545,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7554,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7537,
											"end": 7554,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7565,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 7555,
											"end": 7564,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7565,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7565,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7565,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7537,
											"end": 7565,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7537,
											"end": 7565,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7537,
											"end": 7565,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7565,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7565,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7565,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7565,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7565,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7565,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7565,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7565,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7565,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 7537,
											"end": 7565,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7565,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7537,
											"end": 7565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7565,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7565,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7537,
											"end": 7565,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7565,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 7537,
											"end": 7565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7537,
											"end": 7565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7596,
											"end": 7605,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7592,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7574,
											"end": 7592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7574,
											"end": 7605,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7605,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7605,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 7574,
											"end": 7605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 7574,
											"end": 7605,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7574,
											"end": 7605,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 7574,
											"end": 7605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7605,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7605,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7605,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7619,
											"end": 7659,
											"name": "PUSH",
											"source": 0,
											"value": "3297A389BB586920E62A196AF529D5F42651B17A1013D6BFE77F22372A0B2112"
										},
										{
											"begin": 7630,
											"end": 7647,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7649,
											"end": 7658,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7619,
											"end": 7659,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7619,
											"end": 7659,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7619,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 7619,
											"end": 7659,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7619,
											"end": 7659,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7619,
											"end": 7659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7619,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7619,
											"end": 7659,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7619,
											"end": 7659,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 7619,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7619,
											"end": 7659,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7619,
											"end": 7659,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7619,
											"end": 7659,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7619,
											"end": 7659,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7619,
											"end": 7659,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7619,
											"end": 7659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7619,
											"end": 7659,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 7668,
											"end": 7684,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7668,
											"end": 7684,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1193,
											"end": 1198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1190,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1184,
											"end": 1190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6973,
											"end": 7690,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4588,
											"end": 4714,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4588,
											"end": 4714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4645,
											"end": 4660,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4678,
											"end": 4696,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4678,
											"end": 4708,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4697,
											"end": 4707,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4678,
											"end": 4708,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4678,
											"end": 4708,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4678,
											"end": 4708,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4678,
											"end": 4708,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4678,
											"end": 4708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4678,
											"end": 4708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4678,
											"end": 4708,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4678,
											"end": 4708,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4678,
											"end": 4708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4678,
											"end": 4708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4678,
											"end": 4708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4678,
											"end": 4708,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4678,
											"end": 4708,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4678,
											"end": 4708,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4678,
											"end": 4708,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4678,
											"end": 4708,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4671,
											"end": 4708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4671,
											"end": 4708,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4588,
											"end": 4714,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1905,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1127,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1111,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1161,
											"end": 1165,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1152,
											"end": 1158,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1152,
											"end": 1158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1152,
											"end": 1165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1934,
											"end": 1943,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1943,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1974,
											"end": 1984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1970,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1952,
											"end": 1970,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1952,
											"end": 1984,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1984,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1984,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1952,
											"end": 1984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1952,
											"end": 1984,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1952,
											"end": 1984,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1952,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1984,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1984,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1984,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2074,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2050,
											"end": 2067,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2050,
											"end": 2074,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2050,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2050,
											"end": 2074,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2050,
											"end": 2074,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2050,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2030,
											"end": 2074,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2030,
											"end": 2074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2094,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2094,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2094,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2094,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2083,
											"end": 2094,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2094,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2094,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2083,
											"end": 2094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2102,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2083,
											"end": 2102,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2102,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 2111,
											"end": 2115,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2118,
											"end": 2135,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2083,
											"end": 2136,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2157,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2160,
											"end": 2171,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2171,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2160,
											"end": 2171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2171,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2171,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2160,
											"end": 2171,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2171,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2171,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2160,
											"end": 2171,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2184,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2160,
											"end": 2184,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2184,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 2185,
											"end": 2195,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2205,
											"end": 2209,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2212,
											"end": 2229,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2160,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2247,
											"end": 2254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2239,
											"end": 2278,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2239,
											"end": 2278,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2278,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2239,
											"end": 2278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2278,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2239,
											"end": 2278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2239,
											"end": 2278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2239,
											"end": 2278,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2239,
											"end": 2278,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2239,
											"end": 2278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2239,
											"end": 2278,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2278,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2278,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2278,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2239,
											"end": 2278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2287,
											"end": 2312,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2287,
											"end": 2312,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2333,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2287,
											"end": 2333,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2287,
											"end": 2333,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2287,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2287,
											"end": 2333,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2287,
											"end": 2333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2287,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2287,
											"end": 2333,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2287,
											"end": 2333,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2287,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2287,
											"end": 2333,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2287,
											"end": 2333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2287,
											"end": 2333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2287,
											"end": 2333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2287,
											"end": 2333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2287,
											"end": 2333,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2287,
											"end": 2333,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2463,
											"end": 2481,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2463,
											"end": 2481,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2452,
											"end": 2462,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2449,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2426,
											"end": 2449,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2426,
											"end": 2462,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2426,
											"end": 2462,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2426,
											"end": 2462,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2426,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2426,
											"end": 2481,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2426,
											"end": 2481,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2426,
											"end": 2481,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2426,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2395,
											"end": 2420,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2395,
											"end": 2420,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2377,
											"end": 2394,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2374,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2351,
											"end": 2374,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2351,
											"end": 2394,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2351,
											"end": 2394,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2351,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2351,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2351,
											"end": 2420,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2351,
											"end": 2420,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2351,
											"end": 2420,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2351,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2350,
											"end": 2482,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2342,
											"end": 2506,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 2506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2342,
											"end": 2506,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 2506,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2342,
											"end": 2506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 2506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 2506,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2342,
											"end": 2506,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2342,
											"end": 2506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2342,
											"end": 2506,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2342,
											"end": 2506,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2342,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 2506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2342,
											"end": 2506,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 2506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 2506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 2506,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 2506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 2506,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2342,
											"end": 2506,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2342,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2549,
											"end": 2550,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2545,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2522,
											"end": 2545,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2522,
											"end": 2550,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2949,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2519,
											"end": 2949,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2601,
											"end": 2604,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2568,
											"end": 2586,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2568,
											"end": 2598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2587,
											"end": 2597,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2568,
											"end": 2598,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2568,
											"end": 2598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2568,
											"end": 2598,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2568,
											"end": 2598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2568,
											"end": 2598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2568,
											"end": 2598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2568,
											"end": 2598,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2568,
											"end": 2598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2568,
											"end": 2598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2568,
											"end": 2598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2568,
											"end": 2598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2568,
											"end": 2598,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2568,
											"end": 2598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2568,
											"end": 2598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2568,
											"end": 2598,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2568,
											"end": 2604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2568,
											"end": 2604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2568,
											"end": 2604,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2568,
											"end": 2604,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2648,
											"end": 2666,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2648,
											"end": 2678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2667,
											"end": 2677,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2648,
											"end": 2678,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2648,
											"end": 2678,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2648,
											"end": 2678,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2648,
											"end": 2678,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2648,
											"end": 2678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2648,
											"end": 2678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2648,
											"end": 2678,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2648,
											"end": 2678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2648,
											"end": 2678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2648,
											"end": 2678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2648,
											"end": 2678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2648,
											"end": 2678,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2648,
											"end": 2678,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2648,
											"end": 2678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2648,
											"end": 2678,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2648,
											"end": 2678,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2621,
											"end": 2644,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2621,
											"end": 2644,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2621,
											"end": 2678,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2621,
											"end": 2678,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2621,
											"end": 2678,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2621,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2621,
											"end": 2678,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2621,
											"end": 2678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2621,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2621,
											"end": 2678,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2621,
											"end": 2678,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2621,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2621,
											"end": 2678,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2621,
											"end": 2678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2621,
											"end": 2678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2621,
											"end": 2678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2621,
											"end": 2678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2621,
											"end": 2678,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2621,
											"end": 2678,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2519,
											"end": 2949,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2949,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2519,
											"end": 2949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2793,
											"end": 2818,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2793,
											"end": 2818,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2773,
											"end": 2790,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2747,
											"end": 2770,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2747,
											"end": 2770,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2747,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 2747,
											"end": 2790,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2747,
											"end": 2790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2747,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2747,
											"end": 2790,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2747,
											"end": 2790,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 2747,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2747,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2747,
											"end": 2818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2747,
											"end": 2818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2747,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2747,
											"end": 2818,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2747,
											"end": 2818,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2747,
											"end": 2818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2731,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2713,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2732,
											"end": 2742,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2713,
											"end": 2743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2713,
											"end": 2743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2713,
											"end": 2743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2713,
											"end": 2743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2713,
											"end": 2743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2713,
											"end": 2818,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2818,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2818,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2713,
											"end": 2818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2713,
											"end": 2818,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2713,
											"end": 2818,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2713,
											"end": 2818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2818,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2818,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2818,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2818,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2818,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2934,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2909,
											"end": 2934,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2889,
											"end": 2906,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2863,
											"end": 2886,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2863,
											"end": 2886,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2863,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2863,
											"end": 2906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2863,
											"end": 2906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2863,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2863,
											"end": 2906,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2863,
											"end": 2906,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2863,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2863,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2863,
											"end": 2934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2863,
											"end": 2934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2863,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2863,
											"end": 2934,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2863,
											"end": 2934,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2863,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2858,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2835,
											"end": 2858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2835,
											"end": 2935,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2935,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2935,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2835,
											"end": 2935,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2835,
											"end": 2935,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2835,
											"end": 2935,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2835,
											"end": 2935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2935,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2935,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2935,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2935,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2935,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2835,
											"end": 2935,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2519,
											"end": 2949,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2519,
											"end": 2949,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2982,
											"end": 3007,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2982,
											"end": 3007,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2961,
											"end": 2979,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2961,
											"end": 2979,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2961,
											"end": 3007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 2961,
											"end": 3007,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2961,
											"end": 3007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2961,
											"end": 3007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2961,
											"end": 3007,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2961,
											"end": 3007,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 2961,
											"end": 3007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2957,
											"end": 2958,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2957,
											"end": 3007,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2957,
											"end": 3007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2957,
											"end": 3007,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2957,
											"end": 3007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3102,
											"name": "PUSH",
											"source": 0,
											"value": "AA58F006CC244B2AF6662862508BD39465F57169FF8386D1D1F7B0B903150ABC"
										},
										{
											"begin": 3039,
											"end": 3056,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3068,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3070,
											"end": 3100,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3089,
											"end": 3099,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3100,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3070,
											"end": 3100,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3100,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3070,
											"end": 3100,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3100,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3100,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3070,
											"end": 3100,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3100,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3100,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3070,
											"end": 3100,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3100,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3070,
											"end": 3100,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3070,
											"end": 3100,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3102,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3021,
											"end": 3102,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 3021,
											"end": 3102,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3102,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3102,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3021,
											"end": 3102,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3021,
											"end": 3102,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 3021,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3102,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3021,
											"end": 3102,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3102,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3102,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3102,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 3118,
											"end": 3136,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3137,
											"end": 3147,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3111,
											"end": 3148,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3111,
											"end": 3148,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3111,
											"end": 3148,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3111,
											"end": 3148,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1193,
											"end": 1198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1190,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1184,
											"end": 1190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 3154,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4255,
											"end": 4272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4336,
											"end": 4354,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4336,
											"end": 4354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4325,
											"end": 4335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4297,
											"end": 4322,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4297,
											"end": 4322,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4297,
											"end": 4335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 4297,
											"end": 4335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4297,
											"end": 4335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4297,
											"end": 4335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4297,
											"end": 4335,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4297,
											"end": 4335,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 4297,
											"end": 4335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4297,
											"end": 4354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 4297,
											"end": 4354,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4297,
											"end": 4354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4297,
											"end": 4354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4297,
											"end": 4354,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4297,
											"end": 4354,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 4297,
											"end": 4354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4282,
											"end": 4354,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4384,
											"end": 4388,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4371,
											"end": 4383,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4371,
											"end": 4388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 4371,
											"end": 4388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4371,
											"end": 4388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4371,
											"end": 4388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4371,
											"end": 4388,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4371,
											"end": 4388,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 4371,
											"end": 4388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4363,
											"end": 4389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4363,
											"end": 4389,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4179,
											"end": 4395,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 7,
											"end": 144,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 61,
											"end": 66,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 92,
											"end": 98,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 86,
											"end": 99,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 132,
											"end": 137,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7,
											"end": 144,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7,
											"end": 144,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 144,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 144,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 144,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 150,
											"end": 289,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 150,
											"end": 289,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 196,
											"end": 201,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 234,
											"end": 240,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 221,
											"end": 241,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 212,
											"end": 241,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 212,
											"end": 241,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 250,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 250,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 250,
											"end": 283,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 250,
											"end": 283,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 250,
											"end": 283,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 150,
											"end": 289,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 150,
											"end": 289,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 150,
											"end": 289,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 150,
											"end": 289,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 150,
											"end": 289,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 438,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 295,
											"end": 438,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 352,
											"end": 357,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 383,
											"end": 389,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 377,
											"end": 390,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 368,
											"end": 390,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 368,
											"end": 390,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 399,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 426,
											"end": 431,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 399,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 399,
											"end": 432,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 399,
											"end": 432,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 399,
											"end": 432,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 295,
											"end": 438,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 295,
											"end": 438,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 295,
											"end": 438,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 295,
											"end": 438,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 295,
											"end": 438,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 444,
											"end": 789,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 444,
											"end": 789,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 511,
											"end": 517,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 560,
											"end": 562,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 548,
											"end": 557,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 539,
											"end": 546,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 535,
											"end": 558,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 531,
											"end": 563,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 528,
											"end": 647,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 528,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 528,
											"end": 647,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 566,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 566,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 566,
											"end": 645,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 566,
											"end": 645,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 566,
											"end": 645,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 528,
											"end": 647,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 528,
											"end": 647,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 686,
											"end": 687,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 764,
											"end": 771,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 755,
											"end": 761,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 744,
											"end": 753,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 740,
											"end": 762,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 711,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 711,
											"end": 772,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 711,
											"end": 772,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 711,
											"end": 772,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 701,
											"end": 772,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 701,
											"end": 772,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 657,
											"end": 782,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 444,
											"end": 789,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 444,
											"end": 789,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 444,
											"end": 789,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 444,
											"end": 789,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 444,
											"end": 789,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 795,
											"end": 1124,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 795,
											"end": 1124,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 854,
											"end": 860,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 903,
											"end": 905,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 891,
											"end": 900,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 882,
											"end": 889,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 878,
											"end": 901,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 874,
											"end": 906,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 871,
											"end": 990,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 871,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 871,
											"end": 990,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 909,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 909,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 909,
											"end": 988,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 909,
											"end": 988,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 909,
											"end": 988,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 871,
											"end": 990,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 871,
											"end": 990,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1029,
											"end": 1030,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1054,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 1099,
											"end": 1106,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1090,
											"end": 1096,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1088,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1097,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1054,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 1054,
											"end": 1107,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1054,
											"end": 1107,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 1054,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1107,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1107,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1000,
											"end": 1117,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 795,
											"end": 1124,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 795,
											"end": 1124,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 795,
											"end": 1124,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 795,
											"end": 1124,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 795,
											"end": 1124,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1130,
											"end": 1481,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1130,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1206,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1249,
											"end": 1251,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1237,
											"end": 1246,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1228,
											"end": 1235,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1220,
											"end": 1252,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1217,
											"end": 1336,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1217,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 1217,
											"end": 1336,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1255,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 1255,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 1255,
											"end": 1334,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1255,
											"end": 1334,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 1255,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1217,
											"end": 1336,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 1217,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1375,
											"end": 1376,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1400,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 1456,
											"end": 1463,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1447,
											"end": 1453,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1445,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1432,
											"end": 1454,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 1400,
											"end": 1464,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1400,
											"end": 1464,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 1400,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1390,
											"end": 1464,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1390,
											"end": 1464,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1346,
											"end": 1474,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1481,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1481,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1481,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1481,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1481,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1487,
											"end": 1634,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 1487,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 1621,
											"end": 1626,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 1582,
											"end": 1627,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1577,
											"end": 1580,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1570,
											"end": 1628,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1634,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1634,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1487,
											"end": 1634,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1640,
											"end": 1758,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 1640,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 1745,
											"end": 1750,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 1727,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1725,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1715,
											"end": 1752,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1640,
											"end": 1758,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1640,
											"end": 1758,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1640,
											"end": 1758,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1764,
											"end": 2130,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 1764,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1906,
											"end": 1909,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1927,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 1991,
											"end": 1993,
											"name": "PUSH",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1986,
											"end": 1989,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1927,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 1927,
											"end": 1994,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1927,
											"end": 1994,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 1927,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 1994,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 1994,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 2092,
											"end": 2095,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 2003,
											"end": 2096,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2003,
											"end": 2096,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 2003,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2121,
											"end": 2123,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2116,
											"end": 2119,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2112,
											"end": 2124,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2124,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2124,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1764,
											"end": 2130,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1764,
											"end": 2130,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1764,
											"end": 2130,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1764,
											"end": 2130,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2136,
											"end": 2502,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 2136,
											"end": 2502,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2281,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2299,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 2363,
											"end": 2365,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 2358,
											"end": 2361,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 2299,
											"end": 2366,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2299,
											"end": 2366,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 2299,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2366,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2366,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2375,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 2464,
											"end": 2467,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2375,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 2375,
											"end": 2468,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2375,
											"end": 2468,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 2375,
											"end": 2468,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2493,
											"end": 2495,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2488,
											"end": 2491,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2484,
											"end": 2496,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2477,
											"end": 2496,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2477,
											"end": 2496,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2136,
											"end": 2502,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2136,
											"end": 2502,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2136,
											"end": 2502,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2136,
											"end": 2502,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2508,
											"end": 2874,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 2508,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2650,
											"end": 2653,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2671,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 2735,
											"end": 2737,
											"name": "PUSH",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 2730,
											"end": 2733,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2671,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 2671,
											"end": 2738,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2671,
											"end": 2738,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 2671,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2664,
											"end": 2738,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2664,
											"end": 2738,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2747,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 2836,
											"end": 2839,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2747,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 2747,
											"end": 2840,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2747,
											"end": 2840,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 2747,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2865,
											"end": 2867,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2860,
											"end": 2863,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2856,
											"end": 2868,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2868,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2868,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2508,
											"end": 2874,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2508,
											"end": 2874,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2508,
											"end": 2874,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2508,
											"end": 2874,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2880,
											"end": 2998,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 2880,
											"end": 2998,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2967,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 2985,
											"end": 2990,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2967,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 2967,
											"end": 2991,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2967,
											"end": 2991,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 2967,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2965,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2955,
											"end": 2992,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2998,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2998,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2998,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3004,
											"end": 3226,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 3004,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3097,
											"end": 3101,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3135,
											"end": 3137,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3124,
											"end": 3133,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3120,
											"end": 3138,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3138,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3138,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3148,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 3216,
											"end": 3217,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3205,
											"end": 3214,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3201,
											"end": 3218,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3192,
											"end": 3198,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3148,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 3148,
											"end": 3219,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3148,
											"end": 3219,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 3148,
											"end": 3219,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3226,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3226,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3226,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3226,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3226,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3232,
											"end": 3690,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 3232,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3389,
											"end": 3393,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3427,
											"end": 3429,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3416,
											"end": 3425,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3430,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3404,
											"end": 3430,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3404,
											"end": 3430,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3440,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 3508,
											"end": 3509,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3506,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3493,
											"end": 3510,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3484,
											"end": 3490,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3440,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 3440,
											"end": 3511,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3440,
											"end": 3511,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 3440,
											"end": 3511,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3521,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 3597,
											"end": 3599,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3586,
											"end": 3595,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3573,
											"end": 3579,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3521,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 3521,
											"end": 3601,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3521,
											"end": 3601,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 3521,
											"end": 3601,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 3679,
											"end": 3681,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3668,
											"end": 3677,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3664,
											"end": 3682,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3655,
											"end": 3661,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3611,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 3611,
											"end": 3683,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3611,
											"end": 3683,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 3611,
											"end": 3683,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3232,
											"end": 3690,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 3232,
											"end": 3690,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3232,
											"end": 3690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3232,
											"end": 3690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3232,
											"end": 3690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3232,
											"end": 3690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3232,
											"end": 3690,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3696,
											"end": 4138,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 3696,
											"end": 4138,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3845,
											"end": 3849,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3885,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3872,
											"end": 3881,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3868,
											"end": 3886,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3860,
											"end": 3886,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3860,
											"end": 3886,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3896,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 3964,
											"end": 3965,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3953,
											"end": 3962,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3949,
											"end": 3966,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3946,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3896,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 3896,
											"end": 3967,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3896,
											"end": 3967,
											"name": "tag",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 3896,
											"end": 3967,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 4049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 4045,
											"end": 4047,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4034,
											"end": 4043,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4021,
											"end": 4027,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3977,
											"end": 4049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 3977,
											"end": 4049,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3977,
											"end": 4049,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 3977,
											"end": 4049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4059,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 4127,
											"end": 4129,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4112,
											"end": 4130,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4103,
											"end": 4109,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4059,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 4059,
											"end": 4131,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4059,
											"end": 4131,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 4059,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 4138,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 4138,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 4138,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 4138,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 4138,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 4138,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 4138,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4144,
											"end": 4476,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 4144,
											"end": 4476,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4265,
											"end": 4269,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4303,
											"end": 4305,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4292,
											"end": 4301,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4288,
											"end": 4306,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4280,
											"end": 4306,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4280,
											"end": 4306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4316,
											"end": 4387,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 4384,
											"end": 4385,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4373,
											"end": 4382,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4369,
											"end": 4386,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4360,
											"end": 4366,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4316,
											"end": 4387,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 4316,
											"end": 4387,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4316,
											"end": 4387,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 4316,
											"end": 4387,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4397,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 4465,
											"end": 4467,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4454,
											"end": 4463,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4450,
											"end": 4468,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4441,
											"end": 4447,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4397,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 4397,
											"end": 4469,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4397,
											"end": 4469,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 4397,
											"end": 4469,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4476,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4476,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4476,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4476,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4476,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4476,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4482,
											"end": 4901,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 4482,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4648,
											"end": 4652,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4688,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4675,
											"end": 4684,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4663,
											"end": 4689,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4663,
											"end": 4689,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4735,
											"end": 4744,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4729,
											"end": 4733,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4725,
											"end": 4745,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4721,
											"end": 4722,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4710,
											"end": 4719,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4706,
											"end": 4723,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4699,
											"end": 4746,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4763,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 4889,
											"end": 4893,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4763,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 4763,
											"end": 4894,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4763,
											"end": 4894,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 4763,
											"end": 4894,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4755,
											"end": 4894,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4755,
											"end": 4894,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4482,
											"end": 4901,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4482,
											"end": 4901,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4482,
											"end": 4901,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4482,
											"end": 4901,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4907,
											"end": 5326,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 4907,
											"end": 5326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5073,
											"end": 5077,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5111,
											"end": 5113,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5100,
											"end": 5109,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5096,
											"end": 5114,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5088,
											"end": 5114,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5160,
											"end": 5169,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5154,
											"end": 5158,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5150,
											"end": 5170,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5146,
											"end": 5147,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5135,
											"end": 5144,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5131,
											"end": 5148,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5124,
											"end": 5171,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5188,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 5314,
											"end": 5318,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5188,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 5188,
											"end": 5319,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5188,
											"end": 5319,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 5188,
											"end": 5319,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5180,
											"end": 5319,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5180,
											"end": 5319,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4907,
											"end": 5326,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4907,
											"end": 5326,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4907,
											"end": 5326,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4907,
											"end": 5326,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5332,
											"end": 5751,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 5332,
											"end": 5751,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5498,
											"end": 5502,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5536,
											"end": 5538,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5525,
											"end": 5534,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5521,
											"end": 5539,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5513,
											"end": 5539,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5513,
											"end": 5539,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5585,
											"end": 5594,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5579,
											"end": 5583,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5575,
											"end": 5595,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5571,
											"end": 5572,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5560,
											"end": 5569,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5556,
											"end": 5573,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5549,
											"end": 5596,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5613,
											"end": 5744,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5613,
											"end": 5744,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 5613,
											"end": 5744,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5613,
											"end": 5744,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 5613,
											"end": 5744,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5605,
											"end": 5744,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5605,
											"end": 5744,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5332,
											"end": 5751,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5332,
											"end": 5751,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5332,
											"end": 5751,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5332,
											"end": 5751,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5757,
											"end": 5979,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 5757,
											"end": 5979,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5850,
											"end": 5854,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5888,
											"end": 5890,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5877,
											"end": 5886,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5873,
											"end": 5891,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5865,
											"end": 5891,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5865,
											"end": 5891,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5972,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 5969,
											"end": 5970,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5958,
											"end": 5967,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5954,
											"end": 5971,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5945,
											"end": 5951,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 5972,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 5901,
											"end": 5972,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5901,
											"end": 5972,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 5901,
											"end": 5972,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 5979,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 5979,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 5979,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 5979,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 5979,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5985,
											"end": 6317,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5985,
											"end": 6317,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6106,
											"end": 6110,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6144,
											"end": 6146,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6133,
											"end": 6142,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6129,
											"end": 6147,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6121,
											"end": 6147,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6121,
											"end": 6147,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 6225,
											"end": 6226,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6223,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6210,
											"end": 6227,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6201,
											"end": 6207,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 6157,
											"end": 6228,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6157,
											"end": 6228,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 6157,
											"end": 6228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6238,
											"end": 6310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 6306,
											"end": 6308,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6295,
											"end": 6304,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6291,
											"end": 6309,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6282,
											"end": 6288,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6238,
											"end": 6310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 6238,
											"end": 6310,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6238,
											"end": 6310,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 6238,
											"end": 6310,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5985,
											"end": 6317,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5985,
											"end": 6317,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5985,
											"end": 6317,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5985,
											"end": 6317,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5985,
											"end": 6317,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5985,
											"end": 6317,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6323,
											"end": 6765,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 6323,
											"end": 6765,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6472,
											"end": 6476,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6510,
											"end": 6512,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 6499,
											"end": 6508,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6495,
											"end": 6513,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6487,
											"end": 6513,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6487,
											"end": 6513,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6523,
											"end": 6594,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 6591,
											"end": 6592,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6589,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6576,
											"end": 6593,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6567,
											"end": 6573,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6523,
											"end": 6594,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 6523,
											"end": 6594,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6523,
											"end": 6594,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 6523,
											"end": 6594,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6604,
											"end": 6676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 6672,
											"end": 6674,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6661,
											"end": 6670,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6657,
											"end": 6675,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6648,
											"end": 6654,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6604,
											"end": 6676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 6604,
											"end": 6676,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6604,
											"end": 6676,
											"name": "tag",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 6604,
											"end": 6676,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6686,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 6754,
											"end": 6756,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6743,
											"end": 6752,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6739,
											"end": 6757,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6730,
											"end": 6736,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6686,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 6686,
											"end": 6758,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6686,
											"end": 6758,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 6686,
											"end": 6758,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6323,
											"end": 6765,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 6323,
											"end": 6765,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6323,
											"end": 6765,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6323,
											"end": 6765,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6323,
											"end": 6765,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6323,
											"end": 6765,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6323,
											"end": 6765,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6852,
											"end": 7021,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 6852,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6936,
											"end": 6947,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6970,
											"end": 6976,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6965,
											"end": 6968,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6958,
											"end": 6977,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7010,
											"end": 7014,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7005,
											"end": 7008,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7001,
											"end": 7015,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6986,
											"end": 7015,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6986,
											"end": 7015,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6852,
											"end": 7021,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6852,
											"end": 7021,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6852,
											"end": 7021,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6852,
											"end": 7021,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6852,
											"end": 7021,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7027,
											"end": 7332,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 7027,
											"end": 7332,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7067,
											"end": 7070,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7086,
											"end": 7106,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 7104,
											"end": 7105,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7086,
											"end": 7106,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 7086,
											"end": 7106,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7086,
											"end": 7106,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 7086,
											"end": 7106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7081,
											"end": 7106,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7081,
											"end": 7106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7120,
											"end": 7140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 7138,
											"end": 7139,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7120,
											"end": 7140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 7120,
											"end": 7140,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7120,
											"end": 7140,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 7120,
											"end": 7140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7115,
											"end": 7140,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7115,
											"end": 7140,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7274,
											"end": 7275,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7206,
											"end": 7272,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7202,
											"end": 7276,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7199,
											"end": 7200,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7196,
											"end": 7277,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7193,
											"end": 7300,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7193,
											"end": 7300,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 7193,
											"end": 7300,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7280,
											"end": 7298,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 7280,
											"end": 7298,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 7280,
											"end": 7298,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7280,
											"end": 7298,
											"name": "tag",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 7280,
											"end": 7298,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7193,
											"end": 7300,
											"name": "tag",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 7193,
											"end": 7300,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7324,
											"end": 7325,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7321,
											"end": 7322,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7317,
											"end": 7326,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7310,
											"end": 7326,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7310,
											"end": 7326,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7027,
											"end": 7332,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7027,
											"end": 7332,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7027,
											"end": 7332,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7027,
											"end": 7332,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7027,
											"end": 7332,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7338,
											"end": 7523,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 7338,
											"end": 7523,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7378,
											"end": 7379,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7395,
											"end": 7415,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 7413,
											"end": 7414,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7395,
											"end": 7415,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 7395,
											"end": 7415,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7395,
											"end": 7415,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 7395,
											"end": 7415,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7390,
											"end": 7415,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7390,
											"end": 7415,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7429,
											"end": 7449,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 7447,
											"end": 7448,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7429,
											"end": 7449,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 7429,
											"end": 7449,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7429,
											"end": 7449,
											"name": "tag",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 7429,
											"end": 7449,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7424,
											"end": 7449,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7424,
											"end": 7449,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7468,
											"end": 7469,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7458,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 7458,
											"end": 7493,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7473,
											"end": 7491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 7473,
											"end": 7491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 7473,
											"end": 7491,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7473,
											"end": 7491,
											"name": "tag",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 7473,
											"end": 7491,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7458,
											"end": 7493,
											"name": "tag",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 7458,
											"end": 7493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7515,
											"end": 7516,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7512,
											"end": 7513,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7508,
											"end": 7517,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 7503,
											"end": 7517,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7503,
											"end": 7517,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7338,
											"end": 7523,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7338,
											"end": 7523,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7338,
											"end": 7523,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7338,
											"end": 7523,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7338,
											"end": 7523,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7529,
											"end": 7877,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 7529,
											"end": 7877,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7569,
											"end": 7576,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7592,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 7610,
											"end": 7611,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7592,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 7592,
											"end": 7612,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7592,
											"end": 7612,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 7592,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7587,
											"end": 7612,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7587,
											"end": 7612,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7626,
											"end": 7646,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 7644,
											"end": 7645,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7626,
											"end": 7646,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 7626,
											"end": 7646,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7626,
											"end": 7646,
											"name": "tag",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 7626,
											"end": 7646,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7621,
											"end": 7646,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7621,
											"end": 7646,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7814,
											"end": 7815,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7746,
											"end": 7812,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7742,
											"end": 7816,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 7739,
											"end": 7740,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7736,
											"end": 7817,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7731,
											"end": 7732,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7724,
											"end": 7733,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7717,
											"end": 7734,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7713,
											"end": 7818,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7710,
											"end": 7841,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7710,
											"end": 7841,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 7710,
											"end": 7841,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7821,
											"end": 7839,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 7821,
											"end": 7839,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 7821,
											"end": 7839,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7821,
											"end": 7839,
											"name": "tag",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 7821,
											"end": 7839,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7710,
											"end": 7841,
											"name": "tag",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 7710,
											"end": 7841,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7869,
											"end": 7870,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7866,
											"end": 7867,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7862,
											"end": 7871,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 7851,
											"end": 7871,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7851,
											"end": 7871,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7529,
											"end": 7877,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7529,
											"end": 7877,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7529,
											"end": 7877,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7529,
											"end": 7877,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7529,
											"end": 7877,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7883,
											"end": 8074,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 7883,
											"end": 8074,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7923,
											"end": 7927,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7943,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 7961,
											"end": 7962,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7943,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 7943,
											"end": 7963,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7943,
											"end": 7963,
											"name": "tag",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 7943,
											"end": 7963,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7938,
											"end": 7963,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7938,
											"end": 7963,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7977,
											"end": 7997,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 7995,
											"end": 7996,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7977,
											"end": 7997,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 7977,
											"end": 7997,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7977,
											"end": 7997,
											"name": "tag",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 7977,
											"end": 7997,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7972,
											"end": 7997,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7972,
											"end": 7997,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8016,
											"end": 8017,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8013,
											"end": 8014,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8010,
											"end": 8018,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 8007,
											"end": 8041,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8007,
											"end": 8041,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 8007,
											"end": 8041,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8021,
											"end": 8039,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 8021,
											"end": 8039,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 8021,
											"end": 8039,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8021,
											"end": 8039,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 8021,
											"end": 8039,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8007,
											"end": 8041,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 8007,
											"end": 8041,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8066,
											"end": 8067,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8063,
											"end": 8064,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8059,
											"end": 8068,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8051,
											"end": 8068,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8051,
											"end": 8068,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7883,
											"end": 8074,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7883,
											"end": 8074,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7883,
											"end": 8074,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7883,
											"end": 8074,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7883,
											"end": 8074,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8080,
											"end": 8176,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 8080,
											"end": 8176,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8117,
											"end": 8124,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8146,
											"end": 8170,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 8164,
											"end": 8169,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8146,
											"end": 8170,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 8146,
											"end": 8170,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8146,
											"end": 8170,
											"name": "tag",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 8146,
											"end": 8170,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8135,
											"end": 8170,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8135,
											"end": 8170,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8080,
											"end": 8176,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8080,
											"end": 8176,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8080,
											"end": 8176,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8080,
											"end": 8176,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8182,
											"end": 8272,
											"name": "tag",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 8182,
											"end": 8272,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8216,
											"end": 8223,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8259,
											"end": 8264,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8252,
											"end": 8265,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8245,
											"end": 8266,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8234,
											"end": 8266,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8234,
											"end": 8266,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8182,
											"end": 8272,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8182,
											"end": 8272,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8182,
											"end": 8272,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8182,
											"end": 8272,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8278,
											"end": 8404,
											"name": "tag",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 8278,
											"end": 8404,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8315,
											"end": 8322,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8355,
											"end": 8397,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8348,
											"end": 8353,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8344,
											"end": 8398,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8333,
											"end": 8398,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8333,
											"end": 8398,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8278,
											"end": 8404,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8278,
											"end": 8404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8278,
											"end": 8404,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8278,
											"end": 8404,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8410,
											"end": 8487,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 8410,
											"end": 8487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8447,
											"end": 8454,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8476,
											"end": 8481,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8465,
											"end": 8481,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8465,
											"end": 8481,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8410,
											"end": 8487,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8410,
											"end": 8487,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8410,
											"end": 8487,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8410,
											"end": 8487,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8493,
											"end": 8627,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 8493,
											"end": 8627,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8551,
											"end": 8560,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8584,
											"end": 8621,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 8615,
											"end": 8620,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8584,
											"end": 8621,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 8584,
											"end": 8621,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8584,
											"end": 8621,
											"name": "tag",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 8584,
											"end": 8621,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8571,
											"end": 8621,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8571,
											"end": 8621,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8493,
											"end": 8627,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8493,
											"end": 8627,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8493,
											"end": 8627,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8493,
											"end": 8627,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8633,
											"end": 8759,
											"name": "tag",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 8633,
											"end": 8759,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8683,
											"end": 8692,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8716,
											"end": 8753,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 8747,
											"end": 8752,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8716,
											"end": 8753,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 8716,
											"end": 8753,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8716,
											"end": 8753,
											"name": "tag",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 8716,
											"end": 8753,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8703,
											"end": 8753,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8703,
											"end": 8753,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8633,
											"end": 8759,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8633,
											"end": 8759,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8633,
											"end": 8759,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8633,
											"end": 8759,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8765,
											"end": 8878,
											"name": "tag",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 8765,
											"end": 8878,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8815,
											"end": 8824,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8848,
											"end": 8872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 8866,
											"end": 8871,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8848,
											"end": 8872,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 8848,
											"end": 8872,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8848,
											"end": 8872,
											"name": "tag",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 8848,
											"end": 8872,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8835,
											"end": 8872,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8835,
											"end": 8872,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8765,
											"end": 8878,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8765,
											"end": 8878,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8765,
											"end": 8878,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8765,
											"end": 8878,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8884,
											"end": 9064,
											"name": "tag",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 8884,
											"end": 9064,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8932,
											"end": 9009,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8929,
											"end": 8930,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8922,
											"end": 9010,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9029,
											"end": 9033,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 9026,
											"end": 9027,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9019,
											"end": 9034,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9053,
											"end": 9057,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 9050,
											"end": 9051,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9043,
											"end": 9058,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9070,
											"end": 9250,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 9070,
											"end": 9250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9118,
											"end": 9195,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9115,
											"end": 9116,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9108,
											"end": 9196,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9215,
											"end": 9219,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 9212,
											"end": 9213,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9205,
											"end": 9220,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9239,
											"end": 9243,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 9236,
											"end": 9237,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9229,
											"end": 9244,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9379,
											"end": 9496,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 9379,
											"end": 9496,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9488,
											"end": 9489,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9485,
											"end": 9486,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9478,
											"end": 9490,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9502,
											"end": 9671,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 9502,
											"end": 9671,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9642,
											"end": 9663,
											"name": "PUSH",
											"source": 5,
											"value": "6C697175696469747920696E62616C616E636500000000000000000000000000"
										},
										{
											"begin": 9638,
											"end": 9639,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9630,
											"end": 9636,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9626,
											"end": 9640,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9619,
											"end": 9664,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9502,
											"end": 9671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9502,
											"end": 9671,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9677,
											"end": 9838,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 9677,
											"end": 9838,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9817,
											"end": 9830,
											"name": "PUSH",
											"source": 5,
											"value": "4E6F2072652D656E747279000000000000000000000000000000000000000000"
										},
										{
											"begin": 9813,
											"end": 9814,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9805,
											"end": 9811,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9801,
											"end": 9815,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9794,
											"end": 9831,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9677,
											"end": 9838,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9677,
											"end": 9838,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9844,
											"end": 10017,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 9844,
											"end": 10017,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9984,
											"end": 10005,
											"name": "PUSH",
											"source": 5,
											"value": "7472616E73666572206661696C65642E203A2800000000000000000000000000"
										},
										{
											"begin": 9980,
											"end": 9981,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9972,
											"end": 9978,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9968,
											"end": 9982,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9961,
											"end": 10006,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9844,
											"end": 10017,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9844,
											"end": 10017,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10027,
											"end": 10151,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 10027,
											"end": 10151,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10101,
											"end": 10122,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 10116,
											"end": 10121,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10101,
											"end": 10122,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 10101,
											"end": 10122,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10101,
											"end": 10122,
											"name": "tag",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 10101,
											"end": 10122,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10091,
											"end": 10123,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 10081,
											"end": 10141,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 10081,
											"end": 10141,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10137,
											"end": 10138,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10134,
											"end": 10135,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10127,
											"end": 10139,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10081,
											"end": 10141,
											"name": "tag",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 10081,
											"end": 10141,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10027,
											"end": 10151,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10027,
											"end": 10151,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10161,
											"end": 10291,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 10161,
											"end": 10291,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10238,
											"end": 10262,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 10256,
											"end": 10261,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10238,
											"end": 10262,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 10238,
											"end": 10262,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10238,
											"end": 10262,
											"name": "tag",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 10238,
											"end": 10262,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10231,
											"end": 10236,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10228,
											"end": 10263,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 10218,
											"end": 10281,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 10218,
											"end": 10281,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10277,
											"end": 10278,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10274,
											"end": 10275,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10267,
											"end": 10279,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10218,
											"end": 10281,
											"name": "tag",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 10218,
											"end": 10281,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10161,
											"end": 10291,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10161,
											"end": 10291,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"K()": "a932492f",
							"_ERC20TokenBalance()": "bc23ae5e",
							"contractEthBalance()": "5d58ce36",
							"estimateERC20TokenToProvide(uint256)": "ed7bf868",
							"estimateEthToProvide(uint256)": "240f3dea",
							"estimateSwapForERC20Token(uint256)": "79ed3562",
							"estimateSwapForEth(uint256)": "903875f7",
							"getMyLiquidityPositions()": "e0ba2000",
							"provideLiquidity(uint256)": "eb521a4c",
							"swapForERC20Token()": "29cbab3e",
							"swapForEth(uint256)": "c8ab8325",
							"withdrawLiquidity(uint256)": "0a861f2a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountERC20TokenDeposited\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountEthDeposited\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityPositionsIssued\",\"type\":\"uint256\"}],\"name\":\"LiquidityProvided\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountERC20TokenWithdrew\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountEthWithdrew\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityPositionsBurned\",\"type\":\"uint256\"}],\"name\":\"LiquidityWithdrew\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountERC20TokenWithdrew\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountEthDeposited\",\"type\":\"uint256\"}],\"name\":\"SwapForERC20Token\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountERC20TokenDeposited\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountEthWithdrew\",\"type\":\"uint256\"}],\"name\":\"SwapForEth\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"K\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_ERC20TokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractEthBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountEth\",\"type\":\"uint256\"}],\"name\":\"estimateERC20TokenToProvide\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountERC20\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountERC20Token\",\"type\":\"uint256\"}],\"name\":\"estimateEthToProvide\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountEth\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountEth\",\"type\":\"uint256\"}],\"name\":\"estimateSwapForERC20Token\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ERC20TokenToSend\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountERC20Token\",\"type\":\"uint256\"}],\"name\":\"estimateSwapForEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ethToSend\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyLiquidityPositions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountERC20Token\",\"type\":\"uint256\"}],\"name\":\"provideLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapForERC20Token\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ERC20TokenToSend\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountERC20Token\",\"type\":\"uint256\"}],\"name\":\"swapForEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ethToSend\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_liquidityPositionsToBurn\",\"type\":\"uint256\"}],\"name\":\"withdrawLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountEthToSend\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountERC20ToSend\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Exchange.sol\":\"Exchange\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Exchange.sol\":{\"keccak256\":\"0x829fa13cab13a32cae41fc3aa8c54651c7bb8d2f8b949761f310c38bafb9fef3\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://fb51206e18b7eeb7b213ba398bec1696cebae4c0df0c8c527feabf8879860c54\",\"dweb:/ipfs/QmV4qCK8ujk5t9iyfmjy7M5jNxHT77E4nyVEfowoe6gPJs\"]},\"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "Exchange.sol:Exchange",
								"label": "ierc20Token",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)1280"
							},
							{
								"astId": 8,
								"contract": "Exchange.sol:Exchange",
								"label": "contractERC20TokenBalance",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 11,
								"contract": "Exchange.sol:Exchange",
								"label": "contractEthBalance",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 14,
								"contract": "Exchange.sol:Exchange",
								"label": "totalLiquidityPositions",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 17,
								"contract": "Exchange.sol:Exchange",
								"label": "K",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 21,
								"contract": "Exchange.sol:Exchange",
								"label": "liquidityPositions",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 40,
								"contract": "Exchange.sol:Exchange",
								"label": "locked",
								"offset": 0,
								"slot": "6",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)1280": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2054:2059  name_ */\n  dup2\n    /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2046:2051  _name */\n  0x03\n    /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2079:2086  symbol_ */\n  dup1\n    /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  0x04\n    /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_9)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_12)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_12)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_12\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\ntag_12:\n  pop\n  swap1\n  pop\n  tag_17\n  swap2\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_20\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_19)\ntag_20:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:428   */\ntag_22:\n    /* \"#utility.yul\":96:101   */\n  0x00\n    /* \"#utility.yul\":121:187   */\n  tag_24\n    /* \"#utility.yul\":137:186   */\n  tag_25\n    /* \"#utility.yul\":179:185   */\n  dup5\n    /* \"#utility.yul\":137:186   */\n  tag_26\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":121:187   */\n  tag_27\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":112:187   */\n  swap1\n  pop\n    /* \"#utility.yul\":210:216   */\n  dup3\n    /* \"#utility.yul\":203:208   */\n  dup2\n    /* \"#utility.yul\":196:217   */\n  mstore\n    /* \"#utility.yul\":248:252   */\n  0x20\n    /* \"#utility.yul\":241:246   */\n  dup2\n    /* \"#utility.yul\":237:253   */\n  add\n    /* \"#utility.yul\":286:289   */\n  dup5\n    /* \"#utility.yul\":277:283   */\n  dup5\n    /* \"#utility.yul\":272:275   */\n  dup5\n    /* \"#utility.yul\":268:284   */\n  add\n    /* \"#utility.yul\":265:290   */\n  gt\n    /* \"#utility.yul\":262:374   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":293:372   */\n  tag_29\n  tag_30\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":262:374   */\ntag_28:\n    /* \"#utility.yul\":383:422   */\n  tag_31\n    /* \"#utility.yul\":415:421   */\n  dup5\n    /* \"#utility.yul\":410:413   */\n  dup3\n    /* \"#utility.yul\":405:408   */\n  dup6\n    /* \"#utility.yul\":383:422   */\n  tag_32\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":102:428   */\n  pop\n    /* \"#utility.yul\":7:428   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":448:803   */\ntag_33:\n    /* \"#utility.yul\":515:520   */\n  0x00\n    /* \"#utility.yul\":564:567   */\n  dup3\n    /* \"#utility.yul\":557:561   */\n  0x1f\n    /* \"#utility.yul\":549:555   */\n  dup4\n    /* \"#utility.yul\":545:562   */\n  add\n    /* \"#utility.yul\":541:568   */\n  slt\n    /* \"#utility.yul\":531:653   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":572:651   */\n  tag_36\n  tag_37\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":531:653   */\ntag_35:\n    /* \"#utility.yul\":682:688   */\n  dup2\n    /* \"#utility.yul\":676:689   */\n  mload\n    /* \"#utility.yul\":707:797   */\n  tag_38\n    /* \"#utility.yul\":793:796   */\n  dup5\n    /* \"#utility.yul\":785:791   */\n  dup3\n    /* \"#utility.yul\":778:782   */\n  0x20\n    /* \"#utility.yul\":770:776   */\n  dup7\n    /* \"#utility.yul\":766:783   */\n  add\n    /* \"#utility.yul\":707:797   */\n  tag_22\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":698:797   */\n  swap2\n  pop\n    /* \"#utility.yul\":521:803   */\n  pop\n    /* \"#utility.yul\":448:803   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":809:1662   */\ntag_3:\n    /* \"#utility.yul\":908:914   */\n  0x00\n    /* \"#utility.yul\":916:922   */\n  dup1\n    /* \"#utility.yul\":965:967   */\n  0x40\n    /* \"#utility.yul\":953:962   */\n  dup4\n    /* \"#utility.yul\":944:951   */\n  dup6\n    /* \"#utility.yul\":940:963   */\n  sub\n    /* \"#utility.yul\":936:968   */\n  slt\n    /* \"#utility.yul\":933:1052   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":971:1050   */\n  tag_41\n  tag_42\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":933:1052   */\ntag_40:\n    /* \"#utility.yul\":1112:1113   */\n  0x00\n    /* \"#utility.yul\":1101:1110   */\n  dup4\n    /* \"#utility.yul\":1097:1114   */\n  add\n    /* \"#utility.yul\":1091:1115   */\n  mload\n    /* \"#utility.yul\":1142:1160   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1134:1140   */\n  dup2\n    /* \"#utility.yul\":1131:1161   */\n  gt\n    /* \"#utility.yul\":1128:1245   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1164:1243   */\n  tag_44\n  tag_45\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1128:1245   */\ntag_43:\n    /* \"#utility.yul\":1269:1343   */\n  tag_46\n    /* \"#utility.yul\":1335:1342   */\n  dup6\n    /* \"#utility.yul\":1326:1332   */\n  dup3\n    /* \"#utility.yul\":1315:1324   */\n  dup7\n    /* \"#utility.yul\":1311:1333   */\n  add\n    /* \"#utility.yul\":1269:1343   */\n  tag_33\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1259:1343   */\n  swap3\n  pop\n    /* \"#utility.yul\":1062:1353   */\n  pop\n    /* \"#utility.yul\":1413:1415   */\n  0x20\n    /* \"#utility.yul\":1402:1411   */\n  dup4\n    /* \"#utility.yul\":1398:1416   */\n  add\n    /* \"#utility.yul\":1392:1417   */\n  mload\n    /* \"#utility.yul\":1444:1462   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1436:1442   */\n  dup2\n    /* \"#utility.yul\":1433:1463   */\n  gt\n    /* \"#utility.yul\":1430:1547   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":1466:1545   */\n  tag_48\n  tag_45\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1430:1547   */\ntag_47:\n    /* \"#utility.yul\":1571:1645   */\n  tag_49\n    /* \"#utility.yul\":1637:1644   */\n  dup6\n    /* \"#utility.yul\":1628:1634   */\n  dup3\n    /* \"#utility.yul\":1617:1626   */\n  dup7\n    /* \"#utility.yul\":1613:1635   */\n  add\n    /* \"#utility.yul\":1571:1645   */\n  tag_33\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1561:1645   */\n  swap2\n  pop\n    /* \"#utility.yul\":1363:1655   */\n  pop\n    /* \"#utility.yul\":809:1662   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1668:1797   */\ntag_27:\n    /* \"#utility.yul\":1702:1708   */\n  0x00\n    /* \"#utility.yul\":1729:1749   */\n  tag_51\n  tag_52\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1719:1749   */\n  swap1\n  pop\n    /* \"#utility.yul\":1758:1791   */\n  tag_53\n    /* \"#utility.yul\":1786:1790   */\n  dup3\n    /* \"#utility.yul\":1778:1784   */\n  dup3\n    /* \"#utility.yul\":1758:1791   */\n  tag_54\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1668:1797   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1803:1878   */\ntag_52:\n    /* \"#utility.yul\":1836:1842   */\n  0x00\n    /* \"#utility.yul\":1869:1871   */\n  0x40\n    /* \"#utility.yul\":1863:1872   */\n  mload\n    /* \"#utility.yul\":1853:1872   */\n  swap1\n  pop\n    /* \"#utility.yul\":1803:1878   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":1884:2192   */\ntag_26:\n    /* \"#utility.yul\":1946:1950   */\n  0x00\n    /* \"#utility.yul\":2036:2054   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2028:2034   */\n  dup3\n    /* \"#utility.yul\":2025:2055   */\n  gt\n    /* \"#utility.yul\":2022:2078   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":2058:2076   */\n  tag_58\n  tag_59\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2022:2078   */\ntag_57:\n    /* \"#utility.yul\":2096:2125   */\n  tag_60\n    /* \"#utility.yul\":2118:2124   */\n  dup3\n    /* \"#utility.yul\":2096:2125   */\n  tag_61\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":2088:2125   */\n  swap1\n  pop\n    /* \"#utility.yul\":2180:2184   */\n  0x20\n    /* \"#utility.yul\":2174:2178   */\n  dup2\n    /* \"#utility.yul\":2170:2185   */\n  add\n    /* \"#utility.yul\":2162:2185   */\n  swap1\n  pop\n    /* \"#utility.yul\":1884:2192   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2198:2505   */\ntag_32:\n    /* \"#utility.yul\":2266:2267   */\n  0x00\n    /* \"#utility.yul\":2276:2389   */\ntag_63:\n    /* \"#utility.yul\":2290:2296   */\n  dup4\n    /* \"#utility.yul\":2287:2288   */\n  dup2\n    /* \"#utility.yul\":2284:2297   */\n  lt\n    /* \"#utility.yul\":2276:2389   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2375:2376   */\n  dup1\n    /* \"#utility.yul\":2370:2373   */\n  dup3\n    /* \"#utility.yul\":2366:2377   */\n  add\n    /* \"#utility.yul\":2360:2378   */\n  mload\n    /* \"#utility.yul\":2356:2357   */\n  dup2\n    /* \"#utility.yul\":2351:2354   */\n  dup5\n    /* \"#utility.yul\":2347:2358   */\n  add\n    /* \"#utility.yul\":2340:2379   */\n  mstore\n    /* \"#utility.yul\":2312:2314   */\n  0x20\n    /* \"#utility.yul\":2309:2310   */\n  dup2\n    /* \"#utility.yul\":2305:2315   */\n  add\n    /* \"#utility.yul\":2300:2315   */\n  swap1\n  pop\n    /* \"#utility.yul\":2276:2389   */\n  jump(tag_63)\ntag_65:\n    /* \"#utility.yul\":2407:2413   */\n  dup4\n    /* \"#utility.yul\":2404:2405   */\n  dup2\n    /* \"#utility.yul\":2401:2414   */\n  gt\n    /* \"#utility.yul\":2398:2499   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":2487:2488   */\n  0x00\n    /* \"#utility.yul\":2478:2484   */\n  dup5\n    /* \"#utility.yul\":2473:2476   */\n  dup5\n    /* \"#utility.yul\":2469:2485   */\n  add\n    /* \"#utility.yul\":2462:2489   */\n  mstore\n    /* \"#utility.yul\":2398:2499   */\ntag_66:\n    /* \"#utility.yul\":2247:2505   */\n  pop\n    /* \"#utility.yul\":2198:2505   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2511:2831   */\ntag_11:\n    /* \"#utility.yul\":2555:2561   */\n  0x00\n    /* \"#utility.yul\":2592:2593   */\n  0x02\n    /* \"#utility.yul\":2586:2590   */\n  dup3\n    /* \"#utility.yul\":2582:2594   */\n  div\n    /* \"#utility.yul\":2572:2594   */\n  swap1\n  pop\n    /* \"#utility.yul\":2639:2640   */\n  0x01\n    /* \"#utility.yul\":2633:2637   */\n  dup3\n    /* \"#utility.yul\":2629:2641   */\n  and\n    /* \"#utility.yul\":2660:2678   */\n  dup1\n    /* \"#utility.yul\":2650:2731   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2716:2720   */\n  0x7f\n    /* \"#utility.yul\":2708:2714   */\n  dup3\n    /* \"#utility.yul\":2704:2721   */\n  and\n    /* \"#utility.yul\":2694:2721   */\n  swap2\n  pop\n    /* \"#utility.yul\":2650:2731   */\ntag_68:\n    /* \"#utility.yul\":2778:2780   */\n  0x20\n    /* \"#utility.yul\":2770:2776   */\n  dup3\n    /* \"#utility.yul\":2767:2781   */\n  lt\n    /* \"#utility.yul\":2747:2765   */\n  dup2\n    /* \"#utility.yul\":2744:2782   */\n  eq\n    /* \"#utility.yul\":2741:2825   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":2797:2815   */\n  tag_70\n  tag_71\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2741:2825   */\ntag_69:\n    /* \"#utility.yul\":2562:2831   */\n  pop\n    /* \"#utility.yul\":2511:2831   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2837:3118   */\ntag_54:\n    /* \"#utility.yul\":2920:2947   */\n  tag_73\n    /* \"#utility.yul\":2942:2946   */\n  dup3\n    /* \"#utility.yul\":2920:2947   */\n  tag_61\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2912:2918   */\n  dup2\n    /* \"#utility.yul\":2908:2948   */\n  add\n    /* \"#utility.yul\":3050:3056   */\n  dup2\n    /* \"#utility.yul\":3038:3048   */\n  dup2\n    /* \"#utility.yul\":3035:3057   */\n  lt\n    /* \"#utility.yul\":3014:3032   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3002:3012   */\n  dup3\n    /* \"#utility.yul\":2999:3033   */\n  gt\n    /* \"#utility.yul\":2996:3058   */\n  or\n    /* \"#utility.yul\":2993:3081   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":3061:3079   */\n  tag_75\n  tag_59\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2993:3081   */\ntag_74:\n    /* \"#utility.yul\":3101:3111   */\n  dup1\n    /* \"#utility.yul\":3097:3099   */\n  0x40\n    /* \"#utility.yul\":3090:3112   */\n  mstore\n    /* \"#utility.yul\":2880:3118   */\n  pop\n    /* \"#utility.yul\":2837:3118   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3124:3304   */\ntag_71:\n    /* \"#utility.yul\":3172:3249   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3169:3170   */\n  0x00\n    /* \"#utility.yul\":3162:3250   */\n  mstore\n    /* \"#utility.yul\":3269:3273   */\n  0x22\n    /* \"#utility.yul\":3266:3267   */\n  0x04\n    /* \"#utility.yul\":3259:3274   */\n  mstore\n    /* \"#utility.yul\":3293:3297   */\n  0x24\n    /* \"#utility.yul\":3290:3291   */\n  0x00\n    /* \"#utility.yul\":3283:3298   */\n  revert\n    /* \"#utility.yul\":3310:3490   */\ntag_59:\n    /* \"#utility.yul\":3358:3435   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3355:3356   */\n  0x00\n    /* \"#utility.yul\":3348:3436   */\n  mstore\n    /* \"#utility.yul\":3455:3459   */\n  0x41\n    /* \"#utility.yul\":3452:3453   */\n  0x04\n    /* \"#utility.yul\":3445:3460   */\n  mstore\n    /* \"#utility.yul\":3479:3483   */\n  0x24\n    /* \"#utility.yul\":3476:3477   */\n  0x00\n    /* \"#utility.yul\":3469:3484   */\n  revert\n    /* \"#utility.yul\":3496:3613   */\ntag_37:\n    /* \"#utility.yul\":3605:3606   */\n  0x00\n    /* \"#utility.yul\":3602:3603   */\n  dup1\n    /* \"#utility.yul\":3595:3607   */\n  revert\n    /* \"#utility.yul\":3619:3736   */\ntag_30:\n    /* \"#utility.yul\":3728:3729   */\n  0x00\n    /* \"#utility.yul\":3725:3726   */\n  dup1\n    /* \"#utility.yul\":3718:3730   */\n  revert\n    /* \"#utility.yul\":3742:3859   */\ntag_45:\n    /* \"#utility.yul\":3851:3852   */\n  0x00\n    /* \"#utility.yul\":3848:3849   */\n  dup1\n    /* \"#utility.yul\":3841:3853   */\n  revert\n    /* \"#utility.yul\":3865:3982   */\ntag_42:\n    /* \"#utility.yul\":3974:3975   */\n  0x00\n    /* \"#utility.yul\":3971:3972   */\n  dup1\n    /* \"#utility.yul\":3964:3976   */\n  revert\n    /* \"#utility.yul\":3988:4090   */\ntag_61:\n    /* \"#utility.yul\":4029:4035   */\n  0x00\n    /* \"#utility.yul\":4080:4082   */\n  0x1f\n    /* \"#utility.yul\":4076:4083   */\n  not\n    /* \"#utility.yul\":4071:4073   */\n  0x1f\n    /* \"#utility.yul\":4064:4069   */\n  dup4\n    /* \"#utility.yul\":4060:4074   */\n  add\n    /* \"#utility.yul\":4056:4084   */\n  and\n    /* \"#utility.yul\":4046:4084   */\n  swap1\n  pop\n    /* \"#utility.yul\":3988:4090   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2212:2225  string memory */\n      0x60\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2244:2249  _name */\n      0x03\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2237:2249  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4527:4531  bool */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4543:4556  address owner */\n      dup1\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4559:4571  _msgSender() */\n      tag_71\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4559:4569  _msgSender */\n      tag_72\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4559:4571  _msgSender() */\n      jump\t// in\n    tag_71:\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4543:4571  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      tag_73\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4590:4595  owner */\n      dup2\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4597:4604  spender */\n      dup6\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4606:4612  amount */\n      dup6\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4581:4589  _approve */\n      tag_74\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4630:4634  true */\n      0x01\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4623:4634  return true */\n      swap2\n      pop\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_26:\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3316:3323  uint256 */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3342:3354  _totalSupply */\n      sload(0x02)\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3335:3354  return _totalSupply */\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_32:\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5300:5304  bool */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5316:5331  address spender */\n      dup1\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5334:5346  _msgSender() */\n      tag_77\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5334:5344  _msgSender */\n      tag_72\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5334:5346  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5316:5346  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5372:5376  from */\n      dup6\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5378:5385  spender */\n      dup3\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5387:5393  amount */\n      dup6\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5356:5371  _spendAllowance */\n      tag_79\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      tag_80\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5414:5418  from */\n      dup6\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5420:5422  to */\n      dup6\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5424:5430  amount */\n      dup6\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5404:5413  _transfer */\n      tag_81\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5448:5452  true */\n      0x01\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5441:5452  return true */\n      swap2\n      pop\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n    tag_35:\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3162:3167  uint8 */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3186:3188  18 */\n      0x12\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3179:3188  return 18 */\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5942:5946  bool */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5958:5971  address owner */\n      dup1\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5974:5986  _msgSender() */\n      tag_84\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5974:5984  _msgSender */\n      tag_72\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5974:5986  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5958:5986  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_85\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6005:6010  owner */\n      dup2\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup6\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6049:6059  addedValue */\n      dup6\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      tag_86\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6031:6036  owner */\n      dup6\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6038:6045  spender */\n      dup10\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6021:6030  allowance */\n      tag_61\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6021:6059  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5996:6004  _approve */\n      tag_74\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n    tag_85:\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6077:6081  true */\n      0x01\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6070:6081  return true */\n      swap2\n      pop\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_45:\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3493:3500  uint256 */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3519:3528  _balances */\n      dup1\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3529:3536  account */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3512:3537  return _balances[account] */\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2425:2438  string memory */\n      0x60\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2457:2464  _symbol */\n      0x04\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2450:2464  return _symbol */\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_65\n      jump\t// in\n    tag_91:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_92\n      swap1\n      tag_65\n      jump\t// in\n    tag_92:\n      dup1\n      iszero\n      tag_93\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_94\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_93)\n    tag_94:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_95:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_95\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6684:6697  address owner */\n      dup1\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6700:6712  _msgSender() */\n      tag_97\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6700:6710  _msgSender */\n      tag_72\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6700:6712  _msgSender() */\n      jump\t// in\n    tag_97:\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6684:6712  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6722:6746  uint256 currentAllowance */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      tag_98\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6759:6764  owner */\n      dup3\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6766:6773  spender */\n      dup7\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6749:6758  allowance */\n      tag_61\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6722:6774  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6812:6827  subtractedValue */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6792:6808  currentAllowance */\n      dup2\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6792:6827  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_102\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6912:6917  owner */\n      dup3\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6919:6926  spender */\n      dup7\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6947:6962  subtractedValue */\n      dup7\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6928:6944  currentAllowance */\n      dup5\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6928:6962  currentAllowance - subtractedValue */\n      sub\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6903:6911  _approve */\n      tag_74\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_102:\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6991:6995  true */\n      0x01\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6984:6995  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3819:3823  bool */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3835:3848  address owner */\n      dup1\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3851:3863  _msgSender() */\n      tag_104\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3851:3861  _msgSender */\n      tag_72\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3851:3863  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3835:3863  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      tag_105\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3883:3888  owner */\n      dup2\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3890:3892  to */\n      dup6\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3894:3900  amount */\n      dup6\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3873:3882  _transfer */\n      tag_81\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      jump\t// in\n    tag_105:\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3918:3922  true */\n      0x01\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3911:3922  return true */\n      swap2\n      pop\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4076:4083  uint256 */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4102:4113  _allowances */\n      0x01\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4114:4119  owner */\n      dup5\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4102:4129  _allowances[owner][spender] */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4121:4128  spender */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4102:4129  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":4095:4129  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_72:\n        /* \"openzeppelin-contracts/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"openzeppelin-contracts/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"openzeppelin-contracts/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_74:\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10575:10576  0 */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10558:10577  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10558:10563  owner */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10558:10577  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10655:10656  0 */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10636:10657  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10636:10643  spender */\n      dup3\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10636:10657  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10737:10743  amount */\n      dup1\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10707:10718  _allowances */\n      0x01\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10719:10724  owner */\n      dup6\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10707:10734  _allowances[owner][spender] */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10726:10733  spender */\n      dup5\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10707:10734  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10707:10743  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10774:10781  spender */\n      dup2\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10767:10772  owner */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10783:10789  amount */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_79:\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11178:11202  uint256 currentAllowance */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      tag_117\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11215:11220  owner */\n      dup5\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11222:11229  spender */\n      dup5\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11205:11214  allowance */\n      tag_61\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11178:11230  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11264:11281  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11244:11260  currentAllowance */\n      dup2\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11244:11281  currentAllowance != type(uint256).max */\n      eq\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11240:11483  if (currentAllowance != type(uint256).max) {... */\n      tag_118\n      jumpi\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11325:11331  amount */\n      dup2\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11305:11321  currentAllowance */\n      dup2\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11305:11331  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11416:11421  owner */\n      dup5\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11423:11430  spender */\n      dup5\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11451:11457  amount */\n      dup5\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11432:11448  currentAllowance */\n      dup5\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11432:11457  currentAllowance - amount */\n      sub\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11407:11415  _approve */\n      tag_74\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11240:11483  if (currentAllowance != type(uint256).max) {... */\n    tag_118:\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11168:11489  {... */\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7456:8244  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_81:\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7568:7569  0 */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7552:7570  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7552:7556  from */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7552:7570  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7644:7645  0 */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7630:7646  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7630:7632  to */\n      dup3\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7630:7646  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7697:7735  _beforeTokenTransfer(from, to, amount) */\n      tag_130\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7718:7722  from */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7724:7726  to */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7728:7734  amount */\n      dup4\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7697:7717  _beforeTokenTransfer */\n      tag_131\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7697:7735  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_130:\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7746:7765  uint256 fromBalance */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7768:7777  _balances */\n      dup1\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7778:7782  from */\n      dup6\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7746:7783  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7816:7822  amount */\n      dup2\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7801:7812  fromBalance */\n      dup2\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7801:7822  fromBalance >= amount */\n      lt\n      iszero\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7931:7937  amount */\n      dup2\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7917:7928  fromBalance */\n      dup2\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7917:7937  fromBalance - amount */\n      sub\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7899:7908  _balances */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup1\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7909:7913  from */\n      dup7\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7899:7937  _balances[from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8131:8137  amount */\n      dup2\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8114:8123  _balances */\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      dup1\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8124:8126  to */\n      dup6\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8114:8137  _balances[to] += amount */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8178:8180  to */\n      dup3\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8172:8176  from */\n      dup5\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8182:8188  amount */\n      dup5\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_135\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8200:8237  _afterTokenTransfer(from, to, amount) */\n      tag_136\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8220:8224  from */\n      dup5\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8226:8228  to */\n      dup5\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8230:8236  amount */\n      dup5\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8200:8219  _afterTokenTransfer */\n      tag_137\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":8200:8237  _afterTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_136:\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7534:8244  {... */\n      pop\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":7456:8244  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":12073:12164  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n    tag_131:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":12752:12842  function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n    tag_137:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_141:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_143\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_144\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_145:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_147\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_148\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":152:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:626   */\n    tag_44:\n        /* \"#utility.yul\":356:362   */\n      0x00\n        /* \"#utility.yul\":405:407   */\n      0x20\n        /* \"#utility.yul\":393:402   */\n      dup3\n        /* \"#utility.yul\":384:391   */\n      dup5\n        /* \"#utility.yul\":380:403   */\n      sub\n        /* \"#utility.yul\":376:408   */\n      slt\n        /* \"#utility.yul\":373:492   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":411:490   */\n      tag_151\n      tag_152\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":373:492   */\n    tag_150:\n        /* \"#utility.yul\":531:532   */\n      0x00\n        /* \"#utility.yul\":556:609   */\n      tag_153\n        /* \"#utility.yul\":601:608   */\n      dup5\n        /* \"#utility.yul\":592:598   */\n      dup3\n        /* \"#utility.yul\":581:590   */\n      dup6\n        /* \"#utility.yul\":577:599   */\n      add\n        /* \"#utility.yul\":556:609   */\n      tag_141\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":546:609   */\n      swap2\n      pop\n        /* \"#utility.yul\":502:619   */\n      pop\n        /* \"#utility.yul\":297:626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":632:1106   */\n    tag_60:\n        /* \"#utility.yul\":700:706   */\n      0x00\n        /* \"#utility.yul\":708:714   */\n      dup1\n        /* \"#utility.yul\":757:759   */\n      0x40\n        /* \"#utility.yul\":745:754   */\n      dup4\n        /* \"#utility.yul\":736:743   */\n      dup6\n        /* \"#utility.yul\":732:755   */\n      sub\n        /* \"#utility.yul\":728:760   */\n      slt\n        /* \"#utility.yul\":725:844   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":763:842   */\n      tag_156\n      tag_152\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":725:844   */\n    tag_155:\n        /* \"#utility.yul\":883:884   */\n      0x00\n        /* \"#utility.yul\":908:961   */\n      tag_157\n        /* \"#utility.yul\":953:960   */\n      dup6\n        /* \"#utility.yul\":944:950   */\n      dup3\n        /* \"#utility.yul\":933:942   */\n      dup7\n        /* \"#utility.yul\":929:951   */\n      add\n        /* \"#utility.yul\":908:961   */\n      tag_141\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":898:961   */\n      swap3\n      pop\n        /* \"#utility.yul\":854:971   */\n      pop\n        /* \"#utility.yul\":1010:1012   */\n      0x20\n        /* \"#utility.yul\":1036:1089   */\n      tag_158\n        /* \"#utility.yul\":1081:1088   */\n      dup6\n        /* \"#utility.yul\":1072:1078   */\n      dup3\n        /* \"#utility.yul\":1061:1070   */\n      dup7\n        /* \"#utility.yul\":1057:1079   */\n      add\n        /* \"#utility.yul\":1036:1089   */\n      tag_141\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1026:1089   */\n      swap2\n      pop\n        /* \"#utility.yul\":981:1099   */\n      pop\n        /* \"#utility.yul\":632:1106   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1112:1731   */\n    tag_31:\n        /* \"#utility.yul\":1189:1195   */\n      0x00\n        /* \"#utility.yul\":1197:1203   */\n      dup1\n        /* \"#utility.yul\":1205:1211   */\n      0x00\n        /* \"#utility.yul\":1254:1256   */\n      0x60\n        /* \"#utility.yul\":1242:1251   */\n      dup5\n        /* \"#utility.yul\":1233:1240   */\n      dup7\n        /* \"#utility.yul\":1229:1252   */\n      sub\n        /* \"#utility.yul\":1225:1257   */\n      slt\n        /* \"#utility.yul\":1222:1341   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":1260:1339   */\n      tag_161\n      tag_152\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":1222:1341   */\n    tag_160:\n        /* \"#utility.yul\":1380:1381   */\n      0x00\n        /* \"#utility.yul\":1405:1458   */\n      tag_162\n        /* \"#utility.yul\":1450:1457   */\n      dup7\n        /* \"#utility.yul\":1441:1447   */\n      dup3\n        /* \"#utility.yul\":1430:1439   */\n      dup8\n        /* \"#utility.yul\":1426:1448   */\n      add\n        /* \"#utility.yul\":1405:1458   */\n      tag_141\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":1395:1458   */\n      swap4\n      pop\n        /* \"#utility.yul\":1351:1468   */\n      pop\n        /* \"#utility.yul\":1507:1509   */\n      0x20\n        /* \"#utility.yul\":1533:1586   */\n      tag_163\n        /* \"#utility.yul\":1578:1585   */\n      dup7\n        /* \"#utility.yul\":1569:1575   */\n      dup3\n        /* \"#utility.yul\":1558:1567   */\n      dup8\n        /* \"#utility.yul\":1554:1576   */\n      add\n        /* \"#utility.yul\":1533:1586   */\n      tag_141\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":1523:1586   */\n      swap3\n      pop\n        /* \"#utility.yul\":1478:1596   */\n      pop\n        /* \"#utility.yul\":1635:1637   */\n      0x40\n        /* \"#utility.yul\":1661:1714   */\n      tag_164\n        /* \"#utility.yul\":1706:1713   */\n      dup7\n        /* \"#utility.yul\":1697:1703   */\n      dup3\n        /* \"#utility.yul\":1686:1695   */\n      dup8\n        /* \"#utility.yul\":1682:1704   */\n      add\n        /* \"#utility.yul\":1661:1714   */\n      tag_145\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":1651:1714   */\n      swap2\n      pop\n        /* \"#utility.yul\":1606:1724   */\n      pop\n        /* \"#utility.yul\":1112:1731   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1737:2211   */\n    tag_21:\n        /* \"#utility.yul\":1805:1811   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup1\n        /* \"#utility.yul\":1862:1864   */\n      0x40\n        /* \"#utility.yul\":1850:1859   */\n      dup4\n        /* \"#utility.yul\":1841:1848   */\n      dup6\n        /* \"#utility.yul\":1837:1860   */\n      sub\n        /* \"#utility.yul\":1833:1865   */\n      slt\n        /* \"#utility.yul\":1830:1949   */\n      iszero\n      tag_166\n      jumpi\n        /* \"#utility.yul\":1868:1947   */\n      tag_167\n      tag_152\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":1830:1949   */\n    tag_166:\n        /* \"#utility.yul\":1988:1989   */\n      0x00\n        /* \"#utility.yul\":2013:2066   */\n      tag_168\n        /* \"#utility.yul\":2058:2065   */\n      dup6\n        /* \"#utility.yul\":2049:2055   */\n      dup3\n        /* \"#utility.yul\":2038:2047   */\n      dup7\n        /* \"#utility.yul\":2034:2056   */\n      add\n        /* \"#utility.yul\":2013:2066   */\n      tag_141\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":2003:2066   */\n      swap3\n      pop\n        /* \"#utility.yul\":1959:2076   */\n      pop\n        /* \"#utility.yul\":2115:2117   */\n      0x20\n        /* \"#utility.yul\":2141:2194   */\n      tag_169\n        /* \"#utility.yul\":2186:2193   */\n      dup6\n        /* \"#utility.yul\":2177:2183   */\n      dup3\n        /* \"#utility.yul\":2166:2175   */\n      dup7\n        /* \"#utility.yul\":2162:2184   */\n      add\n        /* \"#utility.yul\":2141:2194   */\n      tag_145\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":2131:2194   */\n      swap2\n      pop\n        /* \"#utility.yul\":2086:2204   */\n      pop\n        /* \"#utility.yul\":1737:2211   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2217:2326   */\n    tag_170:\n        /* \"#utility.yul\":2298:2319   */\n      tag_172\n        /* \"#utility.yul\":2313:2318   */\n      dup2\n        /* \"#utility.yul\":2298:2319   */\n      tag_173\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":2293:2296   */\n      dup3\n        /* \"#utility.yul\":2286:2320   */\n      mstore\n        /* \"#utility.yul\":2217:2326   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2332:2696   */\n    tag_174:\n        /* \"#utility.yul\":2420:2423   */\n      0x00\n        /* \"#utility.yul\":2448:2487   */\n      tag_176\n        /* \"#utility.yul\":2481:2486   */\n      dup3\n        /* \"#utility.yul\":2448:2487   */\n      tag_177\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":2503:2574   */\n      tag_178\n        /* \"#utility.yul\":2567:2573   */\n      dup2\n        /* \"#utility.yul\":2562:2565   */\n      dup6\n        /* \"#utility.yul\":2503:2574   */\n      tag_179\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":2496:2574   */\n      swap4\n      pop\n        /* \"#utility.yul\":2583:2635   */\n      tag_180\n        /* \"#utility.yul\":2628:2634   */\n      dup2\n        /* \"#utility.yul\":2623:2626   */\n      dup6\n        /* \"#utility.yul\":2616:2620   */\n      0x20\n        /* \"#utility.yul\":2609:2614   */\n      dup7\n        /* \"#utility.yul\":2605:2621   */\n      add\n        /* \"#utility.yul\":2583:2635   */\n      tag_181\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":2660:2689   */\n      tag_182\n        /* \"#utility.yul\":2682:2688   */\n      dup2\n        /* \"#utility.yul\":2660:2689   */\n      tag_183\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":2655:2658   */\n      dup5\n        /* \"#utility.yul\":2651:2690   */\n      add\n        /* \"#utility.yul\":2644:2690   */\n      swap2\n      pop\n        /* \"#utility.yul\":2424:2696   */\n      pop\n        /* \"#utility.yul\":2332:2696   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2702:3068   */\n    tag_184:\n        /* \"#utility.yul\":2844:2847   */\n      0x00\n        /* \"#utility.yul\":2865:2932   */\n      tag_186\n        /* \"#utility.yul\":2929:2931   */\n      0x23\n        /* \"#utility.yul\":2924:2927   */\n      dup4\n        /* \"#utility.yul\":2865:2932   */\n      tag_179\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":2858:2932   */\n      swap2\n      pop\n        /* \"#utility.yul\":2941:3034   */\n      tag_187\n        /* \"#utility.yul\":3030:3033   */\n      dup3\n        /* \"#utility.yul\":2941:3034   */\n      tag_188\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":3059:3061   */\n      0x40\n        /* \"#utility.yul\":3054:3057   */\n      dup3\n        /* \"#utility.yul\":3050:3062   */\n      add\n        /* \"#utility.yul\":3043:3062   */\n      swap1\n      pop\n        /* \"#utility.yul\":2702:3068   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3074:3440   */\n    tag_189:\n        /* \"#utility.yul\":3216:3219   */\n      0x00\n        /* \"#utility.yul\":3237:3304   */\n      tag_191\n        /* \"#utility.yul\":3301:3303   */\n      0x22\n        /* \"#utility.yul\":3296:3299   */\n      dup4\n        /* \"#utility.yul\":3237:3304   */\n      tag_179\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":3230:3304   */\n      swap2\n      pop\n        /* \"#utility.yul\":3313:3406   */\n      tag_192\n        /* \"#utility.yul\":3402:3405   */\n      dup3\n        /* \"#utility.yul\":3313:3406   */\n      tag_193\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":3431:3433   */\n      0x40\n        /* \"#utility.yul\":3426:3429   */\n      dup3\n        /* \"#utility.yul\":3422:3434   */\n      add\n        /* \"#utility.yul\":3415:3434   */\n      swap1\n      pop\n        /* \"#utility.yul\":3074:3440   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3812   */\n    tag_194:\n        /* \"#utility.yul\":3588:3591   */\n      0x00\n        /* \"#utility.yul\":3609:3676   */\n      tag_196\n        /* \"#utility.yul\":3673:3675   */\n      0x1d\n        /* \"#utility.yul\":3668:3671   */\n      dup4\n        /* \"#utility.yul\":3609:3676   */\n      tag_179\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":3602:3676   */\n      swap2\n      pop\n        /* \"#utility.yul\":3685:3778   */\n      tag_197\n        /* \"#utility.yul\":3774:3777   */\n      dup3\n        /* \"#utility.yul\":3685:3778   */\n      tag_198\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":3803:3805   */\n      0x20\n        /* \"#utility.yul\":3798:3801   */\n      dup3\n        /* \"#utility.yul\":3794:3806   */\n      add\n        /* \"#utility.yul\":3787:3806   */\n      swap1\n      pop\n        /* \"#utility.yul\":3446:3812   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3818:4184   */\n    tag_199:\n        /* \"#utility.yul\":3960:3963   */\n      0x00\n        /* \"#utility.yul\":3981:4048   */\n      tag_201\n        /* \"#utility.yul\":4045:4047   */\n      0x26\n        /* \"#utility.yul\":4040:4043   */\n      dup4\n        /* \"#utility.yul\":3981:4048   */\n      tag_179\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":3974:4048   */\n      swap2\n      pop\n        /* \"#utility.yul\":4057:4150   */\n      tag_202\n        /* \"#utility.yul\":4146:4149   */\n      dup3\n        /* \"#utility.yul\":4057:4150   */\n      tag_203\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":4175:4177   */\n      0x40\n        /* \"#utility.yul\":4170:4173   */\n      dup3\n        /* \"#utility.yul\":4166:4178   */\n      add\n        /* \"#utility.yul\":4159:4178   */\n      swap1\n      pop\n        /* \"#utility.yul\":3818:4184   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4190:4556   */\n    tag_204:\n        /* \"#utility.yul\":4332:4335   */\n      0x00\n        /* \"#utility.yul\":4353:4420   */\n      tag_206\n        /* \"#utility.yul\":4417:4419   */\n      0x25\n        /* \"#utility.yul\":4412:4415   */\n      dup4\n        /* \"#utility.yul\":4353:4420   */\n      tag_179\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":4346:4420   */\n      swap2\n      pop\n        /* \"#utility.yul\":4429:4522   */\n      tag_207\n        /* \"#utility.yul\":4518:4521   */\n      dup3\n        /* \"#utility.yul\":4429:4522   */\n      tag_208\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":4547:4549   */\n      0x40\n        /* \"#utility.yul\":4542:4545   */\n      dup3\n        /* \"#utility.yul\":4538:4550   */\n      add\n        /* \"#utility.yul\":4531:4550   */\n      swap1\n      pop\n        /* \"#utility.yul\":4190:4556   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4562:4928   */\n    tag_209:\n        /* \"#utility.yul\":4704:4707   */\n      0x00\n        /* \"#utility.yul\":4725:4792   */\n      tag_211\n        /* \"#utility.yul\":4789:4791   */\n      0x24\n        /* \"#utility.yul\":4784:4787   */\n      dup4\n        /* \"#utility.yul\":4725:4792   */\n      tag_179\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":4718:4792   */\n      swap2\n      pop\n        /* \"#utility.yul\":4801:4894   */\n      tag_212\n        /* \"#utility.yul\":4890:4893   */\n      dup3\n        /* \"#utility.yul\":4801:4894   */\n      tag_213\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":4919:4921   */\n      0x40\n        /* \"#utility.yul\":4914:4917   */\n      dup3\n        /* \"#utility.yul\":4910:4922   */\n      add\n        /* \"#utility.yul\":4903:4922   */\n      swap1\n      pop\n        /* \"#utility.yul\":4562:4928   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4934:5300   */\n    tag_214:\n        /* \"#utility.yul\":5076:5079   */\n      0x00\n        /* \"#utility.yul\":5097:5164   */\n      tag_216\n        /* \"#utility.yul\":5161:5163   */\n      0x25\n        /* \"#utility.yul\":5156:5159   */\n      dup4\n        /* \"#utility.yul\":5097:5164   */\n      tag_179\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":5090:5164   */\n      swap2\n      pop\n        /* \"#utility.yul\":5173:5266   */\n      tag_217\n        /* \"#utility.yul\":5262:5265   */\n      dup3\n        /* \"#utility.yul\":5173:5266   */\n      tag_218\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":5291:5293   */\n      0x40\n        /* \"#utility.yul\":5286:5289   */\n      dup3\n        /* \"#utility.yul\":5282:5294   */\n      add\n        /* \"#utility.yul\":5275:5294   */\n      swap1\n      pop\n        /* \"#utility.yul\":4934:5300   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5306:5424   */\n    tag_219:\n        /* \"#utility.yul\":5393:5417   */\n      tag_221\n        /* \"#utility.yul\":5411:5416   */\n      dup2\n        /* \"#utility.yul\":5393:5417   */\n      tag_222\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":5388:5391   */\n      dup3\n        /* \"#utility.yul\":5381:5418   */\n      mstore\n        /* \"#utility.yul\":5306:5424   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5430:5542   */\n    tag_223:\n        /* \"#utility.yul\":5513:5535   */\n      tag_225\n        /* \"#utility.yul\":5529:5534   */\n      dup2\n        /* \"#utility.yul\":5513:5535   */\n      tag_226\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":5508:5511   */\n      dup3\n        /* \"#utility.yul\":5501:5536   */\n      mstore\n        /* \"#utility.yul\":5430:5542   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5548:5758   */\n    tag_24:\n        /* \"#utility.yul\":5635:5639   */\n      0x00\n        /* \"#utility.yul\":5673:5675   */\n      0x20\n        /* \"#utility.yul\":5662:5671   */\n      dup3\n        /* \"#utility.yul\":5658:5676   */\n      add\n        /* \"#utility.yul\":5650:5676   */\n      swap1\n      pop\n        /* \"#utility.yul\":5686:5751   */\n      tag_228\n        /* \"#utility.yul\":5748:5749   */\n      0x00\n        /* \"#utility.yul\":5737:5746   */\n      dup4\n        /* \"#utility.yul\":5733:5750   */\n      add\n        /* \"#utility.yul\":5724:5730   */\n      dup5\n        /* \"#utility.yul\":5686:5751   */\n      tag_170\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":5548:5758   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5764:6077   */\n    tag_18:\n        /* \"#utility.yul\":5877:5881   */\n      0x00\n        /* \"#utility.yul\":5915:5917   */\n      0x20\n        /* \"#utility.yul\":5904:5913   */\n      dup3\n        /* \"#utility.yul\":5900:5918   */\n      add\n        /* \"#utility.yul\":5892:5918   */\n      swap1\n      pop\n        /* \"#utility.yul\":5964:5973   */\n      dup2\n        /* \"#utility.yul\":5958:5962   */\n      dup2\n        /* \"#utility.yul\":5954:5974   */\n      sub\n        /* \"#utility.yul\":5950:5951   */\n      0x00\n        /* \"#utility.yul\":5939:5948   */\n      dup4\n        /* \"#utility.yul\":5935:5952   */\n      add\n        /* \"#utility.yul\":5928:5975   */\n      mstore\n        /* \"#utility.yul\":5992:6070   */\n      tag_230\n        /* \"#utility.yul\":6065:6069   */\n      dup2\n        /* \"#utility.yul\":6056:6062   */\n      dup5\n        /* \"#utility.yul\":5992:6070   */\n      tag_174\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":5984:6070   */\n      swap1\n      pop\n        /* \"#utility.yul\":5764:6077   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6083:6502   */\n    tag_129:\n        /* \"#utility.yul\":6249:6253   */\n      0x00\n        /* \"#utility.yul\":6287:6289   */\n      0x20\n        /* \"#utility.yul\":6276:6285   */\n      dup3\n        /* \"#utility.yul\":6272:6290   */\n      add\n        /* \"#utility.yul\":6264:6290   */\n      swap1\n      pop\n        /* \"#utility.yul\":6336:6345   */\n      dup2\n        /* \"#utility.yul\":6330:6334   */\n      dup2\n        /* \"#utility.yul\":6326:6346   */\n      sub\n        /* \"#utility.yul\":6322:6323   */\n      0x00\n        /* \"#utility.yul\":6311:6320   */\n      dup4\n        /* \"#utility.yul\":6307:6324   */\n      add\n        /* \"#utility.yul\":6300:6347   */\n      mstore\n        /* \"#utility.yul\":6364:6495   */\n      tag_232\n        /* \"#utility.yul\":6490:6494   */\n      dup2\n        /* \"#utility.yul\":6364:6495   */\n      tag_184\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":6356:6495   */\n      swap1\n      pop\n        /* \"#utility.yul\":6083:6502   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6508:6927   */\n    tag_114:\n        /* \"#utility.yul\":6674:6678   */\n      0x00\n        /* \"#utility.yul\":6712:6714   */\n      0x20\n        /* \"#utility.yul\":6701:6710   */\n      dup3\n        /* \"#utility.yul\":6697:6715   */\n      add\n        /* \"#utility.yul\":6689:6715   */\n      swap1\n      pop\n        /* \"#utility.yul\":6761:6770   */\n      dup2\n        /* \"#utility.yul\":6755:6759   */\n      dup2\n        /* \"#utility.yul\":6751:6771   */\n      sub\n        /* \"#utility.yul\":6747:6748   */\n      0x00\n        /* \"#utility.yul\":6736:6745   */\n      dup4\n        /* \"#utility.yul\":6732:6749   */\n      add\n        /* \"#utility.yul\":6725:6772   */\n      mstore\n        /* \"#utility.yul\":6789:6920   */\n      tag_234\n        /* \"#utility.yul\":6915:6919   */\n      dup2\n        /* \"#utility.yul\":6789:6920   */\n      tag_189\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":6781:6920   */\n      swap1\n      pop\n        /* \"#utility.yul\":6508:6927   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6933:7352   */\n    tag_121:\n        /* \"#utility.yul\":7099:7103   */\n      0x00\n        /* \"#utility.yul\":7137:7139   */\n      0x20\n        /* \"#utility.yul\":7126:7135   */\n      dup3\n        /* \"#utility.yul\":7122:7140   */\n      add\n        /* \"#utility.yul\":7114:7140   */\n      swap1\n      pop\n        /* \"#utility.yul\":7186:7195   */\n      dup2\n        /* \"#utility.yul\":7180:7184   */\n      dup2\n        /* \"#utility.yul\":7176:7196   */\n      sub\n        /* \"#utility.yul\":7172:7173   */\n      0x00\n        /* \"#utility.yul\":7161:7170   */\n      dup4\n        /* \"#utility.yul\":7157:7174   */\n      add\n        /* \"#utility.yul\":7150:7197   */\n      mstore\n        /* \"#utility.yul\":7214:7345   */\n      tag_236\n        /* \"#utility.yul\":7340:7344   */\n      dup2\n        /* \"#utility.yul\":7214:7345   */\n      tag_194\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":7206:7345   */\n      swap1\n      pop\n        /* \"#utility.yul\":6933:7352   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7358:7777   */\n    tag_134:\n        /* \"#utility.yul\":7524:7528   */\n      0x00\n        /* \"#utility.yul\":7562:7564   */\n      0x20\n        /* \"#utility.yul\":7551:7560   */\n      dup3\n        /* \"#utility.yul\":7547:7565   */\n      add\n        /* \"#utility.yul\":7539:7565   */\n      swap1\n      pop\n        /* \"#utility.yul\":7611:7620   */\n      dup2\n        /* \"#utility.yul\":7605:7609   */\n      dup2\n        /* \"#utility.yul\":7601:7621   */\n      sub\n        /* \"#utility.yul\":7597:7598   */\n      0x00\n        /* \"#utility.yul\":7586:7595   */\n      dup4\n        /* \"#utility.yul\":7582:7599   */\n      add\n        /* \"#utility.yul\":7575:7622   */\n      mstore\n        /* \"#utility.yul\":7639:7770   */\n      tag_238\n        /* \"#utility.yul\":7765:7769   */\n      dup2\n        /* \"#utility.yul\":7639:7770   */\n      tag_199\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":7631:7770   */\n      swap1\n      pop\n        /* \"#utility.yul\":7358:7777   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7783:8202   */\n    tag_126:\n        /* \"#utility.yul\":7949:7953   */\n      0x00\n        /* \"#utility.yul\":7987:7989   */\n      0x20\n        /* \"#utility.yul\":7976:7985   */\n      dup3\n        /* \"#utility.yul\":7972:7990   */\n      add\n        /* \"#utility.yul\":7964:7990   */\n      swap1\n      pop\n        /* \"#utility.yul\":8036:8045   */\n      dup2\n        /* \"#utility.yul\":8030:8034   */\n      dup2\n        /* \"#utility.yul\":8026:8046   */\n      sub\n        /* \"#utility.yul\":8022:8023   */\n      0x00\n        /* \"#utility.yul\":8011:8020   */\n      dup4\n        /* \"#utility.yul\":8007:8024   */\n      add\n        /* \"#utility.yul\":8000:8047   */\n      mstore\n        /* \"#utility.yul\":8064:8195   */\n      tag_240\n        /* \"#utility.yul\":8190:8194   */\n      dup2\n        /* \"#utility.yul\":8064:8195   */\n      tag_204\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":8056:8195   */\n      swap1\n      pop\n        /* \"#utility.yul\":7783:8202   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8208:8627   */\n    tag_111:\n        /* \"#utility.yul\":8374:8378   */\n      0x00\n        /* \"#utility.yul\":8412:8414   */\n      0x20\n        /* \"#utility.yul\":8401:8410   */\n      dup3\n        /* \"#utility.yul\":8397:8415   */\n      add\n        /* \"#utility.yul\":8389:8415   */\n      swap1\n      pop\n        /* \"#utility.yul\":8461:8470   */\n      dup2\n        /* \"#utility.yul\":8455:8459   */\n      dup2\n        /* \"#utility.yul\":8451:8471   */\n      sub\n        /* \"#utility.yul\":8447:8448   */\n      0x00\n        /* \"#utility.yul\":8436:8445   */\n      dup4\n        /* \"#utility.yul\":8432:8449   */\n      add\n        /* \"#utility.yul\":8425:8472   */\n      mstore\n        /* \"#utility.yul\":8489:8620   */\n      tag_242\n        /* \"#utility.yul\":8615:8619   */\n      dup2\n        /* \"#utility.yul\":8489:8620   */\n      tag_209\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":8481:8620   */\n      swap1\n      pop\n        /* \"#utility.yul\":8208:8627   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8633:9052   */\n    tag_101:\n        /* \"#utility.yul\":8799:8803   */\n      0x00\n        /* \"#utility.yul\":8837:8839   */\n      0x20\n        /* \"#utility.yul\":8826:8835   */\n      dup3\n        /* \"#utility.yul\":8822:8840   */\n      add\n        /* \"#utility.yul\":8814:8840   */\n      swap1\n      pop\n        /* \"#utility.yul\":8886:8895   */\n      dup2\n        /* \"#utility.yul\":8880:8884   */\n      dup2\n        /* \"#utility.yul\":8876:8896   */\n      sub\n        /* \"#utility.yul\":8872:8873   */\n      0x00\n        /* \"#utility.yul\":8861:8870   */\n      dup4\n        /* \"#utility.yul\":8857:8874   */\n      add\n        /* \"#utility.yul\":8850:8897   */\n      mstore\n        /* \"#utility.yul\":8914:9045   */\n      tag_244\n        /* \"#utility.yul\":9040:9044   */\n      dup2\n        /* \"#utility.yul\":8914:9045   */\n      tag_214\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":8906:9045   */\n      swap1\n      pop\n        /* \"#utility.yul\":8633:9052   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9058:9280   */\n    tag_28:\n        /* \"#utility.yul\":9151:9155   */\n      0x00\n        /* \"#utility.yul\":9189:9191   */\n      0x20\n        /* \"#utility.yul\":9178:9187   */\n      dup3\n        /* \"#utility.yul\":9174:9192   */\n      add\n        /* \"#utility.yul\":9166:9192   */\n      swap1\n      pop\n        /* \"#utility.yul\":9202:9273   */\n      tag_246\n        /* \"#utility.yul\":9270:9271   */\n      0x00\n        /* \"#utility.yul\":9259:9268   */\n      dup4\n        /* \"#utility.yul\":9255:9272   */\n      add\n        /* \"#utility.yul\":9246:9252   */\n      dup5\n        /* \"#utility.yul\":9202:9273   */\n      tag_219\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":9058:9280   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9286:9500   */\n    tag_37:\n        /* \"#utility.yul\":9375:9379   */\n      0x00\n        /* \"#utility.yul\":9413:9415   */\n      0x20\n        /* \"#utility.yul\":9402:9411   */\n      dup3\n        /* \"#utility.yul\":9398:9416   */\n      add\n        /* \"#utility.yul\":9390:9416   */\n      swap1\n      pop\n        /* \"#utility.yul\":9426:9493   */\n      tag_248\n        /* \"#utility.yul\":9490:9491   */\n      0x00\n        /* \"#utility.yul\":9479:9488   */\n      dup4\n        /* \"#utility.yul\":9475:9492   */\n      add\n        /* \"#utility.yul\":9466:9472   */\n      dup5\n        /* \"#utility.yul\":9426:9493   */\n      tag_223\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":9286:9500   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9587:9686   */\n    tag_177:\n        /* \"#utility.yul\":9639:9645   */\n      0x00\n        /* \"#utility.yul\":9673:9678   */\n      dup2\n        /* \"#utility.yul\":9667:9679   */\n      mload\n        /* \"#utility.yul\":9657:9679   */\n      swap1\n      pop\n        /* \"#utility.yul\":9587:9686   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9692:9861   */\n    tag_179:\n        /* \"#utility.yul\":9776:9787   */\n      0x00\n        /* \"#utility.yul\":9810:9816   */\n      dup3\n        /* \"#utility.yul\":9805:9808   */\n      dup3\n        /* \"#utility.yul\":9798:9817   */\n      mstore\n        /* \"#utility.yul\":9850:9854   */\n      0x20\n        /* \"#utility.yul\":9845:9848   */\n      dup3\n        /* \"#utility.yul\":9841:9855   */\n      add\n        /* \"#utility.yul\":9826:9855   */\n      swap1\n      pop\n        /* \"#utility.yul\":9692:9861   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9867:10172   */\n    tag_88:\n        /* \"#utility.yul\":9907:9910   */\n      0x00\n        /* \"#utility.yul\":9926:9946   */\n      tag_254\n        /* \"#utility.yul\":9944:9945   */\n      dup3\n        /* \"#utility.yul\":9926:9946   */\n      tag_222\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":9921:9946   */\n      swap2\n      pop\n        /* \"#utility.yul\":9960:9980   */\n      tag_255\n        /* \"#utility.yul\":9978:9979   */\n      dup4\n        /* \"#utility.yul\":9960:9980   */\n      tag_222\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":9955:9980   */\n      swap3\n      pop\n        /* \"#utility.yul\":10114:10115   */\n      dup3\n        /* \"#utility.yul\":10046:10112   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10042:10116   */\n      sub\n        /* \"#utility.yul\":10039:10040   */\n      dup3\n        /* \"#utility.yul\":10036:10117   */\n      gt\n        /* \"#utility.yul\":10033:10140   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":10120:10138   */\n      tag_257\n      tag_258\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":10033:10140   */\n    tag_256:\n        /* \"#utility.yul\":10164:10165   */\n      dup3\n        /* \"#utility.yul\":10161:10162   */\n      dup3\n        /* \"#utility.yul\":10157:10166   */\n      add\n        /* \"#utility.yul\":10150:10166   */\n      swap1\n      pop\n        /* \"#utility.yul\":9867:10172   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10178:10274   */\n    tag_259:\n        /* \"#utility.yul\":10215:10222   */\n      0x00\n        /* \"#utility.yul\":10244:10268   */\n      tag_261\n        /* \"#utility.yul\":10262:10267   */\n      dup3\n        /* \"#utility.yul\":10244:10268   */\n      tag_262\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":10233:10268   */\n      swap1\n      pop\n        /* \"#utility.yul\":10178:10274   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10280:10370   */\n    tag_173:\n        /* \"#utility.yul\":10314:10321   */\n      0x00\n        /* \"#utility.yul\":10357:10362   */\n      dup2\n        /* \"#utility.yul\":10350:10363   */\n      iszero\n        /* \"#utility.yul\":10343:10364   */\n      iszero\n        /* \"#utility.yul\":10332:10364   */\n      swap1\n      pop\n        /* \"#utility.yul\":10280:10370   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10376:10502   */\n    tag_262:\n        /* \"#utility.yul\":10413:10420   */\n      0x00\n        /* \"#utility.yul\":10453:10495   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10446:10451   */\n      dup3\n        /* \"#utility.yul\":10442:10496   */\n      and\n        /* \"#utility.yul\":10431:10496   */\n      swap1\n      pop\n        /* \"#utility.yul\":10376:10502   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10508:10585   */\n    tag_222:\n        /* \"#utility.yul\":10545:10552   */\n      0x00\n        /* \"#utility.yul\":10574:10579   */\n      dup2\n        /* \"#utility.yul\":10563:10579   */\n      swap1\n      pop\n        /* \"#utility.yul\":10508:10585   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10591:10677   */\n    tag_226:\n        /* \"#utility.yul\":10626:10633   */\n      0x00\n        /* \"#utility.yul\":10666:10670   */\n      0xff\n        /* \"#utility.yul\":10659:10664   */\n      dup3\n        /* \"#utility.yul\":10655:10671   */\n      and\n        /* \"#utility.yul\":10644:10671   */\n      swap1\n      pop\n        /* \"#utility.yul\":10591:10677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10683:10990   */\n    tag_181:\n        /* \"#utility.yul\":10751:10752   */\n      0x00\n        /* \"#utility.yul\":10761:10874   */\n    tag_268:\n        /* \"#utility.yul\":10775:10781   */\n      dup4\n        /* \"#utility.yul\":10772:10773   */\n      dup2\n        /* \"#utility.yul\":10769:10782   */\n      lt\n        /* \"#utility.yul\":10761:10874   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":10860:10861   */\n      dup1\n        /* \"#utility.yul\":10855:10858   */\n      dup3\n        /* \"#utility.yul\":10851:10862   */\n      add\n        /* \"#utility.yul\":10845:10863   */\n      mload\n        /* \"#utility.yul\":10841:10842   */\n      dup2\n        /* \"#utility.yul\":10836:10839   */\n      dup5\n        /* \"#utility.yul\":10832:10843   */\n      add\n        /* \"#utility.yul\":10825:10864   */\n      mstore\n        /* \"#utility.yul\":10797:10799   */\n      0x20\n        /* \"#utility.yul\":10794:10795   */\n      dup2\n        /* \"#utility.yul\":10790:10800   */\n      add\n        /* \"#utility.yul\":10785:10800   */\n      swap1\n      pop\n        /* \"#utility.yul\":10761:10874   */\n      jump(tag_268)\n    tag_270:\n        /* \"#utility.yul\":10892:10898   */\n      dup4\n        /* \"#utility.yul\":10889:10890   */\n      dup2\n        /* \"#utility.yul\":10886:10899   */\n      gt\n        /* \"#utility.yul\":10883:10984   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":10972:10973   */\n      0x00\n        /* \"#utility.yul\":10963:10969   */\n      dup5\n        /* \"#utility.yul\":10958:10961   */\n      dup5\n        /* \"#utility.yul\":10954:10970   */\n      add\n        /* \"#utility.yul\":10947:10974   */\n      mstore\n        /* \"#utility.yul\":10883:10984   */\n    tag_271:\n        /* \"#utility.yul\":10732:10990   */\n      pop\n        /* \"#utility.yul\":10683:10990   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10996:11316   */\n    tag_65:\n        /* \"#utility.yul\":11040:11046   */\n      0x00\n        /* \"#utility.yul\":11077:11078   */\n      0x02\n        /* \"#utility.yul\":11071:11075   */\n      dup3\n        /* \"#utility.yul\":11067:11079   */\n      div\n        /* \"#utility.yul\":11057:11079   */\n      swap1\n      pop\n        /* \"#utility.yul\":11124:11125   */\n      0x01\n        /* \"#utility.yul\":11118:11122   */\n      dup3\n        /* \"#utility.yul\":11114:11126   */\n      and\n        /* \"#utility.yul\":11145:11163   */\n      dup1\n        /* \"#utility.yul\":11135:11216   */\n      tag_273\n      jumpi\n        /* \"#utility.yul\":11201:11205   */\n      0x7f\n        /* \"#utility.yul\":11193:11199   */\n      dup3\n        /* \"#utility.yul\":11189:11206   */\n      and\n        /* \"#utility.yul\":11179:11206   */\n      swap2\n      pop\n        /* \"#utility.yul\":11135:11216   */\n    tag_273:\n        /* \"#utility.yul\":11263:11265   */\n      0x20\n        /* \"#utility.yul\":11255:11261   */\n      dup3\n        /* \"#utility.yul\":11252:11266   */\n      lt\n        /* \"#utility.yul\":11232:11250   */\n      dup2\n        /* \"#utility.yul\":11229:11267   */\n      eq\n        /* \"#utility.yul\":11226:11310   */\n      iszero\n      tag_274\n      jumpi\n        /* \"#utility.yul\":11282:11300   */\n      tag_275\n      tag_276\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":11226:11310   */\n    tag_274:\n        /* \"#utility.yul\":11047:11316   */\n      pop\n        /* \"#utility.yul\":10996:11316   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11322:11502   */\n    tag_258:\n        /* \"#utility.yul\":11370:11447   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11367:11368   */\n      0x00\n        /* \"#utility.yul\":11360:11448   */\n      mstore\n        /* \"#utility.yul\":11467:11471   */\n      0x11\n        /* \"#utility.yul\":11464:11465   */\n      0x04\n        /* \"#utility.yul\":11457:11472   */\n      mstore\n        /* \"#utility.yul\":11491:11495   */\n      0x24\n        /* \"#utility.yul\":11488:11489   */\n      0x00\n        /* \"#utility.yul\":11481:11496   */\n      revert\n        /* \"#utility.yul\":11508:11688   */\n    tag_276:\n        /* \"#utility.yul\":11556:11633   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11553:11554   */\n      0x00\n        /* \"#utility.yul\":11546:11634   */\n      mstore\n        /* \"#utility.yul\":11653:11657   */\n      0x22\n        /* \"#utility.yul\":11650:11651   */\n      0x04\n        /* \"#utility.yul\":11643:11658   */\n      mstore\n        /* \"#utility.yul\":11677:11681   */\n      0x24\n        /* \"#utility.yul\":11674:11675   */\n      0x00\n        /* \"#utility.yul\":11667:11682   */\n      revert\n        /* \"#utility.yul\":11817:11934   */\n    tag_152:\n        /* \"#utility.yul\":11926:11927   */\n      0x00\n        /* \"#utility.yul\":11923:11924   */\n      dup1\n        /* \"#utility.yul\":11916:11928   */\n      revert\n        /* \"#utility.yul\":11940:12042   */\n    tag_183:\n        /* \"#utility.yul\":11981:11987   */\n      0x00\n        /* \"#utility.yul\":12032:12034   */\n      0x1f\n        /* \"#utility.yul\":12028:12035   */\n      not\n        /* \"#utility.yul\":12023:12025   */\n      0x1f\n        /* \"#utility.yul\":12016:12021   */\n      dup4\n        /* \"#utility.yul\":12012:12026   */\n      add\n        /* \"#utility.yul\":12008:12036   */\n      and\n        /* \"#utility.yul\":11998:12036   */\n      swap1\n      pop\n        /* \"#utility.yul\":11940:12042   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12048:12270   */\n    tag_188:\n        /* \"#utility.yul\":12188:12222   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":12184:12185   */\n      0x00\n        /* \"#utility.yul\":12176:12182   */\n      dup3\n        /* \"#utility.yul\":12172:12186   */\n      add\n        /* \"#utility.yul\":12165:12223   */\n      mstore\n        /* \"#utility.yul\":12257:12262   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12252:12254   */\n      0x20\n        /* \"#utility.yul\":12244:12250   */\n      dup3\n        /* \"#utility.yul\":12240:12255   */\n      add\n        /* \"#utility.yul\":12233:12263   */\n      mstore\n        /* \"#utility.yul\":12048:12270   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12276:12497   */\n    tag_193:\n        /* \"#utility.yul\":12416:12450   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":12412:12413   */\n      0x00\n        /* \"#utility.yul\":12404:12410   */\n      dup3\n        /* \"#utility.yul\":12400:12414   */\n      add\n        /* \"#utility.yul\":12393:12451   */\n      mstore\n        /* \"#utility.yul\":12485:12489   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12480:12482   */\n      0x20\n        /* \"#utility.yul\":12472:12478   */\n      dup3\n        /* \"#utility.yul\":12468:12483   */\n      add\n        /* \"#utility.yul\":12461:12490   */\n      mstore\n        /* \"#utility.yul\":12276:12497   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12503:12682   */\n    tag_198:\n        /* \"#utility.yul\":12643:12674   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":12639:12640   */\n      0x00\n        /* \"#utility.yul\":12631:12637   */\n      dup3\n        /* \"#utility.yul\":12627:12641   */\n      add\n        /* \"#utility.yul\":12620:12675   */\n      mstore\n        /* \"#utility.yul\":12503:12682   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12688:12913   */\n    tag_203:\n        /* \"#utility.yul\":12828:12862   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":12824:12825   */\n      0x00\n        /* \"#utility.yul\":12816:12822   */\n      dup3\n        /* \"#utility.yul\":12812:12826   */\n      add\n        /* \"#utility.yul\":12805:12863   */\n      mstore\n        /* \"#utility.yul\":12897:12905   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12892:12894   */\n      0x20\n        /* \"#utility.yul\":12884:12890   */\n      dup3\n        /* \"#utility.yul\":12880:12895   */\n      add\n        /* \"#utility.yul\":12873:12906   */\n      mstore\n        /* \"#utility.yul\":12688:12913   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12919:13143   */\n    tag_208:\n        /* \"#utility.yul\":13059:13093   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":13055:13056   */\n      0x00\n        /* \"#utility.yul\":13047:13053   */\n      dup3\n        /* \"#utility.yul\":13043:13057   */\n      add\n        /* \"#utility.yul\":13036:13094   */\n      mstore\n        /* \"#utility.yul\":13128:13135   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13123:13125   */\n      0x20\n        /* \"#utility.yul\":13115:13121   */\n      dup3\n        /* \"#utility.yul\":13111:13126   */\n      add\n        /* \"#utility.yul\":13104:13136   */\n      mstore\n        /* \"#utility.yul\":12919:13143   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13149:13372   */\n    tag_213:\n        /* \"#utility.yul\":13289:13323   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":13285:13286   */\n      0x00\n        /* \"#utility.yul\":13277:13283   */\n      dup3\n        /* \"#utility.yul\":13273:13287   */\n      add\n        /* \"#utility.yul\":13266:13324   */\n      mstore\n        /* \"#utility.yul\":13358:13364   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13353:13355   */\n      0x20\n        /* \"#utility.yul\":13345:13351   */\n      dup3\n        /* \"#utility.yul\":13341:13356   */\n      add\n        /* \"#utility.yul\":13334:13365   */\n      mstore\n        /* \"#utility.yul\":13149:13372   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13378:13602   */\n    tag_218:\n        /* \"#utility.yul\":13518:13552   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":13514:13515   */\n      0x00\n        /* \"#utility.yul\":13506:13512   */\n      dup3\n        /* \"#utility.yul\":13502:13516   */\n      add\n        /* \"#utility.yul\":13495:13553   */\n      mstore\n        /* \"#utility.yul\":13587:13594   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13582:13584   */\n      0x20\n        /* \"#utility.yul\":13574:13580   */\n      dup3\n        /* \"#utility.yul\":13570:13585   */\n      add\n        /* \"#utility.yul\":13563:13595   */\n      mstore\n        /* \"#utility.yul\":13378:13602   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13608:13730   */\n    tag_144:\n        /* \"#utility.yul\":13681:13705   */\n      tag_291\n        /* \"#utility.yul\":13699:13704   */\n      dup2\n        /* \"#utility.yul\":13681:13705   */\n      tag_259\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":13674:13679   */\n      dup2\n        /* \"#utility.yul\":13671:13706   */\n      eq\n        /* \"#utility.yul\":13661:13724   */\n      tag_292\n      jumpi\n        /* \"#utility.yul\":13720:13721   */\n      0x00\n        /* \"#utility.yul\":13717:13718   */\n      dup1\n        /* \"#utility.yul\":13710:13722   */\n      revert\n        /* \"#utility.yul\":13661:13724   */\n    tag_292:\n        /* \"#utility.yul\":13608:13730   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13736:13858   */\n    tag_148:\n        /* \"#utility.yul\":13809:13833   */\n      tag_294\n        /* \"#utility.yul\":13827:13832   */\n      dup2\n        /* \"#utility.yul\":13809:13833   */\n      tag_222\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":13802:13807   */\n      dup2\n        /* \"#utility.yul\":13799:13834   */\n      eq\n        /* \"#utility.yul\":13789:13852   */\n      tag_295\n      jumpi\n        /* \"#utility.yul\":13848:13849   */\n      0x00\n        /* \"#utility.yul\":13845:13846   */\n      dup1\n        /* \"#utility.yul\":13838:13850   */\n      revert\n        /* \"#utility.yul\":13789:13852   */\n    tag_295:\n        /* \"#utility.yul\":13736:13858   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f52b9bfd8322954695f6bda849439882a060a25bea2e05bcb53e810f3141f2c064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_660": {
									"entryPoint": null,
									"id": 660,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 289,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 579,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 589,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 643,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 805,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 852,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 899,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 904,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 909,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 914,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4093:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "102:326:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "112:75:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "179:6:5"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "137:41:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "137:49:5"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "121:15:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "121:66:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "112:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "203:5:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "210:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "196:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "196:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "196:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "226:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "241:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "248:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "237:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:16:5"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "230:3:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "291:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "293:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "293:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "293:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "272:3:5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "277:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "268:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "268:16:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "286:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "265:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "265:25:5"
															},
															"nodeType": "YulIf",
															"src": "262:112:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "405:3:5"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "410:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "415:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "383:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "383:39:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "383:39:5"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "75:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "88:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "96:5:5",
														"type": ""
													}
												],
												"src": "7:421:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "521:282:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "570:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "572:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "572:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "572:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "549:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "557:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "545:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "545:17:5"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "564:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "541:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "541:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "534:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "534:35:5"
															},
															"nodeType": "YulIf",
															"src": "531:122:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "662:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "682:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "676:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "666:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "698:99:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "770:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "778:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "766:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "766:17:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "785:6:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "793:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "707:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "707:90:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "698:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "499:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "507:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "515:5:5",
														"type": ""
													}
												],
												"src": "448:355:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "923:739:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "969:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "971:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "971:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "971:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "944:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "953:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "940:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "940:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "965:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "936:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "936:32:5"
															},
															"nodeType": "YulIf",
															"src": "933:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1062:291:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1077:38:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1101:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1112:1:5",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1097:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1097:17:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1091:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1091:24:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1081:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1162:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1164:77:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1164:79:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1164:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1134:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1142:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1131:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1131:30:5"
																	},
																	"nodeType": "YulIf",
																	"src": "1128:117:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1259:84:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1315:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1326:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1311:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1311:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1335:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1269:41:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1269:74:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1259:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1363:292:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1378:39:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1402:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1413:2:5",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1398:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1398:18:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1392:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1392:25:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1382:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1464:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1466:77:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1466:79:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1466:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1436:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1444:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1433:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1433:30:5"
																	},
																	"nodeType": "YulIf",
																	"src": "1430:117:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1561:84:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1617:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1628:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1613:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1613:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1637:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1571:41:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1571:74:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1561:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "885:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "896:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "908:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "916:6:5",
														"type": ""
													}
												],
												"src": "809:853:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1709:88:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1719:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1729:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:20:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1719:6:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1778:6:5"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1786:4:5"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1758:19:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1758:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1758:33:5"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1693:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1702:6:5",
														"type": ""
													}
												],
												"src": "1668:129:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1843:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1853:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1869:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1863:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1863:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1836:6:5",
														"type": ""
													}
												],
												"src": "1803:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1951:241:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2056:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2058:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2058:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2058:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2028:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2036:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2025:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2025:30:5"
															},
															"nodeType": "YulIf",
															"src": "2022:56:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2088:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2118:6:5"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "2096:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2096:29:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2088:4:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2162:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2174:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2180:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2170:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2170:15:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2162:4:5"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1946:4:5",
														"type": ""
													}
												],
												"src": "1884:308:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2247:258:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2257:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2266:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2261:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2326:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2351:3:5"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2356:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2347:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2347:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2370:3:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2375:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2366:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2366:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2360:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2360:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2340:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2340:39:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2340:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2287:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2290:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2284:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2284:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2298:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2300:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2309:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2312:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2305:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2305:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2300:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2280:3:5",
																"statements": []
															},
															"src": "2276:113:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2423:76:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2473:3:5"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2478:6:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2469:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2469:16:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2487:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2462:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2462:27:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2462:27:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2404:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2407:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2401:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2401:13:5"
															},
															"nodeType": "YulIf",
															"src": "2398:101:5"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2229:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2234:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2239:6:5",
														"type": ""
													}
												],
												"src": "2198:307:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2562:269:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2572:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2586:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2592:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2582:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2582:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2572:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2603:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2633:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2639:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2629:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2629:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2607:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2680:51:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2694:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2708:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2716:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2704:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2704:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2694:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2660:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2653:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2653:26:5"
															},
															"nodeType": "YulIf",
															"src": "2650:81:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2783:42:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "2797:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2797:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2797:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2747:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2770:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2778:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2767:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2767:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2744:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2744:38:5"
															},
															"nodeType": "YulIf",
															"src": "2741:84:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2546:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2555:6:5",
														"type": ""
													}
												],
												"src": "2511:320:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2880:238:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2890:58:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2912:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "2942:4:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2920:21:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2920:27:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2908:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2908:40:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2894:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3059:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3061:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3061:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3061:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3002:10:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3014:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2999:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2999:34:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3038:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3050:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3035:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3035:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2996:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2996:62:5"
															},
															"nodeType": "YulIf",
															"src": "2993:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3097:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3101:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3090:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3090:22:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3090:22:5"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2866:6:5",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2874:4:5",
														"type": ""
													}
												],
												"src": "2837:281:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3152:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3169:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3172:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3162:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3162:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3162:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3266:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3269:4:5",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3259:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3259:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3259:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3290:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3293:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3283:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3283:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3283:15:5"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3124:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3338:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3358:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3348:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3348:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3348:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3452:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3455:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3445:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3445:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3445:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3476:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3479:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3469:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3469:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3469:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3310:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3585:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3602:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3605:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3595:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3595:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3595:12:5"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "3496:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3708:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3725:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3728:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3718:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3718:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3718:12:5"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "3619:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3831:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3848:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3851:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3841:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3841:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3841:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "3742:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3954:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3971:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3974:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3964:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3964:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3964:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3865:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4036:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4046:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4064:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4071:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4060:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4060:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4080:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4076:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4076:7:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4056:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4056:28:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4046:6:5"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4019:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4029:6:5",
														"type": ""
													}
												],
												"src": "3988:102:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620016173803806200161783398181016040528101906200003791906200019f565b81600390805190602001906200004f92919062000071565b5080600490805190602001906200006892919062000071565b505050620003a8565b8280546200007f90620002b9565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b60006200013862000132846200024d565b62000224565b90508281526020810184848401111562000157576200015662000388565b5b6200016484828562000283565b509392505050565b600082601f83011262000184576200018362000383565b5b81516200019684826020860162000121565b91505092915050565b60008060408385031215620001b957620001b862000392565b5b600083015167ffffffffffffffff811115620001da57620001d96200038d565b5b620001e8858286016200016c565b925050602083015167ffffffffffffffff8111156200020c576200020b6200038d565b5b6200021a858286016200016c565b9150509250929050565b60006200023062000243565b90506200023e8282620002ef565b919050565b6000604051905090565b600067ffffffffffffffff8211156200026b576200026a62000354565b5b620002768262000397565b9050602081019050919050565b60005b83811015620002a357808201518184015260208101905062000286565b83811115620002b3576000848401525b50505050565b60006002820490506001821680620002d257607f821691505b60208210811415620002e957620002e862000325565b5b50919050565b620002fa8262000397565b810181811067ffffffffffffffff821117156200031c576200031b62000354565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61125f80620003b86000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610d20565b60405180910390f35b6100e660048036038101906100e19190610b6a565b610308565b6040516100f39190610d05565b60405180910390f35b61010461032b565b6040516101119190610e22565b60405180910390f35b610134600480360381019061012f9190610b17565b610335565b6040516101419190610d05565b60405180910390f35b610152610364565b60405161015f9190610e3d565b60405180910390f35b610182600480360381019061017d9190610b6a565b61036d565b60405161018f9190610d05565b60405180910390f35b6101b260048036038101906101ad9190610aaa565b6103a4565b6040516101bf9190610e22565b60405180910390f35b6101d06103ec565b6040516101dd9190610d20565b60405180910390f35b61020060048036038101906101fb9190610b6a565b61047e565b60405161020d9190610d05565b60405180910390f35b610230600480360381019061022b9190610b6a565b6104f5565b60405161023d9190610d05565b60405180910390f35b610260600480360381019061025b9190610ad7565b610518565b60405161026d9190610e22565b60405180910390f35b60606003805461028590610f52565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610f52565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610772565b6103588585856107fe565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610e74565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610f52565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610f52565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e02565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fe565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90610de2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610687576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067e90610d62565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107659190610e22565b60405180910390a3505050565b600061077e8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f857818110156107ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e190610d82565b60405180910390fd5b6107f784848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561086e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086590610dc2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d590610d42565b60405180910390fd5b6108e9838383610a76565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096690610da2565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a5d9190610e22565b60405180910390a3610a70848484610a7b565b50505050565b505050565b505050565b600081359050610a8f816111fb565b92915050565b600081359050610aa481611212565b92915050565b600060208284031215610ac057610abf610fe2565b5b6000610ace84828501610a80565b91505092915050565b60008060408385031215610aee57610aed610fe2565b5b6000610afc85828601610a80565b9250506020610b0d85828601610a80565b9150509250929050565b600080600060608486031215610b3057610b2f610fe2565b5b6000610b3e86828701610a80565b9350506020610b4f86828701610a80565b9250506040610b6086828701610a95565b9150509250925092565b60008060408385031215610b8157610b80610fe2565b5b6000610b8f85828601610a80565b9250506020610ba085828601610a95565b9150509250929050565b610bb381610edc565b82525050565b6000610bc482610e58565b610bce8185610e63565b9350610bde818560208601610f1f565b610be781610fe7565b840191505092915050565b6000610bff602383610e63565b9150610c0a82610ff8565b604082019050919050565b6000610c22602283610e63565b9150610c2d82611047565b604082019050919050565b6000610c45601d83610e63565b9150610c5082611096565b602082019050919050565b6000610c68602683610e63565b9150610c73826110bf565b604082019050919050565b6000610c8b602583610e63565b9150610c968261110e565b604082019050919050565b6000610cae602483610e63565b9150610cb98261115d565b604082019050919050565b6000610cd1602583610e63565b9150610cdc826111ac565b604082019050919050565b610cf081610f08565b82525050565b610cff81610f12565b82525050565b6000602082019050610d1a6000830184610baa565b92915050565b60006020820190508181036000830152610d3a8184610bb9565b905092915050565b60006020820190508181036000830152610d5b81610bf2565b9050919050565b60006020820190508181036000830152610d7b81610c15565b9050919050565b60006020820190508181036000830152610d9b81610c38565b9050919050565b60006020820190508181036000830152610dbb81610c5b565b9050919050565b60006020820190508181036000830152610ddb81610c7e565b9050919050565b60006020820190508181036000830152610dfb81610ca1565b9050919050565b60006020820190508181036000830152610e1b81610cc4565b9050919050565b6000602082019050610e376000830184610ce7565b92915050565b6000602082019050610e526000830184610cf6565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610e7f82610f08565b9150610e8a83610f08565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ebf57610ebe610f84565b5b828201905092915050565b6000610ed582610ee8565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015610f3d578082015181840152602081019050610f22565b83811115610f4c576000848401525b50505050565b60006002820490506001821680610f6a57607f821691505b60208210811415610f7e57610f7d610fb3565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b61120481610eca565b811461120f57600080fd5b50565b61121b81610f08565b811461122657600080fd5b5056fea2646970667358221220f52b9bfd8322954695f6bda849439882a060a25bea2e05bcb53e810f3141f2c064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1617 CODESIZE SUB DUP1 PUSH3 0x1617 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x19F JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP POP POP PUSH3 0x3A8 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7F SWAP1 PUSH3 0x2B9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xBE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xEF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x102 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x103 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x138 PUSH3 0x132 DUP5 PUSH3 0x24D JUMP JUMPDEST PUSH3 0x224 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x157 JUMPI PUSH3 0x156 PUSH3 0x388 JUMP JUMPDEST JUMPDEST PUSH3 0x164 DUP5 DUP3 DUP6 PUSH3 0x283 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x184 JUMPI PUSH3 0x183 PUSH3 0x383 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x196 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x121 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1B9 JUMPI PUSH3 0x1B8 PUSH3 0x392 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1DA JUMPI PUSH3 0x1D9 PUSH3 0x38D JUMP JUMPDEST JUMPDEST PUSH3 0x1E8 DUP6 DUP3 DUP7 ADD PUSH3 0x16C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x20C JUMPI PUSH3 0x20B PUSH3 0x38D JUMP JUMPDEST JUMPDEST PUSH3 0x21A DUP6 DUP3 DUP7 ADD PUSH3 0x16C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x230 PUSH3 0x243 JUMP JUMPDEST SWAP1 POP PUSH3 0x23E DUP3 DUP3 PUSH3 0x2EF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x26B JUMPI PUSH3 0x26A PUSH3 0x354 JUMP JUMPDEST JUMPDEST PUSH3 0x276 DUP3 PUSH3 0x397 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2A3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x286 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x2B3 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2D2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2E9 JUMPI PUSH3 0x2E8 PUSH3 0x325 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2FA DUP3 PUSH3 0x397 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x31C JUMPI PUSH3 0x31B PUSH3 0x354 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x125F DUP1 PUSH3 0x3B8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xAAA JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xF52 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xF52 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xE74 JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xF52 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xF52 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60E SWAP1 PUSH2 0xDE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x687 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0xD62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x765 SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77E DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E1 SWAP1 PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F7 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x86E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x865 SWAP1 PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D5 SWAP1 PUSH2 0xD42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E9 DUP4 DUP4 DUP4 PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x966 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA5D SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA70 DUP5 DUP5 DUP5 PUSH2 0xA7B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA8F DUP2 PUSH2 0x11FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAA4 DUP2 PUSH2 0x1212 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAC0 JUMPI PUSH2 0xABF PUSH2 0xFE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xACE DUP5 DUP3 DUP6 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAEE JUMPI PUSH2 0xAED PUSH2 0xFE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAFC DUP6 DUP3 DUP7 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB0D DUP6 DUP3 DUP7 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB30 JUMPI PUSH2 0xB2F PUSH2 0xFE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB3E DUP7 DUP3 DUP8 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xB4F DUP7 DUP3 DUP8 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xB60 DUP7 DUP3 DUP8 ADD PUSH2 0xA95 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB81 JUMPI PUSH2 0xB80 PUSH2 0xFE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB8F DUP6 DUP3 DUP7 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBA0 DUP6 DUP3 DUP7 ADD PUSH2 0xA95 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB3 DUP2 PUSH2 0xEDC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBC4 DUP3 PUSH2 0xE58 JUMP JUMPDEST PUSH2 0xBCE DUP2 DUP6 PUSH2 0xE63 JUMP JUMPDEST SWAP4 POP PUSH2 0xBDE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF1F JUMP JUMPDEST PUSH2 0xBE7 DUP2 PUSH2 0xFE7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBFF PUSH1 0x23 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC0A DUP3 PUSH2 0xFF8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC22 PUSH1 0x22 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC2D DUP3 PUSH2 0x1047 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC45 PUSH1 0x1D DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC50 DUP3 PUSH2 0x1096 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC68 PUSH1 0x26 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC73 DUP3 PUSH2 0x10BF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC8B PUSH1 0x25 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC96 DUP3 PUSH2 0x110E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCAE PUSH1 0x24 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xCB9 DUP3 PUSH2 0x115D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD1 PUSH1 0x25 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xCDC DUP3 PUSH2 0x11AC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF0 DUP2 PUSH2 0xF08 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xCFF DUP2 PUSH2 0xF12 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD1A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD3A DUP2 DUP5 PUSH2 0xBB9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD5B DUP2 PUSH2 0xBF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD7B DUP2 PUSH2 0xC15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD9B DUP2 PUSH2 0xC38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDBB DUP2 PUSH2 0xC5B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDDB DUP2 PUSH2 0xC7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDFB DUP2 PUSH2 0xCA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE1B DUP2 PUSH2 0xCC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE52 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7F DUP3 PUSH2 0xF08 JUMP JUMPDEST SWAP2 POP PUSH2 0xE8A DUP4 PUSH2 0xF08 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xEBF JUMPI PUSH2 0xEBE PUSH2 0xF84 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xED5 DUP3 PUSH2 0xEE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF3D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF22 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xF4C JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xF6A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xF7E JUMPI PUSH2 0xF7D PUSH2 0xFB3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1204 DUP2 PUSH2 0xECA JUMP JUMPDEST DUP2 EQ PUSH2 0x120F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x121B DUP2 PUSH2 0xF08 JUMP JUMPDEST DUP2 EQ PUSH2 0x1226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0x2B SWAP12 REVERT DUP4 0x22 SWAP6 CHAINID SWAP6 0xF6 0xBD 0xA8 0x49 NUMBER SWAP9 DUP3 LOG0 PUSH1 0xA2 JUMPDEST 0xEA 0x2E SDIV 0xBC 0xB5 RETURNDATACOPY DUP2 0xF BALANCE COINBASE CALLCODE 0xC0 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "1532:11312:1:-:0;;;1980:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2054:5;2046;:13;;;;;;;;;;;;:::i;:::-;;2079:7;2069;:17;;;;;;;;;;;;:::i;:::-;;1980:113;;1532:11312;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:421:5:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:112;;;293:79;;:::i;:::-;262:112;383:39;415:6;410:3;405;383:39;:::i;:::-;102:326;7:421;;;;;:::o;448:355::-;515:5;564:3;557:4;549:6;545:17;541:27;531:122;;572:79;;:::i;:::-;531:122;682:6;676:13;707:90;793:3;785:6;778:4;770:6;766:17;707:90;:::i;:::-;698:99;;521:282;448:355;;;;:::o;809:853::-;908:6;916;965:2;953:9;944:7;940:23;936:32;933:119;;;971:79;;:::i;:::-;933:119;1112:1;1101:9;1097:17;1091:24;1142:18;1134:6;1131:30;1128:117;;;1164:79;;:::i;:::-;1128:117;1269:74;1335:7;1326:6;1315:9;1311:22;1269:74;:::i;:::-;1259:84;;1062:291;1413:2;1402:9;1398:18;1392:25;1444:18;1436:6;1433:30;1430:117;;;1466:79;;:::i;:::-;1430:117;1571:74;1637:7;1628:6;1617:9;1613:22;1571:74;:::i;:::-;1561:84;;1363:292;809:853;;;;;:::o;1668:129::-;1702:6;1729:20;;:::i;:::-;1719:30;;1758:33;1786:4;1778:6;1758:33;:::i;:::-;1668:129;;;:::o;1803:75::-;1836:6;1869:2;1863:9;1853:19;;1803:75;:::o;1884:308::-;1946:4;2036:18;2028:6;2025:30;2022:56;;;2058:18;;:::i;:::-;2022:56;2096:29;2118:6;2096:29;:::i;:::-;2088:37;;2180:4;2174;2170:15;2162:23;;1884:308;;;:::o;2198:307::-;2266:1;2276:113;2290:6;2287:1;2284:13;2276:113;;;2375:1;2370:3;2366:11;2360:18;2356:1;2351:3;2347:11;2340:39;2312:2;2309:1;2305:10;2300:15;;2276:113;;;2407:6;2404:1;2401:13;2398:101;;;2487:1;2478:6;2473:3;2469:16;2462:27;2398:101;2247:258;2198:307;;;:::o;2511:320::-;2555:6;2592:1;2586:4;2582:12;2572:22;;2639:1;2633:4;2629:12;2660:18;2650:81;;2716:4;2708:6;2704:17;2694:27;;2650:81;2778:2;2770:6;2767:14;2747:18;2744:38;2741:84;;;2797:18;;:::i;:::-;2741:84;2562:269;2511:320;;;:::o;2837:281::-;2920:27;2942:4;2920:27;:::i;:::-;2912:6;2908:40;3050:6;3038:10;3035:22;3014:18;3002:10;2999:34;2996:62;2993:88;;;3061:18;;:::i;:::-;2993:88;3101:10;3097:2;3090:22;2880:238;2837:281;;:::o;3124:180::-;3172:77;3169:1;3162:88;3269:4;3266:1;3259:15;3293:4;3290:1;3283:15;3310:180;3358:77;3355:1;3348:88;3455:4;3452:1;3445:15;3479:4;3476:1;3469:15;3496:117;3605:1;3602;3595:12;3619:117;3728:1;3725;3718:12;3742:117;3851:1;3848;3841:12;3865:117;3974:1;3971;3964:12;3988:102;4029:6;4080:2;4076:7;4071:2;4064:5;4060:14;4056:28;4046:38;;3988:102;;;:::o;1532:11312:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1201": {
									"entryPoint": 2683,
									"id": 1201,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1136": {
									"entryPoint": 1447,
									"id": 1136,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1190": {
									"entryPoint": 2678,
									"id": 1190,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_1317": {
									"entryPoint": 1439,
									"id": 1317,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_1179": {
									"entryPoint": 1906,
									"id": 1179,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_962": {
									"entryPoint": 2046,
									"id": 962,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_757": {
									"entryPoint": 1304,
									"id": 757,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_782": {
									"entryPoint": 776,
									"id": 782,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_714": {
									"entryPoint": 932,
									"id": 714,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_690": {
									"entryPoint": 868,
									"id": 690,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_885": {
									"entryPoint": 1150,
									"id": 885,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_844": {
									"entryPoint": 877,
									"id": 844,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_670": {
									"entryPoint": 630,
									"id": 670,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_680": {
									"entryPoint": 1004,
									"id": 680,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_700": {
									"entryPoint": 811,
									"id": 700,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_815": {
									"entryPoint": 821,
									"id": 815,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_739": {
									"entryPoint": 1269,
									"id": 739,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2922,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3268,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3333,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3394,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3554,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3672,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3816,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3858,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 3871,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3922,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3972,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4019,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4066,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4071,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f": {
									"entryPoint": 4088,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029": {
									"entryPoint": 4167,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe": {
									"entryPoint": 4246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6": {
									"entryPoint": 4287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea": {
									"entryPoint": 4366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208": {
									"entryPoint": 4445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8": {
									"entryPoint": 4524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4626,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13861:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "7:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:5",
														"type": ""
													}
												],
												"src": "152:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "411:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "411:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "411:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "384:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "393:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "376:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:32:5"
															},
															"nodeType": "YulIf",
															"src": "373:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "502:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "517:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "531:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "521:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "546:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "581:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "592:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "577:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "577:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "601:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "556:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "556:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "546:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "333:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "344:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "356:6:5",
														"type": ""
													}
												],
												"src": "297:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "715:391:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "761:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "763:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "763:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "763:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "736:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "745:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "732:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "732:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "757:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "728:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "728:32:5"
															},
															"nodeType": "YulIf",
															"src": "725:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "854:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "869:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "883:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "873:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "898:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "933:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "944:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "929:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "929:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "953:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "908:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "908:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "898:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "981:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "996:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1010:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1000:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1026:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1061:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1072:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1057:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1057:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1081:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1036:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1026:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "677:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "688:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "700:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "708:6:5",
														"type": ""
													}
												],
												"src": "632:474:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1212:519:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1258:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1260:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1260:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1260:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1233:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1242:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1229:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1229:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1254:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1225:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1225:32:5"
															},
															"nodeType": "YulIf",
															"src": "1222:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1351:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1366:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1380:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1370:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1395:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1430:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1441:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1426:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1426:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1450:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1405:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1405:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1395:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1478:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1493:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1507:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1497:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1523:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1558:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1569:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1554:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1554:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1578:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1533:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1533:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1523:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1606:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1621:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1635:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1625:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1651:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1686:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1697:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1682:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1682:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1706:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1661:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1661:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1651:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1166:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1177:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1189:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1197:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1205:6:5",
														"type": ""
													}
												],
												"src": "1112:619:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1820:391:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1868:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1868:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1868:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1841:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1850:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1837:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1837:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1862:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1833:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1833:32:5"
															},
															"nodeType": "YulIf",
															"src": "1830:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1959:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1974:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1988:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1978:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2003:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2038:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2049:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2034:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2034:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2058:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2013:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2013:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2003:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2086:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2101:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2115:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2105:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2131:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2166:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2177:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2162:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2162:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2186:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2141:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2141:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2131:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1782:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1793:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1805:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1813:6:5",
														"type": ""
													}
												],
												"src": "1737:474:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2276:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2293:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2313:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2298:14:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2298:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2286:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2286:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2286:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2264:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2271:3:5",
														"type": ""
													}
												],
												"src": "2217:109:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2424:272:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2434:53:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2481:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2448:32:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2448:39:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2438:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2496:78:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2562:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2567:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2503:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2503:71:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2496:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2609:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2616:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2605:16:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2623:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2628:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2583:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2583:52:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2583:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2644:46:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2655:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2682:6:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2660:21:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2660:29:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2651:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2651:39:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2644:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2405:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2412:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2420:3:5",
														"type": ""
													}
												],
												"src": "2332:364:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2848:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2858:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2924:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2929:2:5",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2865:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2865:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2858:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3030:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																	"nodeType": "YulIdentifier",
																	"src": "2941:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2941:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2941:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3043:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3054:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3059:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3050:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3050:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3043:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2836:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2844:3:5",
														"type": ""
													}
												],
												"src": "2702:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3220:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3230:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3296:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3301:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3237:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3237:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3230:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3402:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																	"nodeType": "YulIdentifier",
																	"src": "3313:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3313:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3313:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3415:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3426:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3431:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3422:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3422:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3415:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3208:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3216:3:5",
														"type": ""
													}
												],
												"src": "3074:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3592:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3602:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3668:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3673:2:5",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3609:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3609:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3602:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3774:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																	"nodeType": "YulIdentifier",
																	"src": "3685:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3685:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3685:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3787:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3798:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3803:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3794:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3794:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3787:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3580:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3588:3:5",
														"type": ""
													}
												],
												"src": "3446:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3964:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3974:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4040:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4045:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3981:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3981:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3974:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4146:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"nodeType": "YulIdentifier",
																	"src": "4057:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4057:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4057:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4159:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4170:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4175:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4166:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4166:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4159:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3952:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3960:3:5",
														"type": ""
													}
												],
												"src": "3818:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4336:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4346:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4412:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4417:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4353:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4353:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4346:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4518:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																	"nodeType": "YulIdentifier",
																	"src": "4429:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4429:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4429:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4531:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4542:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4547:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4538:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4538:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4531:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4324:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4332:3:5",
														"type": ""
													}
												],
												"src": "4190:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4708:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4718:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4784:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4789:2:5",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4725:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4725:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4718:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4890:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																	"nodeType": "YulIdentifier",
																	"src": "4801:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4801:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4801:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4903:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4914:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4919:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4910:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4910:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4903:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4696:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4704:3:5",
														"type": ""
													}
												],
												"src": "4562:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5080:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5090:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5156:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5161:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5097:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5097:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5090:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5262:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																	"nodeType": "YulIdentifier",
																	"src": "5173:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5173:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5173:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5275:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5286:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5291:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5282:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5282:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5275:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5068:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5076:3:5",
														"type": ""
													}
												],
												"src": "4934:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5371:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5388:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5411:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5393:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5393:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5381:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5381:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5381:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5359:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5366:3:5",
														"type": ""
													}
												],
												"src": "5306:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5491:51:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5508:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5529:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "5513:15:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5513:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5501:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5501:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5501:35:5"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5479:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5486:3:5",
														"type": ""
													}
												],
												"src": "5430:112:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5640:118:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5650:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5662:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5673:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5658:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5658:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5650:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5724:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5737:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5748:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5733:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5733:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5686:37:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5686:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5686:65:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5612:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5624:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5635:4:5",
														"type": ""
													}
												],
												"src": "5548:210:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5882:195:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5892:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5904:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5915:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5900:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5900:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5892:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5939:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5950:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5935:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5935:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5958:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5964:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5954:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5954:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5928:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5928:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5928:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5984:86:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6056:6:5"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6065:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5992:63:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5992:78:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5984:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5854:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5866:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5877:4:5",
														"type": ""
													}
												],
												"src": "5764:313:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6254:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6264:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6276:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6287:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6272:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6272:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6264:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6311:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6322:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6307:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6307:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6330:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6336:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6326:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6326:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6300:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6300:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6300:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6356:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6490:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6364:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6364:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6356:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6234:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6249:4:5",
														"type": ""
													}
												],
												"src": "6083:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6679:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6689:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6701:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6712:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6697:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6697:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6689:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6736:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6747:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6732:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6732:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6755:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6761:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6751:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6751:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6725:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6725:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6725:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6781:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6915:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6789:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6789:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6781:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6659:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6674:4:5",
														"type": ""
													}
												],
												"src": "6508:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7104:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7114:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7126:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7137:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7122:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7122:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7114:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7161:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7172:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7157:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7157:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7180:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7186:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7176:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7176:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7150:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7150:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7150:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7206:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7340:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7214:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7214:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7206:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7084:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7099:4:5",
														"type": ""
													}
												],
												"src": "6933:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7529:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7539:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7551:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7562:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7547:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7547:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7539:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7586:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7597:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7582:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7582:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7605:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7611:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7601:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7601:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7575:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7575:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7575:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7631:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7765:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7639:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7639:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7631:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7509:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7524:4:5",
														"type": ""
													}
												],
												"src": "7358:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7954:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7964:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7976:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7987:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7972:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7972:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7964:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8011:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8022:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8007:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8007:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8030:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8036:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8026:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8026:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8000:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8000:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8000:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8056:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8190:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8064:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8064:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8056:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7934:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7949:4:5",
														"type": ""
													}
												],
												"src": "7783:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8379:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8389:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8401:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8412:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8397:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8397:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8389:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8436:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8447:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8432:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8432:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8455:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8461:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8451:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8451:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8425:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8425:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8425:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8481:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8615:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8489:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8489:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8481:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8359:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8374:4:5",
														"type": ""
													}
												],
												"src": "8208:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8804:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8814:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8826:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8837:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8822:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8822:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8814:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8861:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8872:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8857:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8857:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8880:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8886:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8876:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8876:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8850:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8850:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8850:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8906:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9040:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8914:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8914:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8906:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8784:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8799:4:5",
														"type": ""
													}
												],
												"src": "8633:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9156:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9166:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9178:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9189:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9174:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9174:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9166:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9246:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9259:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9270:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9255:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9255:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9202:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9202:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9202:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9128:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9140:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9151:4:5",
														"type": ""
													}
												],
												"src": "9058:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9380:120:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9390:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9402:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9413:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9398:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9398:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9390:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9466:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9479:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9490:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9475:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9475:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9426:39:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9426:67:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9426:67:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9352:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9364:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9375:4:5",
														"type": ""
													}
												],
												"src": "9286:214:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9546:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9556:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9572:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9566:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9566:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "9556:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9539:6:5",
														"type": ""
													}
												],
												"src": "9506:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9646:40:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9657:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9673:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9667:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9667:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "9657:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9629:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9639:6:5",
														"type": ""
													}
												],
												"src": "9587:99:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9788:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9805:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9810:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9798:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9798:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9798:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9826:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9845:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9850:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9841:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9841:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9826:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9760:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9765:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "9776:11:5",
														"type": ""
													}
												],
												"src": "9692:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9911:261:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9921:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9944:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9926:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9926:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9921:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9955:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9978:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9960:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9960:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9955:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10118:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10120:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10120:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10120:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10039:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10046:66:5",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10114:1:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10042:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10042:74:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10036:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10036:81:5"
															},
															"nodeType": "YulIf",
															"src": "10033:107:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10150:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10161:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10164:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10157:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10157:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10150:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9898:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9901:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9907:3:5",
														"type": ""
													}
												],
												"src": "9867:305:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10223:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10233:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10262:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "10244:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10244:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10233:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10205:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10215:7:5",
														"type": ""
													}
												],
												"src": "10178:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10322:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10332:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10357:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10350:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10350:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10343:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10343:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10332:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10304:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10314:7:5",
														"type": ""
													}
												],
												"src": "10280:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10421:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10431:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10446:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10453:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10442:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10442:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10431:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10403:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10413:7:5",
														"type": ""
													}
												],
												"src": "10376:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10553:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10563:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "10574:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10563:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10535:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10545:7:5",
														"type": ""
													}
												],
												"src": "10508:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10634:43:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10644:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10659:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10666:4:5",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10655:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10655:16:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10644:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10616:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10626:7:5",
														"type": ""
													}
												],
												"src": "10591:86:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10732:258:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10742:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10751:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "10746:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10811:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10836:3:5"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "10841:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10832:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10832:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "10855:3:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "10860:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "10851:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10851:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "10845:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10845:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10825:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10825:39:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10825:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10772:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10775:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10769:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10769:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10783:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10785:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "10794:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10797:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10790:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10790:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "10785:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10765:3:5",
																"statements": []
															},
															"src": "10761:113:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10908:76:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10958:3:5"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "10963:6:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10954:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10954:16:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10972:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10947:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10947:27:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10947:27:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10889:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10892:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10886:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10886:13:5"
															},
															"nodeType": "YulIf",
															"src": "10883:101:5"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "10714:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "10719:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10724:6:5",
														"type": ""
													}
												],
												"src": "10683:307:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11047:269:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11057:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11071:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11077:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11067:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11067:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "11057:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11088:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11118:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11124:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11114:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11114:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "11092:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11165:51:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11179:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "11193:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11201:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "11189:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11189:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11179:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11145:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11138:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11138:26:5"
															},
															"nodeType": "YulIf",
															"src": "11135:81:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11268:42:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "11282:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11282:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11282:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11232:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11255:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11263:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "11252:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11252:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11229:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11229:38:5"
															},
															"nodeType": "YulIf",
															"src": "11226:84:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "11031:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11040:6:5",
														"type": ""
													}
												],
												"src": "10996:320:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11350:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11367:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11370:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11360:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11360:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11360:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11464:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11467:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11457:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11457:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11457:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11488:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11491:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11481:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11481:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11481:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11322:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11536:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11553:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11556:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11546:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11546:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11546:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11650:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11653:4:5",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11643:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11643:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11643:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11674:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11677:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11667:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11667:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11667:15:5"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "11508:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11783:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11800:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11803:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11793:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11793:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11793:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "11694:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11906:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11923:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11926:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11916:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11916:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11916:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "11817:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11988:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11998:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12016:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12023:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12012:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12012:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12032:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "12028:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12028:7:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12008:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12008:28:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "11998:6:5"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11971:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "11981:6:5",
														"type": ""
													}
												],
												"src": "11940:102:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12154:116:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12176:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12184:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12172:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12172:14:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12188:34:5",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12165:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12165:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12165:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12244:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12252:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12240:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12240:15:5"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12257:5:5",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12233:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12233:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12233:30:5"
														}
													]
												},
												"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12146:6:5",
														"type": ""
													}
												],
												"src": "12048:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12382:115:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12404:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12412:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12400:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12400:14:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12416:34:5",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12393:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12393:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12393:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12472:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12480:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12468:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12468:15:5"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12485:4:5",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12461:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12461:29:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12461:29:5"
														}
													]
												},
												"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12374:6:5",
														"type": ""
													}
												],
												"src": "12276:221:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12609:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12631:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12639:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12627:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12627:14:5"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12643:31:5",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12620:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12620:55:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12620:55:5"
														}
													]
												},
												"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12601:6:5",
														"type": ""
													}
												],
												"src": "12503:179:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12794:119:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12816:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12824:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12812:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12812:14:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12828:34:5",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12805:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12805:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12805:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12884:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12892:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12880:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12880:15:5"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12897:8:5",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12873:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12873:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12873:33:5"
														}
													]
												},
												"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12786:6:5",
														"type": ""
													}
												],
												"src": "12688:225:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13025:118:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13047:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13055:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13043:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13043:14:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13059:34:5",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13036:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13036:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13036:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13115:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13123:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13111:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13111:15:5"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13128:7:5",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13104:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13104:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13104:32:5"
														}
													]
												},
												"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13017:6:5",
														"type": ""
													}
												],
												"src": "12919:224:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13255:117:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13277:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13285:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13273:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13273:14:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13289:34:5",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13266:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13266:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13266:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13345:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13353:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13341:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13341:15:5"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13358:6:5",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13334:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13334:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13334:31:5"
														}
													]
												},
												"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13247:6:5",
														"type": ""
													}
												],
												"src": "13149:223:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13484:118:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13506:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13514:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13502:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13502:14:5"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13518:34:5",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13495:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13495:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13495:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13574:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13582:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13570:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13570:15:5"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13587:7:5",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13563:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13563:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13563:32:5"
														}
													]
												},
												"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13476:6:5",
														"type": ""
													}
												],
												"src": "13378:224:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13651:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13708:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13717:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13720:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13710:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13710:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13710:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13674:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13699:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "13681:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13681:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13671:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13671:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13664:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13664:43:5"
															},
															"nodeType": "YulIf",
															"src": "13661:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13644:5:5",
														"type": ""
													}
												],
												"src": "13608:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13779:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13836:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13845:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13848:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13838:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13838:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13838:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13802:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13827:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "13809:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13809:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13799:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13799:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13792:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13792:43:5"
															},
															"nodeType": "YulIf",
															"src": "13789:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13772:5:5",
														"type": ""
													}
												],
												"src": "13736:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610d20565b60405180910390f35b6100e660048036038101906100e19190610b6a565b610308565b6040516100f39190610d05565b60405180910390f35b61010461032b565b6040516101119190610e22565b60405180910390f35b610134600480360381019061012f9190610b17565b610335565b6040516101419190610d05565b60405180910390f35b610152610364565b60405161015f9190610e3d565b60405180910390f35b610182600480360381019061017d9190610b6a565b61036d565b60405161018f9190610d05565b60405180910390f35b6101b260048036038101906101ad9190610aaa565b6103a4565b6040516101bf9190610e22565b60405180910390f35b6101d06103ec565b6040516101dd9190610d20565b60405180910390f35b61020060048036038101906101fb9190610b6a565b61047e565b60405161020d9190610d05565b60405180910390f35b610230600480360381019061022b9190610b6a565b6104f5565b60405161023d9190610d05565b60405180910390f35b610260600480360381019061025b9190610ad7565b610518565b60405161026d9190610e22565b60405180910390f35b60606003805461028590610f52565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610f52565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610772565b6103588585856107fe565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610e74565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610f52565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610f52565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e02565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fe565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90610de2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610687576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067e90610d62565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107659190610e22565b60405180910390a3505050565b600061077e8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f857818110156107ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e190610d82565b60405180910390fd5b6107f784848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561086e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086590610dc2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d590610d42565b60405180910390fd5b6108e9838383610a76565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096690610da2565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a5d9190610e22565b60405180910390a3610a70848484610a7b565b50505050565b505050565b505050565b600081359050610a8f816111fb565b92915050565b600081359050610aa481611212565b92915050565b600060208284031215610ac057610abf610fe2565b5b6000610ace84828501610a80565b91505092915050565b60008060408385031215610aee57610aed610fe2565b5b6000610afc85828601610a80565b9250506020610b0d85828601610a80565b9150509250929050565b600080600060608486031215610b3057610b2f610fe2565b5b6000610b3e86828701610a80565b9350506020610b4f86828701610a80565b9250506040610b6086828701610a95565b9150509250925092565b60008060408385031215610b8157610b80610fe2565b5b6000610b8f85828601610a80565b9250506020610ba085828601610a95565b9150509250929050565b610bb381610edc565b82525050565b6000610bc482610e58565b610bce8185610e63565b9350610bde818560208601610f1f565b610be781610fe7565b840191505092915050565b6000610bff602383610e63565b9150610c0a82610ff8565b604082019050919050565b6000610c22602283610e63565b9150610c2d82611047565b604082019050919050565b6000610c45601d83610e63565b9150610c5082611096565b602082019050919050565b6000610c68602683610e63565b9150610c73826110bf565b604082019050919050565b6000610c8b602583610e63565b9150610c968261110e565b604082019050919050565b6000610cae602483610e63565b9150610cb98261115d565b604082019050919050565b6000610cd1602583610e63565b9150610cdc826111ac565b604082019050919050565b610cf081610f08565b82525050565b610cff81610f12565b82525050565b6000602082019050610d1a6000830184610baa565b92915050565b60006020820190508181036000830152610d3a8184610bb9565b905092915050565b60006020820190508181036000830152610d5b81610bf2565b9050919050565b60006020820190508181036000830152610d7b81610c15565b9050919050565b60006020820190508181036000830152610d9b81610c38565b9050919050565b60006020820190508181036000830152610dbb81610c5b565b9050919050565b60006020820190508181036000830152610ddb81610c7e565b9050919050565b60006020820190508181036000830152610dfb81610ca1565b9050919050565b60006020820190508181036000830152610e1b81610cc4565b9050919050565b6000602082019050610e376000830184610ce7565b92915050565b6000602082019050610e526000830184610cf6565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610e7f82610f08565b9150610e8a83610f08565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ebf57610ebe610f84565b5b828201905092915050565b6000610ed582610ee8565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015610f3d578082015181840152602081019050610f22565b83811115610f4c576000848401525b50505050565b60006002820490506001821680610f6a57607f821691505b60208210811415610f7e57610f7d610fb3565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b61120481610eca565b811461120f57600080fd5b50565b61121b81610f08565b811461122657600080fd5b5056fea2646970667358221220f52b9bfd8322954695f6bda849439882a060a25bea2e05bcb53e810f3141f2c064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xB17 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xAAA JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xB6A JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xF52 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xF52 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xE74 JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xF52 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xF52 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60E SWAP1 PUSH2 0xDE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x687 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0xD62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x765 SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77E DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E1 SWAP1 PUSH2 0xD82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F7 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x86E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x865 SWAP1 PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D5 SWAP1 PUSH2 0xD42 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E9 DUP4 DUP4 DUP4 PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x966 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA5D SWAP2 SWAP1 PUSH2 0xE22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA70 DUP5 DUP5 DUP5 PUSH2 0xA7B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA8F DUP2 PUSH2 0x11FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAA4 DUP2 PUSH2 0x1212 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAC0 JUMPI PUSH2 0xABF PUSH2 0xFE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xACE DUP5 DUP3 DUP6 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAEE JUMPI PUSH2 0xAED PUSH2 0xFE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xAFC DUP6 DUP3 DUP7 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB0D DUP6 DUP3 DUP7 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB30 JUMPI PUSH2 0xB2F PUSH2 0xFE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB3E DUP7 DUP3 DUP8 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xB4F DUP7 DUP3 DUP8 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xB60 DUP7 DUP3 DUP8 ADD PUSH2 0xA95 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB81 JUMPI PUSH2 0xB80 PUSH2 0xFE2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB8F DUP6 DUP3 DUP7 ADD PUSH2 0xA80 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBA0 DUP6 DUP3 DUP7 ADD PUSH2 0xA95 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB3 DUP2 PUSH2 0xEDC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBC4 DUP3 PUSH2 0xE58 JUMP JUMPDEST PUSH2 0xBCE DUP2 DUP6 PUSH2 0xE63 JUMP JUMPDEST SWAP4 POP PUSH2 0xBDE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF1F JUMP JUMPDEST PUSH2 0xBE7 DUP2 PUSH2 0xFE7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBFF PUSH1 0x23 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC0A DUP3 PUSH2 0xFF8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC22 PUSH1 0x22 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC2D DUP3 PUSH2 0x1047 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC45 PUSH1 0x1D DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC50 DUP3 PUSH2 0x1096 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC68 PUSH1 0x26 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC73 DUP3 PUSH2 0x10BF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC8B PUSH1 0x25 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xC96 DUP3 PUSH2 0x110E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCAE PUSH1 0x24 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xCB9 DUP3 PUSH2 0x115D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD1 PUSH1 0x25 DUP4 PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP PUSH2 0xCDC DUP3 PUSH2 0x11AC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCF0 DUP2 PUSH2 0xF08 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xCFF DUP2 PUSH2 0xF12 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD1A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD3A DUP2 DUP5 PUSH2 0xBB9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD5B DUP2 PUSH2 0xBF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD7B DUP2 PUSH2 0xC15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD9B DUP2 PUSH2 0xC38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDBB DUP2 PUSH2 0xC5B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDDB DUP2 PUSH2 0xC7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xDFB DUP2 PUSH2 0xCA1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE1B DUP2 PUSH2 0xCC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE52 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7F DUP3 PUSH2 0xF08 JUMP JUMPDEST SWAP2 POP PUSH2 0xE8A DUP4 PUSH2 0xF08 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xEBF JUMPI PUSH2 0xEBE PUSH2 0xF84 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xED5 DUP3 PUSH2 0xEE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF3D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF22 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xF4C JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xF6A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xF7E JUMPI PUSH2 0xF7D PUSH2 0xFB3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1204 DUP2 PUSH2 0xECA JUMP JUMPDEST DUP2 EQ PUSH2 0x120F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x121B DUP2 PUSH2 0xF08 JUMP JUMPDEST DUP2 EQ PUSH2 0x1226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0x2B SWAP12 REVERT DUP4 0x22 SWAP6 CHAINID SWAP6 0xF6 0xBD 0xA8 0x49 NUMBER SWAP9 DUP3 LOG0 PUSH1 0xA2 JUMPDEST 0xEA 0x2E SDIV 0xBC 0xB5 RETURNDATACOPY DUP2 0xF BALANCE COINBASE CALLCODE 0xC0 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "1532:11312:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3255:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5203:256;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3104:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5854:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3419:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2369:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6575:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3740:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3987:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2158:98;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;4543:13;4559:12;:10;:12::i;:::-;4543:28;;4581:32;4590:5;4597:7;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;:::o;3255:106::-;3316:7;3342:12;;3335:19;;3255:106;:::o;5203:256::-;5300:4;5316:15;5334:12;:10;:12::i;:::-;5316:30;;5356:38;5372:4;5378:7;5387:6;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;5448:4;5441:11;;;5203:256;;;;;:::o;3104:91::-;3162:5;3186:2;3179:9;;3104:91;:::o;5854:234::-;5942:4;5958:13;5974:12;:10;:12::i;:::-;5958:28;;5996:64;6005:5;6012:7;6049:10;6021:25;6031:5;6038:7;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;:::-;6077:4;6070:11;;;5854:234;;;;:::o;3419:125::-;3493:7;3519:9;:18;3529:7;3519:18;;;;;;;;;;;;;;;;3512:25;;3419:125;;;:::o;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2369:102;:::o;6575:427::-;6668:4;6684:13;6700:12;:10;:12::i;:::-;6684:28;;6722:24;6749:25;6759:5;6766:7;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;:::-;6991:4;6984:11;;;;6575:427;;;;:::o;3740:189::-;3819:4;3835:13;3851:12;:10;:12::i;:::-;3835:28;;3873;3883:5;3890:2;3894:6;3873:9;:28::i;:::-;3918:4;3911:11;;;3740:189;;;;:::o;3987:149::-;4076:7;4102:11;:18;4114:5;4102:18;;;;;;;;;;;;;;;:27;4121:7;4102:27;;;;;;;;;;;;;;;;4095:34;;3987:149;;;;:::o;640:96:4:-;693:7;719:10;712:17;;640:96;:::o;10457:340:1:-;10575:1;10558:19;;:5;:19;;;;10550:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10655:1;10636:21;;:7;:21;;;;10628:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10737:6;10707:11;:18;10719:5;10707:18;;;;;;;;;;;;;;;:27;10726:7;10707:27;;;;;;;;;;;;;;;:36;;;;10774:7;10758:32;;10767:5;10758:32;;;10783:6;10758:32;;;;;;:::i;:::-;;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;11264:17;11244:16;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11240:243;11168:321;11078:411;;;:::o;7456:788::-;7568:1;7552:18;;:4;:18;;;;7544:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7644:1;7630:16;;:2;:16;;;;7622:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:38;7718:4;7724:2;7728:6;7697:20;:38::i;:::-;7746:19;7768:9;:15;7778:4;7768:15;;;;;;;;;;;;;;;;7746:37;;7816:6;7801:11;:21;;7793:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7931:6;7917:11;:20;7899:9;:15;7909:4;7899:15;;;;;;;;;;;;;;;:38;;;;8131:6;8114:9;:13;8124:2;8114:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8178:2;8163:26;;8172:4;8163:26;;;8182:6;8163:26;;;;;;:::i;:::-;;;;;;;;8200:37;8220:4;8226:2;8230:6;8200:19;:37::i;:::-;7534:710;7456:788;;;:::o;12073:91::-;;;;:::o;12752:90::-;;;;:::o;7:139:5:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:329::-;356:6;405:2;393:9;384:7;380:23;376:32;373:119;;;411:79;;:::i;:::-;373:119;531:1;556:53;601:7;592:6;581:9;577:22;556:53;:::i;:::-;546:63;;502:117;297:329;;;;:::o;632:474::-;700:6;708;757:2;745:9;736:7;732:23;728:32;725:119;;;763:79;;:::i;:::-;725:119;883:1;908:53;953:7;944:6;933:9;929:22;908:53;:::i;:::-;898:63;;854:117;1010:2;1036:53;1081:7;1072:6;1061:9;1057:22;1036:53;:::i;:::-;1026:63;;981:118;632:474;;;;;:::o;1112:619::-;1189:6;1197;1205;1254:2;1242:9;1233:7;1229:23;1225:32;1222:119;;;1260:79;;:::i;:::-;1222:119;1380:1;1405:53;1450:7;1441:6;1430:9;1426:22;1405:53;:::i;:::-;1395:63;;1351:117;1507:2;1533:53;1578:7;1569:6;1558:9;1554:22;1533:53;:::i;:::-;1523:63;;1478:118;1635:2;1661:53;1706:7;1697:6;1686:9;1682:22;1661:53;:::i;:::-;1651:63;;1606:118;1112:619;;;;;:::o;1737:474::-;1805:6;1813;1862:2;1850:9;1841:7;1837:23;1833:32;1830:119;;;1868:79;;:::i;:::-;1830:119;1988:1;2013:53;2058:7;2049:6;2038:9;2034:22;2013:53;:::i;:::-;2003:63;;1959:117;2115:2;2141:53;2186:7;2177:6;2166:9;2162:22;2141:53;:::i;:::-;2131:63;;2086:118;1737:474;;;;;:::o;2217:109::-;2298:21;2313:5;2298:21;:::i;:::-;2293:3;2286:34;2217:109;;:::o;2332:364::-;2420:3;2448:39;2481:5;2448:39;:::i;:::-;2503:71;2567:6;2562:3;2503:71;:::i;:::-;2496:78;;2583:52;2628:6;2623:3;2616:4;2609:5;2605:16;2583:52;:::i;:::-;2660:29;2682:6;2660:29;:::i;:::-;2655:3;2651:39;2644:46;;2424:272;2332:364;;;;:::o;2702:366::-;2844:3;2865:67;2929:2;2924:3;2865:67;:::i;:::-;2858:74;;2941:93;3030:3;2941:93;:::i;:::-;3059:2;3054:3;3050:12;3043:19;;2702:366;;;:::o;3074:::-;3216:3;3237:67;3301:2;3296:3;3237:67;:::i;:::-;3230:74;;3313:93;3402:3;3313:93;:::i;:::-;3431:2;3426:3;3422:12;3415:19;;3074:366;;;:::o;3446:::-;3588:3;3609:67;3673:2;3668:3;3609:67;:::i;:::-;3602:74;;3685:93;3774:3;3685:93;:::i;:::-;3803:2;3798:3;3794:12;3787:19;;3446:366;;;:::o;3818:::-;3960:3;3981:67;4045:2;4040:3;3981:67;:::i;:::-;3974:74;;4057:93;4146:3;4057:93;:::i;:::-;4175:2;4170:3;4166:12;4159:19;;3818:366;;;:::o;4190:::-;4332:3;4353:67;4417:2;4412:3;4353:67;:::i;:::-;4346:74;;4429:93;4518:3;4429:93;:::i;:::-;4547:2;4542:3;4538:12;4531:19;;4190:366;;;:::o;4562:::-;4704:3;4725:67;4789:2;4784:3;4725:67;:::i;:::-;4718:74;;4801:93;4890:3;4801:93;:::i;:::-;4919:2;4914:3;4910:12;4903:19;;4562:366;;;:::o;4934:::-;5076:3;5097:67;5161:2;5156:3;5097:67;:::i;:::-;5090:74;;5173:93;5262:3;5173:93;:::i;:::-;5291:2;5286:3;5282:12;5275:19;;4934:366;;;:::o;5306:118::-;5393:24;5411:5;5393:24;:::i;:::-;5388:3;5381:37;5306:118;;:::o;5430:112::-;5513:22;5529:5;5513:22;:::i;:::-;5508:3;5501:35;5430:112;;:::o;5548:210::-;5635:4;5673:2;5662:9;5658:18;5650:26;;5686:65;5748:1;5737:9;5733:17;5724:6;5686:65;:::i;:::-;5548:210;;;;:::o;5764:313::-;5877:4;5915:2;5904:9;5900:18;5892:26;;5964:9;5958:4;5954:20;5950:1;5939:9;5935:17;5928:47;5992:78;6065:4;6056:6;5992:78;:::i;:::-;5984:86;;5764:313;;;;:::o;6083:419::-;6249:4;6287:2;6276:9;6272:18;6264:26;;6336:9;6330:4;6326:20;6322:1;6311:9;6307:17;6300:47;6364:131;6490:4;6364:131;:::i;:::-;6356:139;;6083:419;;;:::o;6508:::-;6674:4;6712:2;6701:9;6697:18;6689:26;;6761:9;6755:4;6751:20;6747:1;6736:9;6732:17;6725:47;6789:131;6915:4;6789:131;:::i;:::-;6781:139;;6508:419;;;:::o;6933:::-;7099:4;7137:2;7126:9;7122:18;7114:26;;7186:9;7180:4;7176:20;7172:1;7161:9;7157:17;7150:47;7214:131;7340:4;7214:131;:::i;:::-;7206:139;;6933:419;;;:::o;7358:::-;7524:4;7562:2;7551:9;7547:18;7539:26;;7611:9;7605:4;7601:20;7597:1;7586:9;7582:17;7575:47;7639:131;7765:4;7639:131;:::i;:::-;7631:139;;7358:419;;;:::o;7783:::-;7949:4;7987:2;7976:9;7972:18;7964:26;;8036:9;8030:4;8026:20;8022:1;8011:9;8007:17;8000:47;8064:131;8190:4;8064:131;:::i;:::-;8056:139;;7783:419;;;:::o;8208:::-;8374:4;8412:2;8401:9;8397:18;8389:26;;8461:9;8455:4;8451:20;8447:1;8436:9;8432:17;8425:47;8489:131;8615:4;8489:131;:::i;:::-;8481:139;;8208:419;;;:::o;8633:::-;8799:4;8837:2;8826:9;8822:18;8814:26;;8886:9;8880:4;8876:20;8872:1;8861:9;8857:17;8850:47;8914:131;9040:4;8914:131;:::i;:::-;8906:139;;8633:419;;;:::o;9058:222::-;9151:4;9189:2;9178:9;9174:18;9166:26;;9202:71;9270:1;9259:9;9255:17;9246:6;9202:71;:::i;:::-;9058:222;;;;:::o;9286:214::-;9375:4;9413:2;9402:9;9398:18;9390:26;;9426:67;9490:1;9479:9;9475:17;9466:6;9426:67;:::i;:::-;9286:214;;;;:::o;9587:99::-;9639:6;9673:5;9667:12;9657:22;;9587:99;;;:::o;9692:169::-;9776:11;9810:6;9805:3;9798:19;9850:4;9845:3;9841:14;9826:29;;9692:169;;;;:::o;9867:305::-;9907:3;9926:20;9944:1;9926:20;:::i;:::-;9921:25;;9960:20;9978:1;9960:20;:::i;:::-;9955:25;;10114:1;10046:66;10042:74;10039:1;10036:81;10033:107;;;10120:18;;:::i;:::-;10033:107;10164:1;10161;10157:9;10150:16;;9867:305;;;;:::o;10178:96::-;10215:7;10244:24;10262:5;10244:24;:::i;:::-;10233:35;;10178:96;;;:::o;10280:90::-;10314:7;10357:5;10350:13;10343:21;10332:32;;10280:90;;;:::o;10376:126::-;10413:7;10453:42;10446:5;10442:54;10431:65;;10376:126;;;:::o;10508:77::-;10545:7;10574:5;10563:16;;10508:77;;;:::o;10591:86::-;10626:7;10666:4;10659:5;10655:16;10644:27;;10591:86;;;:::o;10683:307::-;10751:1;10761:113;10775:6;10772:1;10769:13;10761:113;;;10860:1;10855:3;10851:11;10845:18;10841:1;10836:3;10832:11;10825:39;10797:2;10794:1;10790:10;10785:15;;10761:113;;;10892:6;10889:1;10886:13;10883:101;;;10972:1;10963:6;10958:3;10954:16;10947:27;10883:101;10732:258;10683:307;;;:::o;10996:320::-;11040:6;11077:1;11071:4;11067:12;11057:22;;11124:1;11118:4;11114:12;11145:18;11135:81;;11201:4;11193:6;11189:17;11179:27;;11135:81;11263:2;11255:6;11252:14;11232:18;11229:38;11226:84;;;11282:18;;:::i;:::-;11226:84;11047:269;10996:320;;;:::o;11322:180::-;11370:77;11367:1;11360:88;11467:4;11464:1;11457:15;11491:4;11488:1;11481:15;11508:180;11556:77;11553:1;11546:88;11653:4;11650:1;11643:15;11677:4;11674:1;11667:15;11817:117;11926:1;11923;11916:12;11940:102;11981:6;12032:2;12028:7;12023:2;12016:5;12012:14;12008:28;11998:38;;11940:102;;;:::o;12048:222::-;12188:34;12184:1;12176:6;12172:14;12165:58;12257:5;12252:2;12244:6;12240:15;12233:30;12048:222;:::o;12276:221::-;12416:34;12412:1;12404:6;12400:14;12393:58;12485:4;12480:2;12472:6;12468:15;12461:29;12276:221;:::o;12503:179::-;12643:31;12639:1;12631:6;12627:14;12620:55;12503:179;:::o;12688:225::-;12828:34;12824:1;12816:6;12812:14;12805:58;12897:8;12892:2;12884:6;12880:15;12873:33;12688:225;:::o;12919:224::-;13059:34;13055:1;13047:6;13043:14;13036:58;13128:7;13123:2;13115:6;13111:15;13104:32;12919:224;:::o;13149:223::-;13289:34;13285:1;13277:6;13273:14;13266:58;13358:6;13353:2;13345:6;13341:15;13334:31;13149:223;:::o;13378:224::-;13518:34;13514:1;13506:6;13502:14;13495:58;13587:7;13582:2;13574:6;13570:15;13563:32;13378:224;:::o;13608:122::-;13681:24;13699:5;13681:24;:::i;:::-;13674:5;13671:35;13661:63;;13720:1;13717;13710:12;13661:63;13608:122;:::o;13736:::-;13809:24;13827:5;13809:24;:::i;:::-;13802:5;13799:35;13789:63;;13848:1;13845;13838:12;13789:63;13736:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "940600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2863",
								"decimals()": "432",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2482",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "15",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2054,
									"end": 2059,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2079,
									"end": 2086,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 96,
									"end": 101,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 179,
									"end": 185,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 112,
									"end": 187,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 112,
									"end": 187,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 210,
									"end": 216,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 203,
									"end": 208,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 196,
									"end": 217,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 248,
									"end": 252,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 241,
									"end": 246,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 237,
									"end": 253,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 286,
									"end": 289,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 277,
									"end": 283,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 272,
									"end": 275,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 268,
									"end": 284,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 265,
									"end": 290,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 262,
									"end": 374,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 262,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 262,
									"end": 374,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 415,
									"end": 421,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 410,
									"end": 413,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 405,
									"end": 408,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 102,
									"end": 428,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 515,
									"end": 520,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 564,
									"end": 567,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 557,
									"end": 561,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 549,
									"end": 555,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 545,
									"end": 562,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 541,
									"end": 568,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 531,
									"end": 653,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 572,
									"end": 651,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 531,
									"end": 653,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 531,
									"end": 653,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 682,
									"end": 688,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 676,
									"end": 689,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 793,
									"end": 796,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 785,
									"end": 791,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 778,
									"end": 782,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 770,
									"end": 776,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 766,
									"end": 783,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 707,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 707,
									"end": 797,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 698,
									"end": 797,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 698,
									"end": 797,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 521,
									"end": 803,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 448,
									"end": 803,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 448,
									"end": 803,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 448,
									"end": 803,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 908,
									"end": 914,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 916,
									"end": 922,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 965,
									"end": 967,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 953,
									"end": 962,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 944,
									"end": 951,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 940,
									"end": 963,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 971,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 933,
									"end": 1052,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1112,
									"end": 1113,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1101,
									"end": 1110,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1097,
									"end": 1114,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1091,
									"end": 1115,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1142,
									"end": 1160,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1134,
									"end": 1140,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1131,
									"end": 1161,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "tag",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 1164,
									"end": 1243,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 1128,
									"end": 1245,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 1335,
									"end": 1342,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1326,
									"end": 1332,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1315,
									"end": 1324,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1311,
									"end": 1333,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "tag",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 1269,
									"end": 1343,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1259,
									"end": 1343,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1259,
									"end": 1343,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1062,
									"end": 1353,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1413,
									"end": 1415,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1402,
									"end": 1411,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1398,
									"end": 1416,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1392,
									"end": 1417,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1444,
									"end": 1462,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1436,
									"end": 1442,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1433,
									"end": 1463,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "tag",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 1466,
									"end": 1545,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "tag",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 1430,
									"end": 1547,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 1637,
									"end": 1644,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1628,
									"end": 1634,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1617,
									"end": 1626,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1613,
									"end": 1635,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "tag",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 1571,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1561,
									"end": 1645,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1561,
									"end": 1645,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1363,
									"end": 1655,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 809,
									"end": 1662,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1702,
									"end": 1708,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "tag",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 1729,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1719,
									"end": 1749,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1719,
									"end": 1749,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "53"
								},
								{
									"begin": 1786,
									"end": 1790,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1778,
									"end": 1784,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "tag",
									"source": 5,
									"value": "53"
								},
								{
									"begin": 1758,
									"end": 1791,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1668,
									"end": 1797,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1803,
									"end": 1878,
									"name": "tag",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 1803,
									"end": 1878,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1836,
									"end": 1842,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1871,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1863,
									"end": 1872,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1853,
									"end": 1872,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1853,
									"end": 1872,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1803,
									"end": 1878,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1803,
									"end": 1878,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1946,
									"end": 1950,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2036,
									"end": 2054,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2028,
									"end": 2034,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2025,
									"end": 2055,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "tag",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 2058,
									"end": 2076,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "tag",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 2022,
									"end": 2078,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 2118,
									"end": 2124,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "tag",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 2096,
									"end": 2125,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2088,
									"end": 2125,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2088,
									"end": 2125,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2180,
									"end": 2184,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2174,
									"end": 2178,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2170,
									"end": 2185,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2162,
									"end": 2185,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2162,
									"end": 2185,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1884,
									"end": 2192,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2266,
									"end": 2267,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "tag",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2290,
									"end": 2296,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2287,
									"end": 2288,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2284,
									"end": 2297,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2375,
									"end": 2376,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2370,
									"end": 2373,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2366,
									"end": 2377,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2360,
									"end": 2378,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2356,
									"end": 2357,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2351,
									"end": 2354,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2347,
									"end": 2358,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2340,
									"end": 2379,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2312,
									"end": 2314,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2309,
									"end": 2310,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2305,
									"end": 2315,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2300,
									"end": 2315,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2300,
									"end": 2315,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "tag",
									"source": 5,
									"value": "65"
								},
								{
									"begin": 2276,
									"end": 2389,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2407,
									"end": 2413,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2404,
									"end": 2405,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2401,
									"end": 2414,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2487,
									"end": 2488,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2478,
									"end": 2484,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2473,
									"end": 2476,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2469,
									"end": 2485,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2462,
									"end": 2489,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "tag",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 2398,
									"end": 2499,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2247,
									"end": 2505,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2198,
									"end": 2505,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2555,
									"end": 2561,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2592,
									"end": 2593,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 2586,
									"end": 2590,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2582,
									"end": 2594,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2572,
									"end": 2594,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2639,
									"end": 2640,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2633,
									"end": 2637,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2629,
									"end": 2641,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2660,
									"end": 2678,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2650,
									"end": 2731,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "68"
								},
								{
									"begin": 2650,
									"end": 2731,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2716,
									"end": 2720,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 2708,
									"end": 2714,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2704,
									"end": 2721,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2694,
									"end": 2721,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2694,
									"end": 2721,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2650,
									"end": 2731,
									"name": "tag",
									"source": 5,
									"value": "68"
								},
								{
									"begin": 2650,
									"end": 2731,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2778,
									"end": 2780,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2770,
									"end": 2776,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2767,
									"end": 2781,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2747,
									"end": 2765,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2744,
									"end": 2782,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "69"
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "70"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "71"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "tag",
									"source": 5,
									"value": "70"
								},
								{
									"begin": 2797,
									"end": 2815,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "tag",
									"source": 5,
									"value": "69"
								},
								{
									"begin": 2741,
									"end": 2825,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2562,
									"end": 2831,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2511,
									"end": 2831,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "tag",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 2942,
									"end": 2946,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "tag",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 2920,
									"end": 2947,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2912,
									"end": 2918,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2908,
									"end": 2948,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3050,
									"end": 3056,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3038,
									"end": 3048,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3035,
									"end": 3057,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 3014,
									"end": 3032,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3002,
									"end": 3012,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2999,
									"end": 3033,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2996,
									"end": 3058,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "74"
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "75"
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "tag",
									"source": 5,
									"value": "75"
								},
								{
									"begin": 3061,
									"end": 3079,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "tag",
									"source": 5,
									"value": "74"
								},
								{
									"begin": 2993,
									"end": 3081,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3101,
									"end": 3111,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3097,
									"end": 3099,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 3090,
									"end": 3112,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2880,
									"end": 3118,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2837,
									"end": 3118,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 3124,
									"end": 3304,
									"name": "tag",
									"source": 5,
									"value": "71"
								},
								{
									"begin": 3124,
									"end": 3304,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3172,
									"end": 3249,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3169,
									"end": 3170,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3162,
									"end": 3250,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3269,
									"end": 3273,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 3266,
									"end": 3267,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 3259,
									"end": 3274,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3293,
									"end": 3297,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 3290,
									"end": 3291,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3283,
									"end": 3298,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 3310,
									"end": 3490,
									"name": "tag",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 3310,
									"end": 3490,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3358,
									"end": 3435,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3355,
									"end": 3356,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3348,
									"end": 3436,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3455,
									"end": 3459,
									"name": "PUSH",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 3452,
									"end": 3453,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 3445,
									"end": 3460,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3479,
									"end": 3483,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 3476,
									"end": 3477,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3469,
									"end": 3484,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 3496,
									"end": 3613,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 3496,
									"end": 3613,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3605,
									"end": 3606,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3602,
									"end": 3603,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3595,
									"end": 3607,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 3619,
									"end": 3736,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 3619,
									"end": 3736,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3728,
									"end": 3729,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3725,
									"end": 3726,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3718,
									"end": 3730,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 3742,
									"end": 3859,
									"name": "tag",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 3742,
									"end": 3859,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3851,
									"end": 3852,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3848,
									"end": 3849,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3841,
									"end": 3853,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 3865,
									"end": 3982,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 3865,
									"end": 3982,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3974,
									"end": 3975,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3971,
									"end": 3972,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3964,
									"end": 3976,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "tag",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4029,
									"end": 4035,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4080,
									"end": 4082,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 4076,
									"end": 4083,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 4071,
									"end": 4073,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 4064,
									"end": 4069,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 4060,
									"end": 4074,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4056,
									"end": 4084,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 4046,
									"end": 4084,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 4046,
									"end": 4084,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3988,
									"end": 4090,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f52b9bfd8322954695f6bda849439882a060a25bea2e05bcb53e810f3141f2c064736f6c63430008070033",
									".code": [
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2244,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4527,
											"end": 4531,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4543,
											"end": 4556,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4559,
											"end": 4571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4559,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4559,
											"end": 4571,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4559,
											"end": 4571,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4559,
											"end": 4571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4543,
											"end": 4571,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4543,
											"end": 4571,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4590,
											"end": 4595,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4597,
											"end": 4604,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4581,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3316,
											"end": 3323,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3335,
											"end": 3354,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3335,
											"end": 3354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5300,
											"end": 5304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5316,
											"end": 5331,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5334,
											"end": 5346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5334,
											"end": 5344,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5334,
											"end": 5346,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5334,
											"end": 5346,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5334,
											"end": 5346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5316,
											"end": 5346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5316,
											"end": 5346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5372,
											"end": 5376,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5378,
											"end": 5385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5393,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5356,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5414,
											"end": 5418,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5422,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5424,
											"end": 5430,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5441,
											"end": 5452,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5452,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5452,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3162,
											"end": 3167,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3179,
											"end": 3188,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3188,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5946,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5958,
											"end": 5971,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5974,
											"end": 5986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5974,
											"end": 5984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5974,
											"end": 5986,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5974,
											"end": 5986,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5974,
											"end": 5986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5958,
											"end": 5986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5958,
											"end": 5986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5996,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 6005,
											"end": 6010,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6049,
											"end": 6059,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 6031,
											"end": 6036,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6038,
											"end": 6045,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5996,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5996,
											"end": 6060,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5996,
											"end": 6060,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 5996,
											"end": 6060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6081,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6070,
											"end": 6081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3529,
											"end": 3536,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3512,
											"end": 3537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3512,
											"end": 3537,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2457,
											"end": 2464,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6684,
											"end": 6697,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6700,
											"end": 6712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 6700,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 6700,
											"end": 6712,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6700,
											"end": 6712,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 6700,
											"end": 6712,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6684,
											"end": 6712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6684,
											"end": 6712,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6722,
											"end": 6746,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6759,
											"end": 6764,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6766,
											"end": 6773,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6812,
											"end": 6827,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6808,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 6912,
											"end": 6917,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6919,
											"end": 6926,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6947,
											"end": 6962,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 6944,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6928,
											"end": 6962,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6903,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6991,
											"end": 6995,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6984,
											"end": 6995,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6984,
											"end": 6995,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6984,
											"end": 6995,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6984,
											"end": 6995,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3819,
											"end": 3823,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3835,
											"end": 3848,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 3863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3851,
											"end": 3861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3851,
											"end": 3863,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3851,
											"end": 3863,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3851,
											"end": 3863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3835,
											"end": 3863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3835,
											"end": 3863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3873,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3883,
											"end": 3888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3890,
											"end": 3892,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3894,
											"end": 3900,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3873,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3873,
											"end": 3901,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3873,
											"end": 3901,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3873,
											"end": 3901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3918,
											"end": 3922,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3911,
											"end": 3922,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3911,
											"end": 3922,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3911,
											"end": 3922,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4076,
											"end": 4083,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4113,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4114,
											"end": 4119,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4121,
											"end": 4128,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10575,
											"end": 10576,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10558,
											"end": 10563,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10655,
											"end": 10656,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10636,
											"end": 10643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10737,
											"end": 10743,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10718,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10719,
											"end": 10724,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10726,
											"end": 10733,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10774,
											"end": 10781,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10767,
											"end": 10772,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10783,
											"end": 10789,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11202,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 11215,
											"end": 11220,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11222,
											"end": 11229,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11205,
											"end": 11214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11264,
											"end": 11281,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11244,
											"end": 11260,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11244,
											"end": 11281,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11325,
											"end": 11331,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11305,
											"end": 11321,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11416,
											"end": 11421,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11423,
											"end": 11430,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11451,
											"end": 11457,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11432,
											"end": 11448,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11432,
											"end": 11457,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11407,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11168,
											"end": 11489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7568,
											"end": 7569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7552,
											"end": 7556,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7644,
											"end": 7645,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7630,
											"end": 7632,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7697,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 7718,
											"end": 7722,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7724,
											"end": 7726,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7728,
											"end": 7734,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7697,
											"end": 7717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7697,
											"end": 7735,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7697,
											"end": 7735,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 7697,
											"end": 7735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7746,
											"end": 7765,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7768,
											"end": 7777,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7778,
											"end": 7782,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7746,
											"end": 7783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7746,
											"end": 7783,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7816,
											"end": 7822,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7812,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7931,
											"end": 7937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7917,
											"end": 7928,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7908,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7909,
											"end": 7913,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8131,
											"end": 8137,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8124,
											"end": 8126,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8178,
											"end": 8180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8172,
											"end": 8176,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8182,
											"end": 8188,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 8220,
											"end": 8224,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8226,
											"end": 8228,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8230,
											"end": 8236,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 8219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 8200,
											"end": 8237,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8200,
											"end": 8237,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 8200,
											"end": 8237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7534,
											"end": 8244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12752,
											"end": 12842,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 12752,
											"end": 12842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12752,
											"end": 12842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12752,
											"end": 12842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12752,
											"end": 12842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12752,
											"end": 12842,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 356,
											"end": 362,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 384,
											"end": 391,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 373,
											"end": 492,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 373,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 373,
											"end": 492,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 531,
											"end": 532,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 592,
											"end": 598,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 581,
											"end": 590,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 577,
											"end": 599,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 546,
											"end": 609,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 546,
											"end": 609,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 502,
											"end": 619,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 700,
											"end": 706,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 714,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 757,
											"end": 759,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 754,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 736,
											"end": 743,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 732,
											"end": 755,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 728,
											"end": 760,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 725,
											"end": 844,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 725,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 725,
											"end": 844,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 883,
											"end": 884,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 953,
											"end": 960,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 944,
											"end": 950,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 933,
											"end": 942,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 929,
											"end": 951,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 898,
											"end": 961,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 898,
											"end": 961,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 854,
											"end": 971,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1010,
											"end": 1012,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1081,
											"end": 1088,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1061,
											"end": 1070,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1057,
											"end": 1079,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1189,
											"end": 1195,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1203,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1205,
											"end": 1211,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1256,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1233,
											"end": 1240,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1229,
											"end": 1252,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1225,
											"end": 1257,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1381,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 1450,
											"end": 1457,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1441,
											"end": 1447,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1430,
											"end": 1439,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1426,
											"end": 1448,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1351,
											"end": 1468,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1507,
											"end": 1509,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 1578,
											"end": 1585,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1569,
											"end": 1575,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1554,
											"end": 1576,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1635,
											"end": 1637,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 1706,
											"end": 1713,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1695,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1682,
											"end": 1704,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1651,
											"end": 1714,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1651,
											"end": 1714,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1724,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1862,
											"end": 1864,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1859,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1841,
											"end": 1848,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1837,
											"end": 1860,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1833,
											"end": 1865,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2058,
											"end": 2065,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2049,
											"end": 2055,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2047,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2056,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1959,
											"end": 2076,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2115,
											"end": 2117,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2186,
											"end": 2193,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2183,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2166,
											"end": 2175,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2194,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2194,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2086,
											"end": 2204,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2313,
											"end": 2318,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2296,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2286,
											"end": 2320,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2420,
											"end": 2423,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 2481,
											"end": 2486,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2562,
											"end": 2565,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2574,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2574,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2623,
											"end": 2626,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2616,
											"end": 2620,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2609,
											"end": 2614,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2605,
											"end": 2621,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 2682,
											"end": 2688,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2658,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2651,
											"end": 2690,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2644,
											"end": 2690,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2644,
											"end": 2690,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2424,
											"end": 2696,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2844,
											"end": 2847,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 2929,
											"end": 2931,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 2924,
											"end": 2927,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2858,
											"end": 2932,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2858,
											"end": 2932,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 3030,
											"end": 3033,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3059,
											"end": 3061,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3054,
											"end": 3057,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3050,
											"end": 3062,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3043,
											"end": 3062,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3043,
											"end": 3062,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3216,
											"end": 3219,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3237,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 3301,
											"end": 3303,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 3296,
											"end": 3299,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3237,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 3237,
											"end": 3304,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3237,
											"end": 3304,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 3237,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 3304,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3230,
											"end": 3304,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3313,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 3402,
											"end": 3405,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3313,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 3313,
											"end": 3406,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3313,
											"end": 3406,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 3313,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3431,
											"end": 3433,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3426,
											"end": 3429,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3422,
											"end": 3434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3415,
											"end": 3434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3415,
											"end": 3434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3588,
											"end": 3591,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3609,
											"end": 3676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 3673,
											"end": 3675,
											"name": "PUSH",
											"source": 5,
											"value": "1D"
										},
										{
											"begin": 3668,
											"end": 3671,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3609,
											"end": 3676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 3609,
											"end": 3676,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3609,
											"end": 3676,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 3609,
											"end": 3676,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3602,
											"end": 3676,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3602,
											"end": 3676,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 3774,
											"end": 3777,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3685,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 3685,
											"end": 3778,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3685,
											"end": 3778,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 3685,
											"end": 3778,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3805,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3798,
											"end": 3801,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3794,
											"end": 3806,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3787,
											"end": 3806,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3787,
											"end": 3806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3960,
											"end": 3963,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3981,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 4045,
											"end": 4047,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 4040,
											"end": 4043,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3981,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 3981,
											"end": 4048,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3981,
											"end": 4048,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 3981,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3974,
											"end": 4048,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3974,
											"end": 4048,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4057,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 4146,
											"end": 4149,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4057,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 4057,
											"end": 4150,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4057,
											"end": 4150,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 4057,
											"end": 4150,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4175,
											"end": 4177,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4170,
											"end": 4173,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4166,
											"end": 4178,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4159,
											"end": 4178,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4159,
											"end": 4178,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4332,
											"end": 4335,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4353,
											"end": 4420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 4417,
											"end": 4419,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 4412,
											"end": 4415,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4353,
											"end": 4420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 4353,
											"end": 4420,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4353,
											"end": 4420,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 4353,
											"end": 4420,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4346,
											"end": 4420,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4346,
											"end": 4420,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4429,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 4518,
											"end": 4521,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4429,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 4429,
											"end": 4522,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4429,
											"end": 4522,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 4429,
											"end": 4522,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4547,
											"end": 4549,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4542,
											"end": 4545,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4538,
											"end": 4550,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4531,
											"end": 4550,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4531,
											"end": 4550,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4704,
											"end": 4707,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4725,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 4789,
											"end": 4791,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4784,
											"end": 4787,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4725,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 4725,
											"end": 4792,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4725,
											"end": 4792,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 4725,
											"end": 4792,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4718,
											"end": 4792,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4718,
											"end": 4792,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 4890,
											"end": 4893,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4919,
											"end": 4921,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4914,
											"end": 4917,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4910,
											"end": 4922,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4903,
											"end": 4922,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4903,
											"end": 4922,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5076,
											"end": 5079,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5097,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 5161,
											"end": 5163,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 5156,
											"end": 5159,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5097,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 5097,
											"end": 5164,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5097,
											"end": 5164,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 5097,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5090,
											"end": 5164,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5090,
											"end": 5164,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5266,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 5262,
											"end": 5265,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5266,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 5173,
											"end": 5266,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5173,
											"end": 5266,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 5173,
											"end": 5266,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5291,
											"end": 5293,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5286,
											"end": 5289,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5294,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5275,
											"end": 5294,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5275,
											"end": 5294,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5306,
											"end": 5424,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 5306,
											"end": 5424,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 5411,
											"end": 5416,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 5393,
											"end": 5417,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5393,
											"end": 5417,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 5393,
											"end": 5417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5388,
											"end": 5391,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5381,
											"end": 5418,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5306,
											"end": 5424,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5306,
											"end": 5424,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5306,
											"end": 5424,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5430,
											"end": 5542,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 5430,
											"end": 5542,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5513,
											"end": 5535,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 5529,
											"end": 5534,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5513,
											"end": 5535,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 5513,
											"end": 5535,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5513,
											"end": 5535,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 5513,
											"end": 5535,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5508,
											"end": 5511,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5501,
											"end": 5536,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5430,
											"end": 5542,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5430,
											"end": 5542,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5430,
											"end": 5542,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5548,
											"end": 5758,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5548,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5635,
											"end": 5639,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5673,
											"end": 5675,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5662,
											"end": 5671,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5658,
											"end": 5676,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5650,
											"end": 5676,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5650,
											"end": 5676,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5686,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 5748,
											"end": 5749,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5737,
											"end": 5746,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5733,
											"end": 5750,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5724,
											"end": 5730,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5686,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 5686,
											"end": 5751,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5686,
											"end": 5751,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 5686,
											"end": 5751,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5548,
											"end": 5758,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5548,
											"end": 5758,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5548,
											"end": 5758,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5548,
											"end": 5758,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5548,
											"end": 5758,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5764,
											"end": 6077,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 5764,
											"end": 6077,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5877,
											"end": 5881,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5915,
											"end": 5917,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5904,
											"end": 5913,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5900,
											"end": 5918,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5892,
											"end": 5918,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5892,
											"end": 5918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5964,
											"end": 5973,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5958,
											"end": 5962,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5954,
											"end": 5974,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5950,
											"end": 5951,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5939,
											"end": 5948,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5935,
											"end": 5952,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5928,
											"end": 5975,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5992,
											"end": 6070,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 6065,
											"end": 6069,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6056,
											"end": 6062,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5992,
											"end": 6070,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 5992,
											"end": 6070,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5992,
											"end": 6070,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 5992,
											"end": 6070,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5984,
											"end": 6070,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5984,
											"end": 6070,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5764,
											"end": 6077,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5764,
											"end": 6077,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5764,
											"end": 6077,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5764,
											"end": 6077,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5764,
											"end": 6077,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6083,
											"end": 6502,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 6083,
											"end": 6502,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6253,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6287,
											"end": 6289,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6276,
											"end": 6285,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6272,
											"end": 6290,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6264,
											"end": 6290,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6264,
											"end": 6290,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6336,
											"end": 6345,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6330,
											"end": 6334,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6326,
											"end": 6346,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6322,
											"end": 6323,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6311,
											"end": 6320,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6324,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6300,
											"end": 6347,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6364,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 6490,
											"end": 6494,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6364,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 6364,
											"end": 6495,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6364,
											"end": 6495,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 6364,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6356,
											"end": 6495,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6356,
											"end": 6495,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6083,
											"end": 6502,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6083,
											"end": 6502,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6083,
											"end": 6502,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6083,
											"end": 6502,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6508,
											"end": 6927,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 6508,
											"end": 6927,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6712,
											"end": 6714,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6701,
											"end": 6710,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6697,
											"end": 6715,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6689,
											"end": 6715,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6689,
											"end": 6715,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6761,
											"end": 6770,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6755,
											"end": 6759,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6751,
											"end": 6771,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6747,
											"end": 6748,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6745,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6732,
											"end": 6749,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6725,
											"end": 6772,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6789,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 6915,
											"end": 6919,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6789,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 6789,
											"end": 6920,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6789,
											"end": 6920,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 6789,
											"end": 6920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6781,
											"end": 6920,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6781,
											"end": 6920,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6508,
											"end": 6927,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6508,
											"end": 6927,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6508,
											"end": 6927,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6508,
											"end": 6927,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6933,
											"end": 7352,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 6933,
											"end": 7352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7099,
											"end": 7103,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7137,
											"end": 7139,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7126,
											"end": 7135,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7122,
											"end": 7140,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7114,
											"end": 7140,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7114,
											"end": 7140,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7186,
											"end": 7195,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7180,
											"end": 7184,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7176,
											"end": 7196,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7172,
											"end": 7173,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7161,
											"end": 7170,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7157,
											"end": 7174,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7150,
											"end": 7197,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7214,
											"end": 7345,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 7340,
											"end": 7344,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7214,
											"end": 7345,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 7214,
											"end": 7345,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7214,
											"end": 7345,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 7214,
											"end": 7345,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7206,
											"end": 7345,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7206,
											"end": 7345,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6933,
											"end": 7352,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6933,
											"end": 7352,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6933,
											"end": 7352,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6933,
											"end": 7352,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7358,
											"end": 7777,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 7358,
											"end": 7777,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7524,
											"end": 7528,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7562,
											"end": 7564,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7551,
											"end": 7560,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7547,
											"end": 7565,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7539,
											"end": 7565,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7539,
											"end": 7565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7611,
											"end": 7620,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7605,
											"end": 7609,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7601,
											"end": 7621,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7597,
											"end": 7598,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7586,
											"end": 7595,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7582,
											"end": 7599,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7575,
											"end": 7622,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7639,
											"end": 7770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 7765,
											"end": 7769,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7639,
											"end": 7770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 7639,
											"end": 7770,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7639,
											"end": 7770,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 7639,
											"end": 7770,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7631,
											"end": 7770,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7631,
											"end": 7770,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7358,
											"end": 7777,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7358,
											"end": 7777,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7358,
											"end": 7777,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7358,
											"end": 7777,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7783,
											"end": 8202,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 7783,
											"end": 8202,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7949,
											"end": 7953,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7987,
											"end": 7989,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7976,
											"end": 7985,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7972,
											"end": 7990,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7964,
											"end": 7990,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7964,
											"end": 7990,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8036,
											"end": 8045,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8030,
											"end": 8034,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8026,
											"end": 8046,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8022,
											"end": 8023,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8011,
											"end": 8020,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8007,
											"end": 8024,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8000,
											"end": 8047,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8064,
											"end": 8195,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 8190,
											"end": 8194,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8064,
											"end": 8195,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 8064,
											"end": 8195,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8064,
											"end": 8195,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 8064,
											"end": 8195,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8056,
											"end": 8195,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8056,
											"end": 8195,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7783,
											"end": 8202,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7783,
											"end": 8202,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7783,
											"end": 8202,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7783,
											"end": 8202,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8208,
											"end": 8627,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 8208,
											"end": 8627,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8374,
											"end": 8378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8412,
											"end": 8414,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8401,
											"end": 8410,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8397,
											"end": 8415,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8389,
											"end": 8415,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8389,
											"end": 8415,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8461,
											"end": 8470,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8455,
											"end": 8459,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8451,
											"end": 8471,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8447,
											"end": 8448,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8436,
											"end": 8445,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8432,
											"end": 8449,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8425,
											"end": 8472,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8489,
											"end": 8620,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 8615,
											"end": 8619,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8489,
											"end": 8620,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 8489,
											"end": 8620,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8489,
											"end": 8620,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 8489,
											"end": 8620,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8481,
											"end": 8620,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8481,
											"end": 8620,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8208,
											"end": 8627,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8208,
											"end": 8627,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8208,
											"end": 8627,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8208,
											"end": 8627,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8633,
											"end": 9052,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 8633,
											"end": 9052,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8799,
											"end": 8803,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8837,
											"end": 8839,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8826,
											"end": 8835,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8822,
											"end": 8840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8814,
											"end": 8840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8814,
											"end": 8840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8886,
											"end": 8895,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8880,
											"end": 8884,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8876,
											"end": 8896,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8872,
											"end": 8873,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8861,
											"end": 8870,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8857,
											"end": 8874,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8850,
											"end": 8897,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8914,
											"end": 9045,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 9040,
											"end": 9044,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8914,
											"end": 9045,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 8914,
											"end": 9045,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8914,
											"end": 9045,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 8914,
											"end": 9045,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8906,
											"end": 9045,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8906,
											"end": 9045,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8633,
											"end": 9052,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8633,
											"end": 9052,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8633,
											"end": 9052,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8633,
											"end": 9052,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9058,
											"end": 9280,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 9058,
											"end": 9280,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9151,
											"end": 9155,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9189,
											"end": 9191,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9178,
											"end": 9187,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9174,
											"end": 9192,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9166,
											"end": 9192,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9166,
											"end": 9192,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9202,
											"end": 9273,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 9270,
											"end": 9271,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9259,
											"end": 9268,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9255,
											"end": 9272,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9246,
											"end": 9252,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9202,
											"end": 9273,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 9202,
											"end": 9273,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9202,
											"end": 9273,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 9202,
											"end": 9273,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9058,
											"end": 9280,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9058,
											"end": 9280,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9058,
											"end": 9280,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9058,
											"end": 9280,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9058,
											"end": 9280,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9286,
											"end": 9500,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 9286,
											"end": 9500,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9375,
											"end": 9379,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9413,
											"end": 9415,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9402,
											"end": 9411,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9398,
											"end": 9416,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9390,
											"end": 9416,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9390,
											"end": 9416,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9426,
											"end": 9493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 9490,
											"end": 9491,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9479,
											"end": 9488,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9475,
											"end": 9492,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9466,
											"end": 9472,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9426,
											"end": 9493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 9426,
											"end": 9493,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9426,
											"end": 9493,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 9426,
											"end": 9493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9286,
											"end": 9500,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9286,
											"end": 9500,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9286,
											"end": 9500,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9286,
											"end": 9500,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9286,
											"end": 9500,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9587,
											"end": 9686,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 9587,
											"end": 9686,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9639,
											"end": 9645,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9673,
											"end": 9678,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9667,
											"end": 9679,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9657,
											"end": 9679,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9657,
											"end": 9679,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9587,
											"end": 9686,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9587,
											"end": 9686,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9587,
											"end": 9686,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9587,
											"end": 9686,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9692,
											"end": 9861,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 9692,
											"end": 9861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9776,
											"end": 9787,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9810,
											"end": 9816,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9805,
											"end": 9808,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9798,
											"end": 9817,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9850,
											"end": 9854,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9845,
											"end": 9848,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9841,
											"end": 9855,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9826,
											"end": 9855,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9826,
											"end": 9855,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9692,
											"end": 9861,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9692,
											"end": 9861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9692,
											"end": 9861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9692,
											"end": 9861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9692,
											"end": 9861,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9867,
											"end": 10172,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 9867,
											"end": 10172,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9907,
											"end": 9910,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9926,
											"end": 9946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 9944,
											"end": 9945,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9926,
											"end": 9946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 9926,
											"end": 9946,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9926,
											"end": 9946,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 9926,
											"end": 9946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9921,
											"end": 9946,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9921,
											"end": 9946,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9960,
											"end": 9980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 9978,
											"end": 9979,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9960,
											"end": 9980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 9960,
											"end": 9980,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9960,
											"end": 9980,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 9960,
											"end": 9980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9980,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9980,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10114,
											"end": 10115,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10046,
											"end": 10112,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10042,
											"end": 10116,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10039,
											"end": 10040,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10036,
											"end": 10117,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 10033,
											"end": 10140,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10033,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 10033,
											"end": 10140,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10120,
											"end": 10138,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 10120,
											"end": 10138,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 10120,
											"end": 10138,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10120,
											"end": 10138,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 10120,
											"end": 10138,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10033,
											"end": 10140,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 10033,
											"end": 10140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10164,
											"end": 10165,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10161,
											"end": 10162,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10157,
											"end": 10166,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10150,
											"end": 10166,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10150,
											"end": 10166,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9867,
											"end": 10172,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9867,
											"end": 10172,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9867,
											"end": 10172,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9867,
											"end": 10172,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9867,
											"end": 10172,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10178,
											"end": 10274,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 10178,
											"end": 10274,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10215,
											"end": 10222,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10244,
											"end": 10268,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 10262,
											"end": 10267,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10244,
											"end": 10268,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 10244,
											"end": 10268,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10244,
											"end": 10268,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 10244,
											"end": 10268,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10233,
											"end": 10268,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10233,
											"end": 10268,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10178,
											"end": 10274,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10178,
											"end": 10274,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10178,
											"end": 10274,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10178,
											"end": 10274,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10280,
											"end": 10370,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 10280,
											"end": 10370,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10314,
											"end": 10321,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10357,
											"end": 10362,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10350,
											"end": 10363,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10343,
											"end": 10364,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10332,
											"end": 10364,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10332,
											"end": 10364,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10280,
											"end": 10370,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10280,
											"end": 10370,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10280,
											"end": 10370,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10280,
											"end": 10370,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10376,
											"end": 10502,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 10376,
											"end": 10502,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10413,
											"end": 10420,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10453,
											"end": 10495,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10446,
											"end": 10451,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10442,
											"end": 10496,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10431,
											"end": 10496,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10431,
											"end": 10496,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10376,
											"end": 10502,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10376,
											"end": 10502,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10376,
											"end": 10502,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10376,
											"end": 10502,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10508,
											"end": 10585,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 10508,
											"end": 10585,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10545,
											"end": 10552,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10574,
											"end": 10579,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10563,
											"end": 10579,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10563,
											"end": 10579,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10585,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10585,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10585,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10508,
											"end": 10585,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10591,
											"end": 10677,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 10591,
											"end": 10677,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10626,
											"end": 10633,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10666,
											"end": 10670,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 10659,
											"end": 10664,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10655,
											"end": 10671,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10644,
											"end": 10671,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10644,
											"end": 10671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10591,
											"end": 10677,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10591,
											"end": 10677,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10591,
											"end": 10677,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10591,
											"end": 10677,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10683,
											"end": 10990,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 10683,
											"end": 10990,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10751,
											"end": 10752,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10761,
											"end": 10874,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 10761,
											"end": 10874,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10775,
											"end": 10781,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10772,
											"end": 10773,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10769,
											"end": 10782,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10761,
											"end": 10874,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10761,
											"end": 10874,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 10761,
											"end": 10874,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10860,
											"end": 10861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10855,
											"end": 10858,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10851,
											"end": 10862,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10845,
											"end": 10863,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10841,
											"end": 10842,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10836,
											"end": 10839,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10832,
											"end": 10843,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10825,
											"end": 10864,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10797,
											"end": 10799,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10794,
											"end": 10795,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10790,
											"end": 10800,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10785,
											"end": 10800,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10785,
											"end": 10800,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10761,
											"end": 10874,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 10761,
											"end": 10874,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10761,
											"end": 10874,
											"name": "tag",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 10761,
											"end": 10874,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10892,
											"end": 10898,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10889,
											"end": 10890,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10886,
											"end": 10899,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 10883,
											"end": 10984,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10883,
											"end": 10984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 10883,
											"end": 10984,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10972,
											"end": 10973,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10963,
											"end": 10969,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10958,
											"end": 10961,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10954,
											"end": 10970,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10947,
											"end": 10974,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10883,
											"end": 10984,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 10883,
											"end": 10984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10732,
											"end": 10990,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10683,
											"end": 10990,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10683,
											"end": 10990,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10683,
											"end": 10990,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10683,
											"end": 10990,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10996,
											"end": 11316,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 10996,
											"end": 11316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11040,
											"end": 11046,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11077,
											"end": 11078,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 11071,
											"end": 11075,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11067,
											"end": 11079,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 11057,
											"end": 11079,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11057,
											"end": 11079,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11124,
											"end": 11125,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 11118,
											"end": 11122,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11114,
											"end": 11126,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11145,
											"end": 11163,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11135,
											"end": 11216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 11135,
											"end": 11216,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11201,
											"end": 11205,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 11193,
											"end": 11199,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11189,
											"end": 11206,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11179,
											"end": 11206,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11179,
											"end": 11206,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11135,
											"end": 11216,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 11135,
											"end": 11216,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11263,
											"end": 11265,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11255,
											"end": 11261,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11252,
											"end": 11266,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 11232,
											"end": 11250,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11229,
											"end": 11267,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 11226,
											"end": 11310,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11226,
											"end": 11310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 11226,
											"end": 11310,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11282,
											"end": 11300,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 11282,
											"end": 11300,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 11282,
											"end": 11300,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11282,
											"end": 11300,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 11282,
											"end": 11300,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11226,
											"end": 11310,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 11226,
											"end": 11310,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11047,
											"end": 11316,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10996,
											"end": 11316,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10996,
											"end": 11316,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10996,
											"end": 11316,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10996,
											"end": 11316,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11322,
											"end": 11502,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 11322,
											"end": 11502,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11370,
											"end": 11447,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11367,
											"end": 11368,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11360,
											"end": 11448,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11467,
											"end": 11471,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 11464,
											"end": 11465,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 11457,
											"end": 11472,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11491,
											"end": 11495,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 11488,
											"end": 11489,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11481,
											"end": 11496,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 11508,
											"end": 11688,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 11508,
											"end": 11688,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11556,
											"end": 11633,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11553,
											"end": 11554,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11546,
											"end": 11634,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11653,
											"end": 11657,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 11650,
											"end": 11651,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 11643,
											"end": 11658,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11677,
											"end": 11681,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 11674,
											"end": 11675,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11667,
											"end": 11682,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 11817,
											"end": 11934,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 11817,
											"end": 11934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11926,
											"end": 11927,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11923,
											"end": 11924,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11916,
											"end": 11928,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 11940,
											"end": 12042,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 11940,
											"end": 12042,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11981,
											"end": 11987,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12032,
											"end": 12034,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 12028,
											"end": 12035,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 12023,
											"end": 12025,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 12016,
											"end": 12021,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12012,
											"end": 12026,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12008,
											"end": 12036,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11998,
											"end": 12036,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11998,
											"end": 12036,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11940,
											"end": 12042,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11940,
											"end": 12042,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11940,
											"end": 12042,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11940,
											"end": 12042,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12048,
											"end": 12270,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 12048,
											"end": 12270,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12188,
											"end": 12222,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 12184,
											"end": 12185,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12176,
											"end": 12182,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12172,
											"end": 12186,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12165,
											"end": 12223,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12257,
											"end": 12262,
											"name": "PUSH",
											"source": 5,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12252,
											"end": 12254,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12244,
											"end": 12250,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12240,
											"end": 12255,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12233,
											"end": 12263,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12048,
											"end": 12270,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12048,
											"end": 12270,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12276,
											"end": 12497,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 12276,
											"end": 12497,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12416,
											"end": 12450,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 12412,
											"end": 12413,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12404,
											"end": 12410,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12400,
											"end": 12414,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12393,
											"end": 12451,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12485,
											"end": 12489,
											"name": "PUSH",
											"source": 5,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12480,
											"end": 12482,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12472,
											"end": 12478,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12468,
											"end": 12483,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12461,
											"end": 12490,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12276,
											"end": 12497,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12276,
											"end": 12497,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12503,
											"end": 12682,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 12503,
											"end": 12682,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12643,
											"end": 12674,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 12639,
											"end": 12640,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12631,
											"end": 12637,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12627,
											"end": 12641,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12620,
											"end": 12675,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12503,
											"end": 12682,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12503,
											"end": 12682,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12688,
											"end": 12913,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 12688,
											"end": 12913,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12828,
											"end": 12862,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 12824,
											"end": 12825,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12816,
											"end": 12822,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12812,
											"end": 12826,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12805,
											"end": 12863,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12897,
											"end": 12905,
											"name": "PUSH",
											"source": 5,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12892,
											"end": 12894,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12884,
											"end": 12890,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12880,
											"end": 12895,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12873,
											"end": 12906,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12688,
											"end": 12913,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12688,
											"end": 12913,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12919,
											"end": 13143,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 12919,
											"end": 13143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13059,
											"end": 13093,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 13055,
											"end": 13056,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13047,
											"end": 13053,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13043,
											"end": 13057,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13036,
											"end": 13094,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13128,
											"end": 13135,
											"name": "PUSH",
											"source": 5,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13123,
											"end": 13125,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13115,
											"end": 13121,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13111,
											"end": 13126,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13104,
											"end": 13136,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12919,
											"end": 13143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12919,
											"end": 13143,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13149,
											"end": 13372,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 13149,
											"end": 13372,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13289,
											"end": 13323,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 13285,
											"end": 13286,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13277,
											"end": 13283,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13273,
											"end": 13287,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13266,
											"end": 13324,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13358,
											"end": 13364,
											"name": "PUSH",
											"source": 5,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13353,
											"end": 13355,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13345,
											"end": 13351,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13341,
											"end": 13356,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13334,
											"end": 13365,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13149,
											"end": 13372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13149,
											"end": 13372,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13378,
											"end": 13602,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 13378,
											"end": 13602,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13518,
											"end": 13552,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 13514,
											"end": 13515,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13506,
											"end": 13512,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13502,
											"end": 13516,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13495,
											"end": 13553,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13587,
											"end": 13594,
											"name": "PUSH",
											"source": 5,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13582,
											"end": 13584,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13574,
											"end": 13580,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13570,
											"end": 13585,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13563,
											"end": 13595,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13378,
											"end": 13602,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13378,
											"end": 13602,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13608,
											"end": 13730,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 13608,
											"end": 13730,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13681,
											"end": 13705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 13699,
											"end": 13704,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13681,
											"end": 13705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 13681,
											"end": 13705,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13681,
											"end": 13705,
											"name": "tag",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 13681,
											"end": 13705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13674,
											"end": 13679,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13671,
											"end": 13706,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 13661,
											"end": 13724,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 13661,
											"end": 13724,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13720,
											"end": 13721,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13717,
											"end": 13718,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13710,
											"end": 13722,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 13661,
											"end": 13724,
											"name": "tag",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 13661,
											"end": 13724,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13608,
											"end": 13730,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13608,
											"end": 13730,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13736,
											"end": 13858,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 13736,
											"end": 13858,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13809,
											"end": 13833,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 13827,
											"end": 13832,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13809,
											"end": 13833,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 13809,
											"end": 13833,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13809,
											"end": 13833,
											"name": "tag",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 13809,
											"end": 13833,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13802,
											"end": 13807,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13799,
											"end": 13834,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 13789,
											"end": 13852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 13789,
											"end": 13852,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13848,
											"end": 13849,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13845,
											"end": 13846,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13838,
											"end": 13850,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 13789,
											"end": 13852,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 13789,
											"end": 13852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13736,
											"end": 13858,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13736,
											"end": 13858,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 631,
								"contract": "openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 637,
								"contract": "openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 639,
								"contract": "openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 641,
								"contract": "openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 643,
								"contract": "openzeppelin-contracts/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"openzeppelin-contracts/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Exchange.sol": {
				"ast": {
					"absolutePath": "Exchange.sol",
					"exportedSymbols": {
						"Context": [
							1327
						],
						"ERC20": [
							1202
						],
						"Exchange": [
							615
						],
						"IERC20": [
							1280
						],
						"IERC20Metadata": [
							1305
						]
					},
					"id": 616,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:0"
						},
						{
							"absolutePath": "openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
							"file": "openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 616,
							"sourceUnit": 1203,
							"src": "63:64:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 615,
							"linearizedBaseContracts": [
								615
							],
							"name": "Exchange",
							"nameLocation": "340:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5,
									"mutability": "mutable",
									"name": "ierc20Token",
									"nameLocation": "399:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 615,
									"src": "392:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$1280",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 4,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1280,
											"src": "392:6:0"
										},
										"referencedDeclaration": 1280,
										"src": "392:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1280",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "contractERC20TokenBalance",
									"nameLocation": "420:25:0",
									"nodeType": "VariableDeclaration",
									"scope": 615,
									"src": "415:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "415:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "448:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "5d58ce36",
									"id": 11,
									"mutability": "mutable",
									"name": "contractEthBalance",
									"nameLocation": "520:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 615,
									"src": "508:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "508:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 10,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "541:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 14,
									"mutability": "mutable",
									"name": "totalLiquidityPositions",
									"nameLocation": "552:23:0",
									"nodeType": "VariableDeclaration",
									"scope": 615,
									"src": "547:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 12,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "547:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "578:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "a932492f",
									"id": 17,
									"mutability": "mutable",
									"name": "K",
									"nameLocation": "596:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 615,
									"src": "584:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 15,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "584:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "600:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 21,
									"mutability": "mutable",
									"name": "liquidityPositions",
									"nameLocation": "631:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 615,
									"src": "606:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 20,
										"keyType": {
											"id": 18,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "614:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "606:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 19,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "625:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "771:100:0",
										"statements": [
											{
												"assignments": [
													27
												],
												"declarations": [
													{
														"constant": false,
														"id": 27,
														"mutability": "mutable",
														"name": "tokenContractAddress",
														"nameLocation": "788:20:0",
														"nodeType": "VariableDeclaration",
														"scope": 36,
														"src": "780:28:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 26,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "780:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 29,
												"initialValue": {
													"id": 28,
													"name": "adr",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 23,
													"src": "811:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "780:34:0"
											},
											{
												"expression": {
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 30,
														"name": "ierc20Token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "823:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1280",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 32,
																"name": "tokenContractAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "844:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 31,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "837:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$1280_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 33,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "837:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1280",
															"typeString": "contract IERC20"
														}
													},
													"src": "823:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1280",
														"typeString": "contract IERC20"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "823:42:0"
											}
										]
									},
									"id": 37,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "adr",
												"nameLocation": "767:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "759:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "759:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "758:13:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:0:0"
									},
									"scope": 615,
									"src": "747:124:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 40,
									"mutability": "mutable",
									"name": "locked",
									"nameLocation": "1061:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 615,
									"src": "1056:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 38,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1056:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 39,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1070:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1102:102:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1120:7:0",
															"subExpression": {
																"id": 43,
																"name": "locked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "1121:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2072652d656e747279",
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1129:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b88163eff53e24a5b06bbb2ff938a2bfbe8d0115396ef7a73b07a01a5379fb16",
																"typeString": "literal_string \"No re-entry\""
															},
															"value": "No re-entry"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b88163eff53e24a5b06bbb2ff938a2bfbe8d0115396ef7a73b07a01a5379fb16",
																"typeString": "literal_string \"No re-entry\""
															}
														],
														"id": 42,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1111:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1111:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "1111:32:0"
											},
											{
												"expression": {
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 48,
														"name": "locked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "1152:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 49,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1161:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1152:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "1152:13:0"
											},
											{
												"id": 52,
												"nodeType": "PlaceholderStatement",
												"src": "1174:1:0"
											},
											{
												"expression": {
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 53,
														"name": "locked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "1184:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1193:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1184:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 56,
												"nodeType": "ExpressionStatement",
												"src": "1184:14:0"
											}
										]
									},
									"id": 58,
									"name": "nonReentrancy",
									"nameLocation": "1089:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1102:0:0"
									},
									"src": "1080:124:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 66,
									"name": "LiquidityProvided",
									"nameLocation": "1280:17:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountERC20TokenDeposited",
												"nameLocation": "1303:25:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "1298:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1298:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 62,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountEthDeposited",
												"nameLocation": "1335:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "1330:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1330:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidityPositionsIssued",
												"nameLocation": "1360:24:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "1355:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1355:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:88:0"
									},
									"src": "1274:112:0"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "1906:1248:0",
										"statements": [
											{
												"assignments": [
													76
												],
												"declarations": [
													{
														"constant": false,
														"id": 76,
														"mutability": "mutable",
														"name": "_amountEth",
														"nameLocation": "1921:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 199,
														"src": "1916:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 75,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1916:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 79,
												"initialValue": {
													"expression": {
														"id": 77,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1934:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "1934:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1916:27:0"
											},
											{
												"expression": {
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 80,
														"name": "contractEthBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "1952:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 81,
														"name": "_amountEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 76,
														"src": "1974:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1952:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 83,
												"nodeType": "ExpressionStatement",
												"src": "1952:32:0"
											},
											{
												"expression": {
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 84,
														"name": "_amountERC20Token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "2030:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 87,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 85,
															"name": "_amountERC20Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "2050:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31653138",
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2070:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														},
														"src": "2050:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2030:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2030:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 95,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2111:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Exchange_$615",
																		"typeString": "contract Exchange"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Exchange_$615",
																		"typeString": "contract Exchange"
																	}
																],
																"id": 94,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2103:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 93,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2103:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2103:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 97,
															"name": "_amountERC20Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "2118:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 90,
															"name": "ierc20Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "2083:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1280",
																"typeString": "contract IERC20"
															}
														},
														"id": 92,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1267,
														"src": "2083:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2083:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "2083:53:0"
											},
											{
												"assignments": [
													101
												],
												"declarations": [
													{
														"constant": false,
														"id": 101,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2150:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 199,
														"src": "2145:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 100,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2145:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 112,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 104,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2185:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2185:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 108,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2205:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Exchange_$615",
																		"typeString": "contract Exchange"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Exchange_$615",
																		"typeString": "contract Exchange"
																	}
																],
																"id": 107,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2197:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 106,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2197:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2197:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 110,
															"name": "_amountERC20Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "2212:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 102,
															"name": "ierc20Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "2160:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1280",
																"typeString": "contract IERC20"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1279,
														"src": "2160:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2160:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2145:85:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 114,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2247:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7472616e73666572206661696c65642e203a28",
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2256:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c465a993f20bf4ac03b978727ed415088b46306fe674a90dddade57ced237579",
																"typeString": "literal_string \"transfer failed. :(\""
															},
															"value": "transfer failed. :("
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c465a993f20bf4ac03b978727ed415088b46306fe674a90dddade57ced237579",
																"typeString": "literal_string \"transfer failed. :(\""
															}
														],
														"id": 113,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2239:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2239:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 117,
												"nodeType": "ExpressionStatement",
												"src": "2239:39:0"
											},
											{
												"expression": {
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 118,
														"name": "contractERC20TokenBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "2287:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 119,
														"name": "_amountERC20Token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "2316:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2287:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "2287:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 123,
																				"name": "totalLiquidityPositions",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 14,
																				"src": "2351:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 124,
																				"name": "_amountERC20Token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 68,
																				"src": "2377:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2351:43:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 126,
																			"name": "contractERC20TokenBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 8,
																			"src": "2395:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2351:69:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 128,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2350:71:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 131,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 129,
																				"name": "totalLiquidityPositions",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 14,
																				"src": "2426:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 130,
																				"name": "_amountEth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 76,
																				"src": "2452:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2426:36:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 132,
																			"name": "contractEthBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "2463:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2426:55:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 134,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2425:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2350:132:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6c697175696469747920696e62616c616e6365",
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2484:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5aeb38dcb14d1136e05ccbdc1601b082614d347bf503da078dda80a7f7c5ee6e",
																"typeString": "literal_string \"liquidity inbalance\""
															},
															"value": "liquidity inbalance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5aeb38dcb14d1136e05ccbdc1601b082614d347bf503da078dda80a7f7c5ee6e",
																"typeString": "literal_string \"liquidity inbalance\""
															}
														],
														"id": 122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2342:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2342:164:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "2342:164:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 139,
														"name": "totalLiquidityPositions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "2522:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 140,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2549:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2522:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 177,
													"nodeType": "Block",
													"src": "2696:253:0",
													"statements": [
														{
															"expression": {
																"id": 166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 157,
																		"name": "liquidityPositions",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 21,
																		"src": "2713:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 160,
																	"indexExpression": {
																		"expression": {
																			"id": 158,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2732:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2732:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2713:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 161,
																			"name": "totalLiquidityPositions",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 14,
																			"src": "2747:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 162,
																			"name": "_amountERC20Token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 68,
																			"src": "2773:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2747:43:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 164,
																		"name": "contractERC20TokenBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 8,
																		"src": "2793:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2747:71:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2713:105:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 167,
															"nodeType": "ExpressionStatement",
															"src": "2713:105:0"
														},
														{
															"expression": {
																"id": 175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 168,
																	"name": "totalLiquidityPositions",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "2835:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 173,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 171,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 169,
																					"name": "totalLiquidityPositions",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 14,
																					"src": "2863:23:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 170,
																					"name": "_amountERC20Token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 68,
																					"src": "2889:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2863:43:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 172,
																				"name": "contractERC20TokenBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 8,
																				"src": "2909:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2863:71:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 174,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2862:73:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2835:100:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 176,
															"nodeType": "ExpressionStatement",
															"src": "2835:100:0"
														}
													]
												},
												"id": 178,
												"nodeType": "IfStatement",
												"src": "2519:430:0",
												"trueBody": {
													"id": 156,
													"nodeType": "Block",
													"src": "2551:141:0",
													"statements": [
														{
															"expression": {
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 142,
																		"name": "liquidityPositions",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 21,
																		"src": "2568:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 145,
																	"indexExpression": {
																		"expression": {
																			"id": 143,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2587:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 144,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2587:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2568:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "313030",
																	"id": 146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2601:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "2568:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 148,
															"nodeType": "ExpressionStatement",
															"src": "2568:36:0"
														},
														{
															"expression": {
																"id": 154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 149,
																	"name": "totalLiquidityPositions",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "2621:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 150,
																		"name": "liquidityPositions",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 21,
																		"src": "2648:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 153,
																	"indexExpression": {
																		"expression": {
																			"id": 151,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2667:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2667:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2648:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2621:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 155,
															"nodeType": "ExpressionStatement",
															"src": "2621:57:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "K",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "2957:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 180,
															"name": "contractEthBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "2961:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 181,
															"name": "contractERC20TokenBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "2982:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2961:46:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2957:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 184,
												"nodeType": "ExpressionStatement",
												"src": "2957:50:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 186,
															"name": "_amountERC20Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "3039:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 187,
															"name": "_amountEth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "3058:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"baseExpression": {
																"id": 188,
																"name": "liquidityPositions",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "3070:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 191,
															"indexExpression": {
																"expression": {
																	"id": 189,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3089:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3089:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3070:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 185,
														"name": "LiquidityProvided",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 66,
														"src": "3021:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3021:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 193,
												"nodeType": "EmitStatement",
												"src": "3016:86:0"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 194,
														"name": "liquidityPositions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "3118:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 197,
													"indexExpression": {
														"expression": {
															"id": 195,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3137:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3137:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3118:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 74,
												"id": 198,
												"nodeType": "Return",
												"src": "3111:37:0"
											}
										]
									},
									"functionSelector": "eb521a4c",
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 71,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 70,
												"name": "nonReentrancy",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1860:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1860:13:0"
										}
									],
									"name": "provideLiquidity",
									"nameLocation": "1810:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "_amountERC20Token",
												"nameLocation": "1832:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1827:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 67,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1827:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:24:0"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "_liquidity",
												"nameLocation": "1895:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1890:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1890:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1889:17:0"
									},
									"scope": 615,
									"src": "1801:1353:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "3594:246:0",
										"statements": [
											{
												"expression": {
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 207,
														"name": "_amountERC20Token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "3675:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 208,
															"name": "_amountERC20Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "3695:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31653138",
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3715:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														},
														"src": "3695:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3675:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "3675:44:0"
											},
											{
												"expression": {
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 213,
														"name": "_amountEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "3729:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 214,
																"name": "contractEthBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "3742:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 215,
																"name": "_amountERC20Token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "3763:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3742:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 217,
															"name": "contractERC20TokenBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "3783:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3742:66:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3729:79:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "3729:79:0"
											},
											{
												"expression": {
													"id": 221,
													"name": "_amountEth",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 205,
													"src": "3824:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 206,
												"id": 222,
												"nodeType": "Return",
												"src": "3817:17:0"
											}
										]
									},
									"functionSelector": "240f3dea",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "estimateEthToProvide",
									"nameLocation": "3509:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "_amountERC20Token",
												"nameLocation": "3535:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3530:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3530:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3529:24:0"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "_amountEth",
												"nameLocation": "3582:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3577:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3577:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3576:17:0"
									},
									"scope": 615,
									"src": "3500:340:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "4273:122:0",
										"statements": [
											{
												"expression": {
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 231,
														"name": "_amountERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4282:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 232,
																"name": "contractERC20TokenBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "4297:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 233,
																"name": "_amountEth",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 226,
																"src": "4325:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4297:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 235,
															"name": "contractEthBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "4336:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4297:57:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4282:72:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 238,
												"nodeType": "ExpressionStatement",
												"src": "4282:72:0"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 239,
																"name": "_amountERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "4371:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4384:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "4371:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 242,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4370:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 230,
												"id": 243,
												"nodeType": "Return",
												"src": "4363:26:0"
											}
										]
									},
									"functionSelector": "ed7bf868",
									"id": 245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "estimateERC20TokenToProvide",
									"nameLocation": "4188:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "_amountEth",
												"nameLocation": "4221:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "4216:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4216:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4215:17:0"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "_amountERC20",
												"nameLocation": "4260:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "4255:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4255:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4254:19:0"
									},
									"scope": 615,
									"src": "4179:216:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "4662:52:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 250,
														"name": "liquidityPositions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "4678:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 253,
													"indexExpression": {
														"expression": {
															"id": 251,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4697:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 252,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4697:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4678:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 249,
												"id": 254,
												"nodeType": "Return",
												"src": "4671:37:0"
											}
										]
									},
									"functionSelector": "e0ba2000",
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMyLiquidityPositions",
									"nameLocation": "4597:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4620:2:0"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "_liquidity",
												"nameLocation": "4650:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "4645:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4645:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4644:17:0"
									},
									"scope": 615,
									"src": "4588:126:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 264,
									"name": "LiquidityWithdrew",
									"nameLocation": "4780:17:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountERC20TokenWithdrew",
												"nameLocation": "4803:24:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "4798:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4798:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountEthWithdrew",
												"nameLocation": "4834:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "4829:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4829:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidityPositionsBurned",
												"nameLocation": "4858:24:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "4853:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4853:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:86:0"
									},
									"src": "4774:110:0"
								},
								{
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "5444:1149:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 280,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 275,
															"name": "_liquidityPositionsToBurn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "5457:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"baseExpression": {
																"id": 276,
																"name": "liquidityPositions",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "5486:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 279,
															"indexExpression": {
																"expression": {
																	"id": 277,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5505:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5505:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5486:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5457:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 285,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 281,
																"name": "totalLiquidityPositions",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "5521:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 282,
																"name": "_liquidityPositionsToBurn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 266,
																"src": "5547:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5521:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"hexValue": "30",
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5576:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5521:56:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5457:120:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 366,
													"nodeType": "Block",
													"src": "6307:76:0",
													"statements": [
														{
															"expression": {
																"id": 360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 358,
																	"name": "amountEthToSend",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 271,
																	"src": "6320:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6338:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6320:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 361,
															"nodeType": "ExpressionStatement",
															"src": "6320:19:0"
														},
														{
															"expression": {
																"id": 364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 362,
																	"name": "amountERC20ToSend",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 273,
																	"src": "6352:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6372:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6352:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 365,
															"nodeType": "ExpressionStatement",
															"src": "6352:21:0"
														}
													]
												},
												"id": 367,
												"nodeType": "IfStatement",
												"src": "5453:930:0",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5579:724:0",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 287,
																	"name": "amountEthToSend",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 271,
																	"src": "5592:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 288,
																			"name": "_liquidityPositionsToBurn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 266,
																			"src": "5610:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 289,
																			"name": "contractEthBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "5638:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5610:46:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 291,
																		"name": "totalLiquidityPositions",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 14,
																		"src": "5659:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5610:72:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5592:90:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5592:90:0"
														},
														{
															"expression": {
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 295,
																	"name": "amountERC20ToSend",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 273,
																	"src": "5695:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 296,
																			"name": "_liquidityPositionsToBurn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 266,
																			"src": "5715:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 297,
																			"name": "contractERC20TokenBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 8,
																			"src": "5743:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5715:53:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 299,
																		"name": "totalLiquidityPositions",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 14,
																		"src": "5771:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5715:79:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5695:99:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 302,
															"nodeType": "ExpressionStatement",
															"src": "5695:99:0"
														},
														{
															"expression": {
																"id": 308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 303,
																		"name": "liquidityPositions",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 21,
																		"src": "5807:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 306,
																	"indexExpression": {
																		"expression": {
																			"id": 304,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5826:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5826:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5807:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 307,
																	"name": "_liquidityPositionsToBurn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "5841:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5807:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 309,
															"nodeType": "ExpressionStatement",
															"src": "5807:59:0"
														},
														{
															"expression": {
																"id": 312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 310,
																	"name": "totalLiquidityPositions",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "5879:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 311,
																	"name": "_liquidityPositionsToBurn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "5906:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5879:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 313,
															"nodeType": "ExpressionStatement",
															"src": "5879:52:0"
														},
														{
															"assignments": [
																315
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 315,
																	"mutability": "mutable",
																	"name": "reciever",
																	"nameLocation": "5960:8:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 357,
																	"src": "5944:24:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	},
																	"typeName": {
																		"id": 314,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5944:15:0",
																		"stateMutability": "payable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 321,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 318,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5979:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5979:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5971:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 316,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5971:8:0",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5971:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5944:46:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 325,
																		"name": "amountEthToSend",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 271,
																		"src": "6021:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 322,
																		"name": "reciever",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 315,
																		"src": "6003:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "6003:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6003:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 327,
															"nodeType": "ExpressionStatement",
															"src": "6003:34:0"
														},
														{
															"expression": {
																"id": 330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 328,
																	"name": "contractEthBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "6050:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 329,
																	"name": "amountEthToSend",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 271,
																	"src": "6072:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6050:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 331,
															"nodeType": "ExpressionStatement",
															"src": "6050:37:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 337,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "6128:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Exchange_$615",
																					"typeString": "contract Exchange"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Exchange_$615",
																					"typeString": "contract Exchange"
																				}
																			],
																			"id": 336,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6120:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 335,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6120:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6120:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 339,
																		"name": "amountERC20ToSend",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 273,
																		"src": "6135:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 332,
																		"name": "ierc20Token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5,
																		"src": "6100:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1280",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "approve",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1267,
																	"src": "6100:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6100:53:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 341,
															"nodeType": "ExpressionStatement",
															"src": "6100:53:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 347,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "6199:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Exchange_$615",
																					"typeString": "contract Exchange"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Exchange_$615",
																					"typeString": "contract Exchange"
																				}
																			],
																			"id": 346,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6191:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 345,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6191:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6191:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 349,
																		"name": "reciever",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 315,
																		"src": "6206:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"id": 350,
																		"name": "amountERC20ToSend",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 273,
																		"src": "6216:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 342,
																		"name": "ierc20Token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5,
																		"src": "6166:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1280",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1279,
																	"src": "6166:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6166:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 352,
															"nodeType": "ExpressionStatement",
															"src": "6166:68:0"
														},
														{
															"expression": {
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 353,
																	"name": "contractERC20TokenBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "6247:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 354,
																	"name": "amountERC20ToSend",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 273,
																	"src": "6276:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6247:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 356,
															"nodeType": "ExpressionStatement",
															"src": "6247:46:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 368,
														"name": "K",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "6391:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 369,
															"name": "contractEthBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "6395:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 370,
															"name": "contractERC20TokenBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "6416:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6395:46:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6391:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "6391:50:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 375,
															"name": "amountERC20ToSend",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "6473:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 376,
															"name": "amountEthToSend",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "6492:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 377,
															"name": "_liquidityPositionsToBurn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "6509:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "LiquidityWithdrew",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "6455:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6455:80:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "EmitStatement",
												"src": "6450:85:0"
											},
											{
												"expression": {
													"components": [
														{
															"id": 380,
															"name": "amountEthToSend",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "6552:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 381,
															"name": "amountERC20ToSend",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "6569:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 382,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6551:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 274,
												"id": 383,
												"nodeType": "Return",
												"src": "6544:43:0"
											}
										]
									},
									"functionSelector": "0a861f2a",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 269,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 268,
												"name": "nonReentrancy",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5368:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5368:13:0"
										}
									],
									"name": "withdrawLiquidity",
									"nameLocation": "5311:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "_liquidityPositionsToBurn",
												"nameLocation": "5334:25:0",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "5329:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5329:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5328:32:0"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "amountEthToSend",
												"nameLocation": "5404:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "5399:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5399:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "amountERC20ToSend",
												"nameLocation": "5426:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "5421:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5421:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5398:46:0"
									},
									"scope": 615,
									"src": "5302:1291:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 391,
									"name": "SwapForEth",
									"nameLocation": "6603:10:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountERC20TokenDeposited",
												"nameLocation": "6619:25:0",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "6614:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6614:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountEthWithdrew",
												"nameLocation": "6651:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "6646:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6646:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6613:56:0"
									},
									"src": "6597:73:0"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "7071:619:0",
										"statements": [
											{
												"expression": {
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 400,
														"name": "_amountERC20Token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "7152:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 401,
															"name": "_amountERC20Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "7172:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31653138",
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7192:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														},
														"src": "7172:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7152:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "7152:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 409,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7231:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7231:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 413,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7251:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Exchange_$615",
																		"typeString": "contract Exchange"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Exchange_$615",
																		"typeString": "contract Exchange"
																	}
																],
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7243:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 411,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7243:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7243:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 415,
															"name": "_amountERC20Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "7258:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 406,
															"name": "ierc20Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "7206:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1280",
																"typeString": "contract IERC20"
															}
														},
														"id": 408,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1279,
														"src": "7206:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7206:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "7206:70:0"
											},
											{
												"expression": {
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 418,
														"name": "contractERC20TokenBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "7285:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 419,
														"name": "_amountERC20Token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "7314:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7285:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 421,
												"nodeType": "ExpressionStatement",
												"src": "7285:46:0"
											},
											{
												"assignments": [
													423
												],
												"declarations": [
													{
														"constant": false,
														"id": 423,
														"mutability": "mutable",
														"name": "contractEthBalanceAfterSwap",
														"nameLocation": "7345:27:0",
														"nodeType": "VariableDeclaration",
														"scope": 459,
														"src": "7340:32:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 422,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7340:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 427,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 424,
														"name": "K",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "7375:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 425,
														"name": "contractERC20TokenBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "7379:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7375:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7340:64:0"
											},
											{
												"expression": {
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 428,
														"name": "ethToSend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "7413:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 429,
															"name": "contractEthBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "7425:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 430,
															"name": "contractEthBalanceAfterSwap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "7446:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7425:48:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7413:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 433,
												"nodeType": "ExpressionStatement",
												"src": "7413:60:0"
											},
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "reciever",
														"nameLocation": "7498:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 459,
														"src": "7482:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 434,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7482:15:0",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 441,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 438,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7517:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7517:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7509:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7509:8:0",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7509:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7482:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 445,
															"name": "ethToSend",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "7555:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 442,
															"name": "reciever",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "7537:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 444,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "7537:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7537:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 447,
												"nodeType": "ExpressionStatement",
												"src": "7537:28:0"
											},
											{
												"expression": {
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 448,
														"name": "contractEthBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "7574:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 449,
														"name": "ethToSend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "7596:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7574:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "7574:31:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 453,
															"name": "_amountERC20Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "7630:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 454,
															"name": "ethToSend",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "7649:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 452,
														"name": "SwapForEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 391,
														"src": "7619:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7619:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7614:45:0"
											},
											{
												"expression": {
													"id": 457,
													"name": "ethToSend",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 398,
													"src": "7675:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 399,
												"id": 458,
												"nodeType": "Return",
												"src": "7668:16:0"
											}
										]
									},
									"functionSelector": "c8ab8325",
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 396,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 395,
												"name": "nonReentrancy",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "7024:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "7024:13:0"
										}
									],
									"name": "swapForEth",
									"nameLocation": "6982:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "_amountERC20Token",
												"nameLocation": "6998:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "6993:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 392,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "6993:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6992:24:0"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "ethToSend",
												"nameLocation": "7060:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "7055:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7055:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7054:16:0"
									},
									"scope": 615,
									"src": "6973:717:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 493,
										"nodeType": "Block",
										"src": "8108:401:0",
										"statements": [
											{
												"expression": {
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 467,
														"name": "_amountERC20Token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "8189:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 468,
															"name": "_amountERC20Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "8209:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "31653138",
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8229:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														},
														"src": "8209:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8189:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "8189:44:0"
											},
											{
												"assignments": [
													474
												],
												"declarations": [
													{
														"constant": false,
														"id": 474,
														"mutability": "mutable",
														"name": "estimatedContractERC20Balance",
														"nameLocation": "8255:29:0",
														"nodeType": "VariableDeclaration",
														"scope": 493,
														"src": "8250:34:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 473,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8250:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 478,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 475,
														"name": "contractERC20TokenBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "8287:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 476,
														"name": "_amountERC20Token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "8315:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8287:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8250:82:0"
											},
											{
												"assignments": [
													480
												],
												"declarations": [
													{
														"constant": false,
														"id": 480,
														"mutability": "mutable",
														"name": "contractETHBalanceAfterSwap",
														"nameLocation": "8346:27:0",
														"nodeType": "VariableDeclaration",
														"scope": 493,
														"src": "8341:32:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 479,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "8341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 484,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 481,
														"name": "K",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "8376:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 482,
														"name": "estimatedContractERC20Balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "8380:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8376:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8341:68:0"
											},
											{
												"expression": {
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 485,
														"name": "ethToSend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 465,
														"src": "8418:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 486,
															"name": "contractEthBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "8430:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 487,
															"name": "contractETHBalanceAfterSwap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "8451:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8430:48:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8418:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 490,
												"nodeType": "ExpressionStatement",
												"src": "8418:60:0"
											},
											{
												"expression": {
													"id": 491,
													"name": "ethToSend",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 465,
													"src": "8494:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 466,
												"id": 492,
												"nodeType": "Return",
												"src": "8487:16:0"
											}
										]
									},
									"functionSelector": "903875f7",
									"id": 494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "estimateSwapForEth",
									"nameLocation": "8027:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "_amountERC20Token",
												"nameLocation": "8051:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "8046:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8046:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8045:24:0"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "ethToSend",
												"nameLocation": "8098:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "8093:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8093:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8092:16:0"
									},
									"scope": 615,
									"src": "8018:491:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 500,
									"name": "SwapForERC20Token",
									"nameLocation": "8519:17:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountERC20TokenWithdrew",
												"nameLocation": "8542:24:0",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "8537:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountEthDeposited",
												"nameLocation": "8573:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "8568:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8568:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:56:0"
									},
									"src": "8513:80:0"
								},
								{
									"body": {
										"id": 565,
										"nodeType": "Block",
										"src": "9025:563:0",
										"statements": [
											{
												"expression": {
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 507,
														"name": "contractEthBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "9034:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 508,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "9056:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "9056:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9034:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "9034:31:0"
											},
											{
												"assignments": [
													513
												],
												"declarations": [
													{
														"constant": false,
														"id": 513,
														"mutability": "mutable",
														"name": "contractERC20TokenBalanceAfterSwap",
														"nameLocation": "9079:34:0",
														"nodeType": "VariableDeclaration",
														"scope": 565,
														"src": "9074:39:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 512,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "9074:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 517,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 514,
														"name": "K",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "9116:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 515,
														"name": "contractEthBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "9120:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9116:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9074:64:0"
											},
											{
												"expression": {
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 518,
														"name": "ERC20TokenToSend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "9147:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 519,
															"name": "contractERC20TokenBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "9166:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 520,
															"name": "contractERC20TokenBalanceAfterSwap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "9194:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9166:62:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9147:81:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 523,
												"nodeType": "ExpressionStatement",
												"src": "9147:81:0"
											},
											{
												"assignments": [
													525
												],
												"declarations": [
													{
														"constant": false,
														"id": 525,
														"mutability": "mutable",
														"name": "reciever",
														"nameLocation": "9253:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 565,
														"src": "9237:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 524,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9237:15:0",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 531,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 528,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9272:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9272:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 527,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9264:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 526,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9264:8:0",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9264:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9237:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 537,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9320:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Exchange_$615",
																		"typeString": "contract Exchange"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Exchange_$615",
																		"typeString": "contract Exchange"
																	}
																],
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9312:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 535,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9312:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9312:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 539,
															"name": "ERC20TokenToSend",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "9327:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 532,
															"name": "ierc20Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "9292:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1280",
																"typeString": "contract IERC20"
															}
														},
														"id": 534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1267,
														"src": "9292:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9292:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 541,
												"nodeType": "ExpressionStatement",
												"src": "9292:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 547,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9386:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Exchange_$615",
																		"typeString": "contract Exchange"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Exchange_$615",
																		"typeString": "contract Exchange"
																	}
																],
																"id": 546,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9378:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 545,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9378:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9378:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 549,
															"name": "reciever",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "9393:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 550,
															"name": "ERC20TokenToSend",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "9403:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 542,
															"name": "ierc20Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "9353:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1280",
																"typeString": "contract IERC20"
															}
														},
														"id": 544,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1279,
														"src": "9353:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9353:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 552,
												"nodeType": "ExpressionStatement",
												"src": "9353:67:0"
											},
											{
												"expression": {
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 553,
														"name": "contractERC20TokenBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "9429:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 554,
														"name": "contractERC20TokenBalanceAfterSwap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "9457:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9429:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 556,
												"nodeType": "ExpressionStatement",
												"src": "9429:62:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 558,
															"name": "ERC20TokenToSend",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "9523:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 559,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9540:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "9540:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 557,
														"name": "SwapForERC20Token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "9505:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9505:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 562,
												"nodeType": "EmitStatement",
												"src": "9500:50:0"
											},
											{
												"expression": {
													"id": 563,
													"name": "ERC20TokenToSend",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 505,
													"src": "9566:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 506,
												"id": 564,
												"nodeType": "Return",
												"src": "9559:23:0"
											}
										]
									},
									"functionSelector": "29cbab3e",
									"id": 566,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 503,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 502,
												"name": "nonReentrancy",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "8972:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "8972:13:0"
										}
									],
									"name": "swapForERC20Token",
									"nameLocation": "8943:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8960:2:0"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "ERC20TokenToSend",
												"nameLocation": "9008:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "9003:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9003:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9002:23:0"
									},
									"scope": 615,
									"src": "8934:654:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 596,
										"nodeType": "Block",
										"src": "10005:292:0",
										"statements": [
											{
												"assignments": [
													574
												],
												"declarations": [
													{
														"constant": false,
														"id": 574,
														"mutability": "mutable",
														"name": "estimatedContractEthBalance",
														"nameLocation": "10019:27:0",
														"nodeType": "VariableDeclaration",
														"scope": 596,
														"src": "10014:32:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 573,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "10014:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 578,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 575,
														"name": "contractEthBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "10049:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 576,
														"name": "_amountEth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "10070:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10049:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10014:66:0"
											},
											{
												"assignments": [
													580
												],
												"declarations": [
													{
														"constant": false,
														"id": 580,
														"mutability": "mutable",
														"name": "contractERC20TokenBalanceAfterSwap",
														"nameLocation": "10094:34:0",
														"nodeType": "VariableDeclaration",
														"scope": 596,
														"src": "10089:39:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 579,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "10089:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 584,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 581,
														"name": "K",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "10131:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 582,
														"name": "estimatedContractEthBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 574,
														"src": "10135:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10131:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10089:73:0"
											},
											{
												"expression": {
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 585,
														"name": "ERC20TokenToSend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 571,
														"src": "10171:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 586,
															"name": "contractERC20TokenBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "10190:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 587,
															"name": "contractERC20TokenBalanceAfterSwap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "10218:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10190:62:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10171:81:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "10171:81:0"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 591,
																"name": "ERC20TokenToSend",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 571,
																"src": "10269:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31653139",
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10286:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000_by_1",
																	"typeString": "int_const 10000000000000000000"
																},
																"value": "1e19"
															},
															"src": "10269:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 594,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "10268:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 572,
												"id": 595,
												"nodeType": "Return",
												"src": "10261:30:0"
											}
										]
									},
									"functionSelector": "79ed3562",
									"id": 597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "estimateSwapForERC20Token",
									"nameLocation": "9917:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "_amountEth",
												"nameLocation": "9948:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "9943:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9943:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9942:17:0"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "ERC20TokenToSend",
												"nameLocation": "9988:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "9983:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9983:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9982:23:0"
									},
									"scope": 615,
									"src": "9908:389:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 613,
										"nodeType": "Block",
										"src": "10546:65:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 606,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "10593:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Exchange_$615",
																					"typeString": "contract Exchange"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Exchange_$615",
																					"typeString": "contract Exchange"
																				}
																			],
																			"id": 605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10585:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 604,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10585:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10585:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 602,
																		"name": "ierc20Token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5,
																		"src": "10563:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1280",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1237,
																	"src": "10563:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10563:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 609,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10600:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "10563:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 611,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "10562:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 601,
												"id": 612,
												"nodeType": "Return",
												"src": "10555:50:0"
											}
										]
									},
									"functionSelector": "bc23ae5e",
									"id": 614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ERC20TokenBalance",
									"nameLocation": "10496:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10514:2:0"
									},
									"returnParameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "10540:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10540:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10539:6:0"
									},
									"scope": 615,
									"src": "10487:124:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 616,
							"src": "331:10282:0",
							"usedErrors": []
						}
					],
					"src": "39:10578:0"
				},
				"id": 0
			},
			"openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1327
						],
						"ERC20": [
							1202
						],
						"IERC20": [
							1280
						],
						"IERC20Metadata": [
							1305
						]
					},
					"id": 1203,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 617,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:1"
						},
						{
							"absolutePath": "openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 618,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1203,
							"sourceUnit": 1281,
							"src": "130:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 619,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1203,
							"sourceUnit": 1306,
							"src": "153:41:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "openzeppelin-contracts/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 620,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1203,
							"sourceUnit": 1328,
							"src": "195:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 622,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1327,
										"src": "1550:7:1"
									},
									"id": 623,
									"nodeType": "InheritanceSpecifier",
									"src": "1550:7:1"
								},
								{
									"baseName": {
										"id": 624,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1280,
										"src": "1559:6:1"
									},
									"id": 625,
									"nodeType": "InheritanceSpecifier",
									"src": "1559:6:1"
								},
								{
									"baseName": {
										"id": 626,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1305,
										"src": "1567:14:1"
									},
									"id": 627,
									"nodeType": "InheritanceSpecifier",
									"src": "1567:14:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 621,
								"nodeType": "StructuredDocumentation",
								"src": "230:1301:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 1202,
							"linearizedBaseContracts": [
								1202,
								1305,
								1280,
								1327
							],
							"name": "ERC20",
							"nameLocation": "1541:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 631,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1624:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1202,
									"src": "1588:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 630,
										"keyType": {
											"id": 628,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1596:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1588:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 629,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1607:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 637,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1696:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 1202,
									"src": "1640:67:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 636,
										"keyType": {
											"id": 632,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1648:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1640:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 635,
											"keyType": {
												"id": 633,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1667:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1659:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 634,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 639,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1730:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 1202,
									"src": "1714:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 638,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1714:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 641,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1764:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 1202,
									"src": "1749:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 640,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1749:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 643,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1790:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1202,
									"src": "1775:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 642,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1775:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 659,
										"nodeType": "Block",
										"src": "2036:57:1",
										"statements": [
											{
												"expression": {
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 651,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 641,
														"src": "2046:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 652,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 646,
														"src": "2054:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2046:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 654,
												"nodeType": "ExpressionStatement",
												"src": "2046:13:1"
											},
											{
												"expression": {
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 655,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 643,
														"src": "2069:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 656,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "2079:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2069:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 658,
												"nodeType": "ExpressionStatement",
												"src": "2069:17:1"
											}
										]
									},
									"documentation": {
										"id": 644,
										"nodeType": "StructuredDocumentation",
										"src": "1804:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 660,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2006:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "1992:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 645,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1992:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2027:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "2013:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 647,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2013:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1991:44:1"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2036:0:1"
									},
									"scope": 1202,
									"src": "1980:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1292
									],
									"body": {
										"id": 669,
										"nodeType": "Block",
										"src": "2227:29:1",
										"statements": [
											{
												"expression": {
													"id": 667,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 641,
													"src": "2244:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 666,
												"id": 668,
												"nodeType": "Return",
												"src": "2237:12:1"
											}
										]
									},
									"documentation": {
										"id": 661,
										"nodeType": "StructuredDocumentation",
										"src": "2099:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2167:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 663,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2194:8:1"
									},
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2171:2:1"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "2212:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 664,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2212:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2211:15:1"
									},
									"scope": 1202,
									"src": "2158:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1298
									],
									"body": {
										"id": 679,
										"nodeType": "Block",
										"src": "2440:31:1",
										"statements": [
											{
												"expression": {
													"id": 677,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 643,
													"src": "2457:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 676,
												"id": 678,
												"nodeType": "Return",
												"src": "2450:14:1"
											}
										]
									},
									"documentation": {
										"id": 671,
										"nodeType": "StructuredDocumentation",
										"src": "2262:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2378:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 673,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2407:8:1"
									},
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2384:2:1"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "2425:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 674,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2425:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2424:15:1"
									},
									"scope": 1202,
									"src": "2369:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1304
									],
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "3169:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3186:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 686,
												"id": 688,
												"nodeType": "Return",
												"src": "3179:9:1"
											}
										]
									},
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "2477:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3113:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 683,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3144:8:1"
									},
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3121:2:1"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "3162:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 684,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3162:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3161:7:1"
									},
									"scope": 1202,
									"src": "3104:91:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1229
									],
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "3325:36:1",
										"statements": [
											{
												"expression": {
													"id": 697,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 639,
													"src": "3342:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 696,
												"id": 698,
												"nodeType": "Return",
												"src": "3335:19:1"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "3201:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3264:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 693,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3298:8:1"
									},
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3275:2:1"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "3316:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3316:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3315:9:1"
									},
									"scope": 1202,
									"src": "3255:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1237
									],
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "3502:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 709,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "3519:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 711,
													"indexExpression": {
														"id": 710,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "3529:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3519:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 708,
												"id": 712,
												"nodeType": "Return",
												"src": "3512:25:1"
											}
										]
									},
									"documentation": {
										"id": 701,
										"nodeType": "StructuredDocumentation",
										"src": "3367:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3428:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 705,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3475:8:1"
									},
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3446:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "3438:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3438:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:17:1"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "3493:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3493:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3492:9:1"
									},
									"scope": 1202,
									"src": "3419:125:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1247
									],
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "3825:104:1",
										"statements": [
											{
												"assignments": [
													726
												],
												"declarations": [
													{
														"constant": false,
														"id": 726,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3843:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 738,
														"src": "3835:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 725,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3835:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 729,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 727,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1317,
														"src": "3851:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3851:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3835:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 731,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "3883:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 732,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "3890:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 733,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "3894:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 730,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "3873:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3873:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "3873:28:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3918:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 724,
												"id": 737,
												"nodeType": "Return",
												"src": "3911:11:1"
											}
										]
									},
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "3550:185:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3749:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 721,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3801:8:1"
									},
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3766:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "3758:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3758:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3778:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "3770:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3757:28:1"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "3819:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 722,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3819:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:6:1"
									},
									"scope": 1202,
									"src": "3740:189:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1257
									],
									"body": {
										"id": 756,
										"nodeType": "Block",
										"src": "4085:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 750,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "4102:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 752,
														"indexExpression": {
															"id": 751,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "4114:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4102:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 754,
													"indexExpression": {
														"id": 753,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "4121:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4102:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 749,
												"id": 755,
												"nodeType": "Return",
												"src": "4095:34:1"
											}
										]
									},
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "3935:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3996:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 746,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4058:8:1"
									},
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4014:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "4006:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4029:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "4021:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4021:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:32:1"
									},
									"returnParameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "4076:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4076:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4075:9:1"
									},
									"scope": 1202,
									"src": "3987:149:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1267
									],
									"body": {
										"id": 781,
										"nodeType": "Block",
										"src": "4533:108:1",
										"statements": [
											{
												"assignments": [
													769
												],
												"declarations": [
													{
														"constant": false,
														"id": 769,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4551:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 781,
														"src": "4543:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 768,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4543:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 772,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 770,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1317,
														"src": "4559:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4559:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4543:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 774,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "4590:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 775,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "4597:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 776,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "4606:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 773,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "4581:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4581:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "4581:32:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4630:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 767,
												"id": 780,
												"nodeType": "Return",
												"src": "4623:11:1"
											}
										]
									},
									"documentation": {
										"id": 758,
										"nodeType": "StructuredDocumentation",
										"src": "4142:297:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4453:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 764,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4509:8:1"
									},
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4469:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "4461:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4461:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4486:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "4478:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4478:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4460:33:1"
									},
									"returnParameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "4527:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 765,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4527:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4526:6:1"
									},
									"scope": 1202,
									"src": "4444:197:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1279
									],
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "5306:153:1",
										"statements": [
											{
												"assignments": [
													796
												],
												"declarations": [
													{
														"constant": false,
														"id": 796,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5324:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 814,
														"src": "5316:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 795,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5316:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 799,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 797,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1317,
														"src": "5334:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5334:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5316:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 801,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "5372:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 802,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "5378:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 803,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "5387:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 800,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "5356:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5356:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "5356:38:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 807,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "5414:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 808,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "5420:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 809,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "5424:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 806,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "5404:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5404:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "5404:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5448:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 794,
												"id": 813,
												"nodeType": "Return",
												"src": "5441:11:1"
											}
										]
									},
									"documentation": {
										"id": 783,
										"nodeType": "StructuredDocumentation",
										"src": "4647:551:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5212:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 791,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5282:8:1"
									},
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5233:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "5225:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5225:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5247:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "5239:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5259:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "5251:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5251:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5224:42:1"
									},
									"returnParameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "5300:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 792,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5300:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5299:6:1"
									},
									"scope": 1202,
									"src": "5203:256:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 843,
										"nodeType": "Block",
										"src": "5948:140:1",
										"statements": [
											{
												"assignments": [
													826
												],
												"declarations": [
													{
														"constant": false,
														"id": 826,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5966:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 843,
														"src": "5958:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 825,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5958:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 829,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 827,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1317,
														"src": "5974:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5974:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5958:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 831,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "6005:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 832,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 818,
															"src": "6012:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 834,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 826,
																		"src": "6031:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 835,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 818,
																		"src": "6038:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 833,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "6021:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6021:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 837,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 820,
																"src": "6049:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6021:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 830,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "5996:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5996:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "5996:64:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6077:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 824,
												"id": 842,
												"nodeType": "Return",
												"src": "6070:11:1"
											}
										]
									},
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "5465:384:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5863:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5889:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "5881:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5881:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5906:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "5898:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5880:37:1"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "5942:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 822,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5942:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5941:6:1"
									},
									"scope": 1202,
									"src": "5854:234:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 884,
										"nodeType": "Block",
										"src": "6674:328:1",
										"statements": [
											{
												"assignments": [
													855
												],
												"declarations": [
													{
														"constant": false,
														"id": 855,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6692:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 884,
														"src": "6684:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 854,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6684:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 858,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 856,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1317,
														"src": "6700:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6700:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6684:28:1"
											},
											{
												"assignments": [
													860
												],
												"declarations": [
													{
														"constant": false,
														"id": 860,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6730:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 884,
														"src": "6722:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 859,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6722:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 865,
												"initialValue": {
													"arguments": [
														{
															"id": 862,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "6759:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 863,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "6766:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 861,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "6749:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6749:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6722:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 867,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 860,
																"src": "6792:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 868,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 849,
																"src": "6812:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6792:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6829:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 866,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6784:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6784:85:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 872,
												"nodeType": "ExpressionStatement",
												"src": "6784:85:1"
											},
											{
												"id": 881,
												"nodeType": "UncheckedBlock",
												"src": "6879:95:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 874,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 855,
																	"src": "6912:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 875,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 847,
																	"src": "6919:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 876,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 860,
																		"src": "6928:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 877,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 849,
																		"src": "6947:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6928:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 873,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1136,
																"src": "6903:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6903:60:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 880,
														"nodeType": "ExpressionStatement",
														"src": "6903:60:1"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6991:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 853,
												"id": 883,
												"nodeType": "Return",
												"src": "6984:11:1"
											}
										]
									},
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "6094:476:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6584:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6610:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "6602:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6602:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6627:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "6619:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6619:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6601:42:1"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "6668:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 851,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6668:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6667:6:1"
									},
									"scope": 1202,
									"src": "6575:427:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 961,
										"nodeType": "Block",
										"src": "7534:710:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 896,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 888,
																"src": "7552:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 899,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7568:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7560:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 897,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7560:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 900,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7560:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7552:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7572:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 895,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7544:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7544:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 904,
												"nodeType": "ExpressionStatement",
												"src": "7544:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 906,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 890,
																"src": "7630:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7644:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7636:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 907,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7636:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 910,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7636:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7630:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7648:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 905,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7622:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7622:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 914,
												"nodeType": "ExpressionStatement",
												"src": "7622:64:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 916,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "7718:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 917,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "7724:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 918,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "7728:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 915,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "7697:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7697:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 920,
												"nodeType": "ExpressionStatement",
												"src": "7697:38:1"
											},
											{
												"assignments": [
													922
												],
												"declarations": [
													{
														"constant": false,
														"id": 922,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7754:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 961,
														"src": "7746:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 921,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7746:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 926,
												"initialValue": {
													"baseExpression": {
														"id": 923,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "7768:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 925,
													"indexExpression": {
														"id": 924,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "7778:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7768:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7746:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 928,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 922,
																"src": "7801:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 929,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 892,
																"src": "7816:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7801:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7824:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 927,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7793:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7793:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 933,
												"nodeType": "ExpressionStatement",
												"src": "7793:72:1"
											},
											{
												"id": 948,
												"nodeType": "UncheckedBlock",
												"src": "7875:273:1",
												"statements": [
													{
														"expression": {
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 934,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 631,
																	"src": "7899:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 936,
																"indexExpression": {
																	"id": 935,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 888,
																	"src": "7909:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7899:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 939,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 937,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 922,
																	"src": "7917:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 938,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 892,
																	"src": "7931:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7917:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7899:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 941,
														"nodeType": "ExpressionStatement",
														"src": "7899:38:1"
													},
													{
														"expression": {
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 942,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 631,
																	"src": "8114:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 944,
																"indexExpression": {
																	"id": 943,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 890,
																	"src": "8124:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8114:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 945,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 892,
																"src": "8131:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8114:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 947,
														"nodeType": "ExpressionStatement",
														"src": "8114:23:1"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 950,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "8172:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 951,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "8178:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 952,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "8182:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 949,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1214,
														"src": "8163:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8163:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 954,
												"nodeType": "EmitStatement",
												"src": "8158:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 956,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "8220:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 957,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "8226:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 958,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "8230:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 955,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "8200:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8200:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "8200:37:1"
											}
										]
									},
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "7008:443:1",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7465:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7483:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "7475:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7475:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7497:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "7489:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7489:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7509:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "7501:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7501:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7474:42:1"
									},
									"returnParameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7534:0:1"
									},
									"scope": 1202,
									"src": "7456:788:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1018,
										"nodeType": "Block",
										"src": "8585:470:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 971,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 965,
																"src": "8603:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 974,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8622:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 973,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8614:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 972,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8614:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 975,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8614:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8603:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8626:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 970,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8595:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8595:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 979,
												"nodeType": "ExpressionStatement",
												"src": "8595:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8700:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 982,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8692:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 981,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8692:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8692:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 985,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "8704:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 986,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "8713:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 980,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "8671:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8671:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "8671:49:1"
											},
											{
												"expression": {
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 989,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "8731:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 990,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "8747:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8731:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 992,
												"nodeType": "ExpressionStatement",
												"src": "8731:22:1"
											},
											{
												"id": 999,
												"nodeType": "UncheckedBlock",
												"src": "8763:175:1",
												"statements": [
													{
														"expression": {
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 993,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 631,
																	"src": "8899:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 995,
																"indexExpression": {
																	"id": 994,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 965,
																	"src": "8909:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8899:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 996,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 967,
																"src": "8921:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8899:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 998,
														"nodeType": "ExpressionStatement",
														"src": "8899:28:1"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8969:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1002,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8961:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1001,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8961:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8961:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1005,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "8973:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1006,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "8982:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1000,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1214,
														"src": "8952:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8952:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1008,
												"nodeType": "EmitStatement",
												"src": "8947:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9028:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1011,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9020:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1010,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9020:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9020:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1014,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "9032:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1015,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "9041:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1009,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "9000:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9000:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1017,
												"nodeType": "ExpressionStatement",
												"src": "9000:48:1"
											}
										]
									},
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "8250:265:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 1019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8529:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8543:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "8535:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8535:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8560:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "8552:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8552:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:33:1"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8585:0:1"
									},
									"scope": 1202,
									"src": "8520:535:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1090,
										"nodeType": "Block",
										"src": "9440:594:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1028,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1022,
																"src": "9458:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9477:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9469:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1029,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9469:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1032,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9469:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9458:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9481:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 1027,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9450:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9450:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1036,
												"nodeType": "ExpressionStatement",
												"src": "9450:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1038,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "9549:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9566:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9558:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1039,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9558:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9558:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1043,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "9570:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1037,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "9528:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9528:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1045,
												"nodeType": "ExpressionStatement",
												"src": "9528:49:1"
											},
											{
												"assignments": [
													1047
												],
												"declarations": [
													{
														"constant": false,
														"id": 1047,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9596:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 1090,
														"src": "9588:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1046,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9588:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1051,
												"initialValue": {
													"baseExpression": {
														"id": 1048,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "9613:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1050,
													"indexExpression": {
														"id": 1049,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "9623:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9613:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9588:43:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1053,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1047,
																"src": "9649:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1054,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1024,
																"src": "9667:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9649:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9675:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 1052,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9641:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9641:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "9641:71:1"
											},
											{
												"id": 1071,
												"nodeType": "UncheckedBlock",
												"src": "9722:194:1",
												"statements": [
													{
														"expression": {
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1059,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 631,
																	"src": "9746:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1061,
																"indexExpression": {
																	"id": 1060,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1022,
																	"src": "9756:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9746:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1062,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1047,
																	"src": "9767:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1063,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1024,
																	"src": "9784:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9767:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9746:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1066,
														"nodeType": "ExpressionStatement",
														"src": "9746:44:1"
													},
													{
														"expression": {
															"id": 1069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1067,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 639,
																"src": "9883:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 1068,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1024,
																"src": "9899:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9883:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1070,
														"nodeType": "ExpressionStatement",
														"src": "9883:22:1"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1073,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "9940:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9957:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9949:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1074,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9949:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9949:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1078,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "9961:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1072,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1214,
														"src": "9931:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9931:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1080,
												"nodeType": "EmitStatement",
												"src": "9926:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1082,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "9999:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1085,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10016:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10008:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1083,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10008:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10008:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1087,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "10020:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1081,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "9979:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9979:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1089,
												"nodeType": "ExpressionStatement",
												"src": "9979:48:1"
											}
										]
									},
									"documentation": {
										"id": 1020,
										"nodeType": "StructuredDocumentation",
										"src": "9061:309:1",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 1091,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9384:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9398:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "9390:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9390:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9415:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "9407:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9407:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9389:33:1"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9440:0:1"
									},
									"scope": 1202,
									"src": "9375:659:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1135,
										"nodeType": "Block",
										"src": "10540:257:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1102,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1094,
																"src": "10558:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10575:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10567:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1103,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10567:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10567:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10558:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10579:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 1101,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10550:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10550:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1110,
												"nodeType": "ExpressionStatement",
												"src": "10550:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1112,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1096,
																"src": "10636:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10655:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10647:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1113,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10647:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10647:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10636:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10659:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 1111,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10628:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10628:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1120,
												"nodeType": "ExpressionStatement",
												"src": "10628:68:1"
											},
											{
												"expression": {
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1121,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "10707:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1124,
															"indexExpression": {
																"id": 1122,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1094,
																"src": "10719:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10707:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1125,
														"indexExpression": {
															"id": 1123,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "10726:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10707:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1126,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1098,
														"src": "10737:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10707:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1128,
												"nodeType": "ExpressionStatement",
												"src": "10707:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1130,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "10767:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1131,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "10774:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1132,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "10783:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1129,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1223,
														"src": "10758:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10758:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1134,
												"nodeType": "EmitStatement",
												"src": "10753:37:1"
											}
										]
									},
									"documentation": {
										"id": 1092,
										"nodeType": "StructuredDocumentation",
										"src": "10040:412:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 1136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10466:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10483:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "10475:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10475:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10498:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "10490:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10490:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10515:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "10507:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10474:48:1"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10540:0:1"
									},
									"scope": 1202,
									"src": "10457:340:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1178,
										"nodeType": "Block",
										"src": "11168:321:1",
										"statements": [
											{
												"assignments": [
													1147
												],
												"declarations": [
													{
														"constant": false,
														"id": 1147,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11186:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 1178,
														"src": "11178:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1146,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11178:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1152,
												"initialValue": {
													"arguments": [
														{
															"id": 1149,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "11215:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1150,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "11222:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1148,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "11205:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11205:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11178:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1153,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "11244:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11269:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1155,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11269:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1154,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11264:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11264:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1158,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11264:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11244:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1177,
												"nodeType": "IfStatement",
												"src": "11240:243:1",
												"trueBody": {
													"id": 1176,
													"nodeType": "Block",
													"src": "11283:200:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1161,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1147,
																			"src": "11305:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1162,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1143,
																			"src": "11325:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11305:26:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 1164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11333:31:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 1160,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11297:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11297:68:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1166,
															"nodeType": "ExpressionStatement",
															"src": "11297:68:1"
														},
														{
															"id": 1175,
															"nodeType": "UncheckedBlock",
															"src": "11379:94:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1168,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1139,
																				"src": "11416:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1169,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1141,
																				"src": "11423:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1172,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1170,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1147,
																					"src": "11432:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1171,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1143,
																					"src": "11451:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11432:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1167,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1136,
																			"src": "11407:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 1173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11407:51:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1174,
																	"nodeType": "ExpressionStatement",
																	"src": "11407:51:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1137,
										"nodeType": "StructuredDocumentation",
										"src": "10803:270:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 1179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11087:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11111:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "11103:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11103:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11126:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "11118:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11118:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11143:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "11135:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11102:48:1"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11168:0:1"
									},
									"scope": 1202,
									"src": "11078:411:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1189,
										"nodeType": "Block",
										"src": "12162:2:1",
										"statements": []
									},
									"documentation": {
										"id": 1180,
										"nodeType": "StructuredDocumentation",
										"src": "11495:573:1",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "12082:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12111:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "12103:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12103:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12125:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "12117:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12117:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12137:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "12129:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12129:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12102:42:1"
									},
									"returnParameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12162:0:1"
									},
									"scope": 1202,
									"src": "12073:91:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1200,
										"nodeType": "Block",
										"src": "12840:2:1",
										"statements": []
									},
									"documentation": {
										"id": 1191,
										"nodeType": "StructuredDocumentation",
										"src": "12170:577:1",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12761:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12789:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "12781:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12781:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12803:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "12795:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12795:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12815:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "12807:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12807:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12780:42:1"
									},
									"returnParameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12840:0:1"
									},
									"scope": 1202,
									"src": "12752:90:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1203,
							"src": "1532:11312:1",
							"usedErrors": []
						}
					],
					"src": "105:12740:1"
				},
				"id": 1
			},
			"openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1280
						]
					},
					"id": 1281,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1204,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1205,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1280,
							"linearizedBaseContracts": [
								1280
							],
							"name": "IERC20",
							"nameLocation": "212:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1206,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 1214,
									"name": "Transfer",
									"nameLocation": "394:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "403:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1210,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "425:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "445:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:2"
									},
									"src": "388:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1215,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 1223,
									"name": "Approval",
									"nameLocation": "625:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "634:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1219,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "657:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1221,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "682:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:2"
									},
									"src": "619:78:2"
								},
								{
									"documentation": {
										"id": 1224,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1229,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 1280,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1230,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1237,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 1280,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1238,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "1211:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "1223:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:2"
									},
									"returnParameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "1257:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:2"
									},
									"scope": 1280,
									"src": "1193:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1248,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "1557:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "1572:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:2"
									},
									"returnParameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "1612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:2"
									},
									"scope": 1280,
									"src": "1538:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1258,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "2291:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "2308:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:2"
									},
									"returnParameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "2342:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:2"
									},
									"scope": 1280,
									"src": "2274:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1268,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1279,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "2668:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "2682:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "2694:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:2"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "2728:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1276,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:2"
									},
									"scope": 1280,
									"src": "2646:88:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1281,
							"src": "202:2534:2",
							"usedErrors": []
						}
					],
					"src": "106:2631:2"
				},
				"id": 2
			},
			"openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1280
						],
						"IERC20Metadata": [
							1305
						]
					},
					"id": 1306,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1282,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:3"
						},
						{
							"absolutePath": "openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1283,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1306,
							"sourceUnit": 1281,
							"src": "135:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1285,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1280,
										"src": "305:6:3"
									},
									"id": 1286,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1284,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 1305,
							"linearizedBaseContracts": [
								1305,
								1280
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1287,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1289,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 1305,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1293,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1298,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1295,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 1305,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1299,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1304,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1301,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 1305,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1306,
							"src": "277:405:3",
							"usedErrors": []
						}
					],
					"src": "110:573:3"
				},
				"id": 3
			},
			"openzeppelin-contracts/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "openzeppelin-contracts/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1327
						]
					},
					"id": 1328,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1307,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1308,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1327,
							"linearizedBaseContracts": [
								1327
							],
							"name": "Context",
							"nameLocation": "626:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1316,
										"nodeType": "Block",
										"src": "702:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1313,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1312,
												"id": 1315,
												"nodeType": "Return",
												"src": "712:17:4"
											}
										]
									},
									"id": 1317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:4"
									},
									"returnParameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:4"
									},
									"scope": 1327,
									"src": "640:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1325,
										"nodeType": "Block",
										"src": "809:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1322,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1321,
												"id": 1324,
												"nodeType": "Return",
												"src": "819:15:4"
											}
										]
									},
									"id": 1326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:4"
									},
									"returnParameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "793:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1319,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:4"
									},
									"scope": 1327,
									"src": "742:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1328,
							"src": "608:235:4",
							"usedErrors": []
						}
					],
					"src": "86:758:4"
				},
				"id": 4
			}
		}
	}
}